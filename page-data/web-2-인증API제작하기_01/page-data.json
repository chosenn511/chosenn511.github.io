{"componentChunkName":"component---src-templates-post-tsx","path":"/web-2-인증API제작하기_01/","result":{"data":{"markdownRemark":{"html":"<p>유저 관련 API는 웹서비스에 가입하는 사용자 정보를 저장하고 이 정보를 사용하여 서비스를 이용할 수 있는 권한을 제어한다. 커스텀으로 만든 유저 모델과 매니저에 대해 정리하였다.</p>\n<br>\n<h2 id=\"커스텀-유저-모델---myuser\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EC%8A%A4%ED%85%80-%EC%9C%A0%EC%A0%80-%EB%AA%A8%EB%8D%B8---myuser\" aria-label=\"커스텀 유저 모델   myuser permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커스텀 유저 모델 - MyUser</h2>\n<p>유저 모델은 커스텀으로 <code class=\"language-text\">AbstractBaseUser</code>를 상속받아 구현하였다.</p>\n<h3 id=\"abstractuser와-abstractbaseuser의-차이\" style=\"position:relative;\"><a href=\"#abstractuser%EC%99%80-abstractbaseuser%EC%9D%98-%EC%B0%A8%EC%9D%B4\" aria-label=\"abstractuser와 abstractbaseuser의 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AbstractUser와 AbstractBaseUser의 차이</h3>\n<p>장고에서 유저 모델을 정의할 때 상속받을 수 있는 클래스는 <code class=\"language-text\">AbstractUser</code>와 <code class=\"language-text\">AbstractBaseUser</code> 두 가지가 있다.</p>\n<p><code class=\"language-text\">AbstractUser</code>는 장고가 제공하는 완벽한 추상 클래스로, 사용자 객체를 생성하는데 필요한 필드들을 대부분 갖추고 있다. 이를 상속받아 부가적으로 필요한 프로필 관련 필드와  메서드를 추가하여 사용한다.</p>\n<br>\n<p><code class=\"language-text\">AbstractBaseUser</code>의 경우에는 인증 기능만을 가지고 있는 추상 클래스로 필드가 따로 정의되어 있지 않다. 가지고 있는 필드는 <code class=\"language-text\">password</code>와 <code class=\"language-text\">last_login</code> 뿐이다. 따라서 해당 추상클래스를 상속받아 유저 서브클래스를 만들 경우에는 필드를 하나하나 정의해주어야 한다.</p>\n<p>예를 들어 가장 기본적인 필드인 <code class=\"language-text\">username</code>,<code class=\"language-text\">nickname</code> 등의 필드도 정의되어 있지 않으며, 어떤 필드에 반드시 값을 적어주어야하는지(<code class=\"language-text\">required</code> 설정) 등을 따로 관리해주어야 한다. 또 유저를 어떻게 저장할 것인지를 설정해주는 모델 매니저도 존재하지 않기 때문에 해당 부분을 직접 만들어 커스터마이징할 수 있다.</p>\n<br>\n<h3 id=\"언제-무엇을\" style=\"position:relative;\"><a href=\"#%EC%96%B8%EC%A0%9C-%EB%AC%B4%EC%97%87%EC%9D%84\" aria-label=\"언제 무엇을 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>언제 무엇을?</h3>\n<p>만약 장고의 기존 인증 설정을 바꾸고 싶다면 <code class=\"language-text\">AbstractBaseUser</code>를 사용하면 된다. 반면에 기존에 유저모델과 데이터가 존재하고 몇몇 기능만 상속받아 사용하고 싶다면 <code class=\"language-text\">AbstractUser</code>를 상속받아 사용하는 것이 편하다.  </p>\n<br>\n<h3 id=\"code-classlanguage-textabstractbaseusercode를-상속받은-myuser-모델\" style=\"position:relative;\"><a href=\"#code-classlanguage-textabstractbaseusercode%EB%A5%BC-%EC%83%81%EC%86%8D%EB%B0%9B%EC%9D%80-myuser-%EB%AA%A8%EB%8D%B8\" aria-label=\"code classlanguage textabstractbaseusercode를 상속받은 myuser 모델 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">AbstractBaseUser</code>를 상속받은 MyUser 모델</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 전체서비스 내 커스텀유저 모델</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyUser</span><span class=\"token punctuation\">(</span>AbstractBaseUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 장고, 페이스북 로그인 타입 선택하는 필드.</span>\n    USER_TYPE_DJANGO <span class=\"token operator\">=</span> <span class=\"token string\">'django'</span>\n    USER_TYPE_FACEBOOK <span class=\"token operator\">=</span> <span class=\"token string\">'facebook'</span>\n    USER_TYPE_CHOICES <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">(</span><span class=\"token string\">'django'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Basic Login'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span><span class=\"token string\">'facebook'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Facebook Login'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 장고, 페이스북 로그인 유저를 구분하는 필드</span>\n    user_type <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>\n        max_length<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n        choices<span class=\"token operator\">=</span>USER_TYPE_CHOICES<span class=\"token punctuation\">,</span>\n        default<span class=\"token operator\">=</span>USER_TYPE_DJANGO<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 회원가입시 입력한 사용자의 ID</span>\n    username <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>\n        max_length<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n        unique<span class=\"token operator\">=</span><span class=\"token boolean\">True</span>\n    <span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 사용자의 이름을 저장하는 필드. 회원가입시 등록</span>\n    name <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>\n        max_length<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 사용자의 이메일을 저장하는 필드. 페이스북 사용자용</span>\n    email <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>EmailField<span class=\"token punctuation\">(</span>default<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 사용자 프로필이미지를 저장하는 필드.</span>\n    img_profile <span class=\"token operator\">=</span> CustomImageField<span class=\"token punctuation\">(</span>\n        upload_to<span class=\"token operator\">=</span><span class=\"token string\">'member'</span><span class=\"token punctuation\">,</span>\n        default<span class=\"token operator\">=</span><span class=\"token string\">'member/basic_profile.png'</span><span class=\"token punctuation\">,</span>\n        blank<span class=\"token operator\">=</span><span class=\"token boolean\">True</span>\n    <span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># AbstractBaseUser를 상속받음으로써 정의해줘야하는 bool 필드들</span>\n    is_staff <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>BooleanField<span class=\"token punctuation\">(</span>default<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n    is_admin <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>BooleanField<span class=\"token punctuation\">(</span>default<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n    is_active <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>BooleanField<span class=\"token punctuation\">(</span>default<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    is_superuser <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>BooleanField<span class=\"token punctuation\">(</span>default<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># custom manager 설정</span>\n    objects <span class=\"token operator\">=</span> MyUserManager<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    EMAIL_FIELD <span class=\"token operator\">=</span> <span class=\"token string\">'username'</span>\n    USERNAME_FIELD <span class=\"token operator\">=</span> <span class=\"token string\">'username'</span>\n    REQUIRED_FIELDS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>name <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>name <span class=\"token keyword\">else</span> self<span class=\"token punctuation\">.</span>username\n\n    <span class=\"token decorator annotation punctuation\">@property</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">is_staff</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"일반 사용자 or 스태프 권한\"\"\"</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>is_admin\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">has_module_perms</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> app_label<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"user가 주어진 app_label에 해당하는 권한이 있는지, has_perm과 비슷\"\"\"</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>is_active <span class=\"token keyword\">and</span> self<span class=\"token punctuation\">.</span>is_superuser<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n        <span class=\"token keyword\">return</span> auth_models<span class=\"token punctuation\">.</span>_user_has_module_perms<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> app_label<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">has_perm</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> perm<span class=\"token punctuation\">,</span> obj<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>is_active <span class=\"token keyword\">and</span> self<span class=\"token punctuation\">.</span>is_superuser<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n        <span class=\"token keyword\">return</span> auth_models<span class=\"token punctuation\">.</span>_user_has_perm<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> perm<span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># AbstractBaseUser에는 존재하지 않으므로 따로 선언해줌.</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">user_permissions</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>_user_permissions\n\n    <span class=\"token comment\"># 장고 admin 이름출력시 필요한 메서드. AbstractBaseUser에는 없어서 따로 정의해줌.</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_full_name</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>username\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_short_name</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>username</code></pre></div>\n<br>\n<p><strong><code class=\"language-text\">get_full_name()</code>과 <code class=\"language-text\">get_short_name()</code></strong></p>\n<p>특히, <code class=\"language-text\">get_full_name()</code>메서드와 <code class=\"language-text\">get_short_name()</code> 메서드는 <code class=\"language-text\">AbstractBaseUser</code>를 사용할 때 쉽게 간과하는 부분이다. 위의 두 메서드는 <code class=\"language-text\">AbstractBaseUser</code> 클래스 내에 다음과 같이 정의되어 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token keyword\">def</span> <span class=\"token function\">get_full_name</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">raise</span> NotImplementedError<span class=\"token punctuation\">(</span><span class=\"token string\">'subclasses of AbstractBaseUser must provide a get_full_name() method'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_short_name</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">raise</span> NotImplementedError<span class=\"token punctuation\">(</span><span class=\"token string\">'subclasses of AbstractBaseUser must provide a get_short_name() method.'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>즉, 따로 정의되어 있지 않고 없으면 에러메세지만 반환한다. 해당 메서드들은 관리자 페이지에서 로그인할 경우 이름을 렌더해줄 때 사용된다.</p>\n<p>만약 두 메서드를 오버라이드 하지 않은 모델을 정의하고 관리자를 생성하여 관리자 페이지에 로그인할 경우 에러가 발생한다. 따라서 위의 <code class=\"language-text\">MyUser</code> 모델에 정의해주었다.</p>\n<br>\n<h3 id=\"커스텀-유저모델-매니저-정의하기\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EC%8A%A4%ED%85%80-%EC%9C%A0%EC%A0%80%EB%AA%A8%EB%8D%B8-%EB%A7%A4%EB%8B%88%EC%A0%80-%EC%A0%95%EC%9D%98%ED%95%98%EA%B8%B0\" aria-label=\"커스텀 유저모델 매니저 정의하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커스텀 유저모델 매니저 정의하기</h3>\n<p><code class=\"language-text\">AbstractBaseUser</code>에서는 ORM을 사용할 수 있는 objects 정의가 생략되어 있다. 따라서 유저를 생성할 수 있는 <code class=\"language-text\">create_user()</code>, <code class=\"language-text\">create_superuser()</code> 등을 따로 정의해주고 해당 매니저를 사용할 것임을 모델 안에 선언해주어야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 커스텀 사용자 생성 매니저</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyUserManager</span><span class=\"token punctuation\">(</span>BaseUserManager<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">create_user</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> email<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> password<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>extra_fields<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"\n        일반사용자 생성 메서드\n        \"\"\"</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            user <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">(</span>\n                user_type<span class=\"token operator\">=</span>User<span class=\"token punctuation\">.</span>USER_TYPE_DJANGO<span class=\"token punctuation\">,</span>\n                username<span class=\"token operator\">=</span>username<span class=\"token punctuation\">,</span>\n                name<span class=\"token operator\">=</span>name<span class=\"token punctuation\">,</span>\n                email<span class=\"token operator\">=</span>email <span class=\"token keyword\">if</span> email <span class=\"token keyword\">else</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">)</span>\n            extra_fields<span class=\"token punctuation\">.</span>setdefault<span class=\"token punctuation\">(</span><span class=\"token string\">'is_staff'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n            extra_fields<span class=\"token punctuation\">.</span>setdefault<span class=\"token punctuation\">(</span><span class=\"token string\">'is_superuser'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n            user<span class=\"token punctuation\">.</span>set_password<span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span>\n            user<span class=\"token punctuation\">.</span>is_active <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n            user<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> user\n        <span class=\"token keyword\">except</span> ValidationError<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">raise</span> ValidationError<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'detail'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Enter a proper Email Account'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">create_superuser</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> email<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> password<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>extra_fields<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"\n        관리자 생성 메서드\n        \"\"\"</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            superuser <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>create_user<span class=\"token punctuation\">(</span>\n                user_type<span class=\"token operator\">=</span>User<span class=\"token punctuation\">.</span>USER_TYPE_DJANGO<span class=\"token punctuation\">,</span>\n                username<span class=\"token operator\">=</span>username<span class=\"token punctuation\">,</span>\n                name<span class=\"token operator\">=</span>name<span class=\"token punctuation\">,</span>\n                password<span class=\"token operator\">=</span>password<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">)</span>\n            superuser<span class=\"token punctuation\">.</span>is_admin <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n            superuser<span class=\"token punctuation\">.</span>is_superuser <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n            superuser<span class=\"token punctuation\">.</span>is_active <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n            superuser<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> superuser\n        <span class=\"token keyword\">except</span> ValidationError<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">raise</span> ValidationError<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"detail\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Enter a proper Email Account\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br>\n<hr>\n<h2 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며</h2>\n<p><code class=\"language-text\">AbstractBaseUser</code>를 사용하면 정의 및 오버라이드해줘야 하는 요소가 많지만 그만큼 자유도가 높은 사용자 모델을 만들 수 있다.</p>\n<p><code class=\"language-text\">AbstractUser</code>를 사용하면 장고에서 제공해주는 필드와 인증 관련 메서드들로 쉽게 유저를 생성할 수 있는 대신 자유도는 떨어진다.</p>\n<p>유저를 생성, 관리하는 데 필요한 필드들이 무엇인지 구상해보고 필요에 따라 선택하여 사용하는 것이 좋겠다.</p>\n<br>","excerpt":"유저 관련 API는 웹서비스에 가입하는 사용자 정보를 저장하고 이 정보를 사용하여 서비스를 이용할 수 있는 권한을 제어한다. 커스텀으로 만든 유저 모델과 매니저에 대해 정리하였다. 커스텀 유저 모델 - MyUser 유저 모델은 커스텀으로 를 상속받아…","tableOfContents":"<ul>\n<li>\n<p><a href=\"/web-2-%EC%9D%B8%EC%A6%9DAPI%EC%A0%9C%EC%9E%91%ED%95%98%EA%B8%B0_01/#%EC%BB%A4%EC%8A%A4%ED%85%80-%EC%9C%A0%EC%A0%80-%EB%AA%A8%EB%8D%B8---myuser\">커스텀 유저 모델 - MyUser</a></p>\n<ul>\n<li><a href=\"/web-2-%EC%9D%B8%EC%A6%9DAPI%EC%A0%9C%EC%9E%91%ED%95%98%EA%B8%B0_01/#abstractuser%EC%99%80-abstractbaseuser%EC%9D%98-%EC%B0%A8%EC%9D%B4\">AbstractUser와 AbstractBaseUser의 차이</a></li>\n<li><a href=\"/web-2-%EC%9D%B8%EC%A6%9DAPI%EC%A0%9C%EC%9E%91%ED%95%98%EA%B8%B0_01/#%EC%96%B8%EC%A0%9C-%EB%AC%B4%EC%97%87%EC%9D%84\">언제 무엇을?</a></li>\n<li><a href=\"/web-2-%EC%9D%B8%EC%A6%9DAPI%EC%A0%9C%EC%9E%91%ED%95%98%EA%B8%B0_01/#code-classlanguage-textabstractbaseusercode%EB%A5%BC-%EC%83%81%EC%86%8D%EB%B0%9B%EC%9D%80-myuser-%EB%AA%A8%EB%8D%B8\"><code class=\"language-text\">AbstractBaseUser</code>를 상속받은 MyUser 모델</a></li>\n<li><a href=\"/web-2-%EC%9D%B8%EC%A6%9DAPI%EC%A0%9C%EC%9E%91%ED%95%98%EA%B8%B0_01/#%EC%BB%A4%EC%8A%A4%ED%85%80-%EC%9C%A0%EC%A0%80%EB%AA%A8%EB%8D%B8-%EB%A7%A4%EB%8B%88%EC%A0%80-%EC%A0%95%EC%9D%98%ED%95%98%EA%B8%B0\">커스텀 유저모델 매니저 정의하기</a></li>\n</ul>\n</li>\n<li><a href=\"/web-2-%EC%9D%B8%EC%A6%9DAPI%EC%A0%9C%EC%9E%91%ED%95%98%EA%B8%B0_01/#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며</a></li>\n</ul>","fields":{"slug":"/web-2-인증API제작하기_01/"},"frontmatter":{"title":"Web _ 2.1 인증 API <1부> - 유저 모델과 매니저","date":"Sep 22, 2017","tags":["Django","Project","Web development"],"keywords":["Development Note","Julia"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/web-2-인증API제작하기_01/","series":[{"slug":"/web-2-인증API제작하기_01/","title":"Web _ 2.1 인증 API <1부> - 유저 모델과 매니저","num":1},{"slug":"/web-2-인증API제작하기_02/","title":"Web _ 2.1 인증 API <2부> - REST의 토큰기반 인증","num":2}],"lastmod":"2017-09-22"}},"staticQueryHashes":["2027115977","694178885"]}