{"componentChunkName":"component---src-templates-post-tsx","path":"/ggcloudDeploy_02/","result":{"data":{"markdownRemark":{"html":"<p>이번 포스팅에서는 Cloud SQL Proxy를 통하여 PostgreSQL 데이터베이스를 생성, 연결하는 방법에 대해 설명할 예정이다.</p>\n<br>\n<h2 id=\"1-cloud-sql-proxy용-로컬환경-구축하기\" style=\"position:relative;\"><a href=\"#1-cloud-sql-proxy%EC%9A%A9-%EB%A1%9C%EC%BB%AC%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%B6%95%ED%95%98%EA%B8%B0\" aria-label=\"1 cloud sql proxy용 로컬환경 구축하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Cloud SQL Proxy용 로컬환경 구축하기</h2>\n<p>배포된 앱은 클라우드 SQL 인스턴스와 통신하기위해 Cloud SQL Proxy를 사용한다. 다음은 옵션 기능이지만, 로컬에서 테스트용을 설치하는 방법이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># Proxy 다운로드</span>\n$ curl <span class=\"token operator\">-</span>o cloud_sql_proxy https:<span class=\"token operator\">/</span><span class=\"token operator\">/</span>dl<span class=\"token punctuation\">.</span>google<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>cloudsql<span class=\"token operator\">/</span>cloud_sql_proxy<span class=\"token punctuation\">.</span>darwin<span class=\"token punctuation\">.</span>amd64\n\n<span class=\"token comment\"># 프록시 사용가능하도록 활성화</span>\n$ chmod <span class=\"token operator\">+</span>x cloud_sql_proxy</code></pre></div>\n<br>\n<h2 id=\"2-cloud-sql-인스턴스-생성\" style=\"position:relative;\"><a href=\"#2-cloud-sql-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%83%9D%EC%84%B1\" aria-label=\"2 cloud sql 인스턴스 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Cloud SQL 인스턴스 생성</h2>\n<p>이후 연결해 줄 Cloud SQL 인스턴스를 생성한다. 데이터베이스는 postgreSQL을 사용하기로 하였다.(아직은 베타버전을 제공하고 있다.)</p>\n<p>다음 명령어로 콘솔에서 인스턴스 이름, 사용할 CPU 개수와 메모리 크기를 명시해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">$ gcloud sql instances create <span class=\"token punctuation\">[</span>새로운 인스턴스명<span class=\"token punctuation\">]</span> <span class=\"token operator\">--</span>database<span class=\"token operator\">-</span>version=POSTGRES_9_6 \\\n       <span class=\"token operator\">--</span>cpu=<span class=\"token namespace\">[CPUS 갯수]</span> <span class=\"token operator\">--</span>memory=<span class=\"token punctuation\">[</span>메모리 사이즈<span class=\"token punctuation\">]</span></code></pre></div>\n<br>\n<p>아까 설치한 Cloud SDK를 사용하면 생성한 SQL 인스턴스의 정보 및 <code class=\"language-text\">connectionName</code>을 알아낼 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">$ gcloud sql instances describe <span class=\"token namespace\">[SQL 인스턴스명]</span></code></pre></div>\n<p><code class=\"language-text\">connectionName</code>은 설정파일(settings.py) 및 곧 생성할 <code class=\"language-text\">app.yaml</code>에 필요하므로 따로 보관해둔다. 보통 다음과 같이 구성되어 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># 예시</span>\n<span class=\"token comment\"># connectionName: [프로젝트명]:[리전위치]:[인스턴스 이름]</span>\n\nconnectionName: project11:asia<span class=\"token operator\">-</span>northeast1:</code></pre></div>\n<br>\n<h2 id=\"3-cloud-sql-실행하기\" style=\"position:relative;\"><a href=\"#3-cloud-sql-%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0\" aria-label=\"3 cloud sql 실행하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Cloud SQL 실행하기</h2>\n<p>앞서 발급받은 <code class=\"language-text\">connectionName</code>을 사용하여 Cloud SQL Proxy를 실행할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">$ <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>cloud_sql_proxy <span class=\"token operator\">-</span>instances=<span class=\"token string\">\"[connectionName]\"</span>=tcp:5432</code></pre></div>\n<p>이렇게 하면 로컬환경과 생성해준 Cloud SQL 인스턴스를 연결하는 테스팅 환경이 생긴다.</p>\n<p>데이터 베이스는 <code class=\"language-text\">psql</code>로 간단히 만들고 마이그레이션 해주었다.</p>\n<p>데이터베이스 테이블명과 비밀번호는 <code class=\"language-text\">settings.py</code>에 필요한 정보지만 외부에 노출되면 안되니 <strong>환경변수</strong>로 지정하거나 따로 <strong>시크릿 파일</strong>을 만들어서 관리하면 된다. 나 같은 경우에는 환경변수로 등록해주었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ export DATABASE_USER=&lt;만들어준 유저명&gt;\n$ export DATABASE_PASSWORD=&lt;비밀번호값&gt;</code></pre></div>\n<p>그리고 데이터베이스 설정을 장고 내 설정파일(<code class=\"language-text\">settings.py</code>)에 넣어준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">DATABASES <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'default'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\"># If you are using Cloud SQL for MySQL rather than PostgreSQL, set</span>\n        <span class=\"token comment\"># 'ENGINE': 'django.db.backends.mysql' instead of the following.</span>\n        <span class=\"token string\">'ENGINE'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'django.db.backends.postgresql'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'NAME'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'[test-db-name]'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'USER'</span><span class=\"token punctuation\">:</span> os<span class=\"token punctuation\">.</span>getenv<span class=\"token punctuation\">(</span><span class=\"token string\">'DATABASE_USER'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'PASSWORD'</span><span class=\"token punctuation\">:</span> os<span class=\"token punctuation\">.</span>getenv<span class=\"token punctuation\">(</span><span class=\"token string\">'DATABASE_PASSWORD'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'HOST'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'127.0.0.1'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'PORT'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'5432'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<h2 id=\"4-마치며\" style=\"position:relative;\"><a href=\"#4-%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"4 마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 마치며</h2>\n<p>다음 포스팅에서는 서비스 계정을 생성하여 Kubernetes 엔진 환경을 구성하는 방식에 대해 설명할 예정이다.</p>\n<br>","excerpt":"이번 포스팅에서는 Cloud SQL Proxy를 통하여 PostgreSQL 데이터베이스를 생성, 연결하는 방법에 대해 설명할 예정이다. 1. Cloud SQL Proxy용 로컬환경 구축하기 배포된 앱은 클라우드 SQL 인스턴스와 통신하기위해 Clou…","tableOfContents":"<ul>\n<li><a href=\"/ggcloudDeploy_02/#1-cloud-sql-proxy%EC%9A%A9-%EB%A1%9C%EC%BB%AC%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%B6%95%ED%95%98%EA%B8%B0\">1. Cloud SQL Proxy용 로컬환경 구축하기</a></li>\n<li><a href=\"/ggcloudDeploy_02/#2-cloud-sql-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%83%9D%EC%84%B1\">2. Cloud SQL 인스턴스 생성</a></li>\n<li><a href=\"/ggcloudDeploy_02/#3-cloud-sql-%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0\">3. Cloud SQL 실행하기</a></li>\n<li><a href=\"/ggcloudDeploy_02/#4-%EB%A7%88%EC%B9%98%EB%A9%B0\">4. 마치며</a></li>\n</ul>","fields":{"slug":"/ggcloudDeploy_02/"},"frontmatter":{"title":"Google News Lab > 2. 프록시 서버 및 데이터베이스 구축","date":"Jan 29, 2018","tags":["Google News Lab","Django"],"keywords":["Development Note","Julia"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/ggcloudDeploy_02/","series":[{"slug":"/ggcloudDeploy_01/","title":"Google News Lab > 1. 구글 클라우드 플랫폼을 사용한 배포 전 준비","num":1},{"slug":"/ggcloudDeploy_02/","title":"Google News Lab > 2. 프록시 서버 및 데이터베이스 구축","num":2},{"slug":"/ggcloudDeploy_03/","title":"Google News Lab > 3. Kubernetes 엔진 생성 전 설정","num":3},{"slug":"/ggcloudDeploy_04/","title":"Google News Lab > 4. Kubernetes 버킷 및 클러스터 엔진 생성","num":4},{"slug":"/ggcloudDeploy_05/","title":"Google News Lab > 5. 도커파일 생성 및 배포","num":5},{"slug":"/ggcloudDeploy_07/","title":"Google News Lab > 장고로 만든 웹사이트에 커스텀 파비콘(.ico) 적용시키기","num":7}],"lastmod":"2018-01-29"}},"staticQueryHashes":["2027115977","694178885"]}