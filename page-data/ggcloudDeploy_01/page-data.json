{"componentChunkName":"component---src-templates-post-tsx","path":"/ggcloudDeploy_01/","result":{"data":{"markdownRemark":{"html":"<p>오늘 포스팅은 오랜만에 삽질하며 구글 클라우드 플랫폼으로 장고 프로젝트 배포를 성공했기에, 그 방법을 다시 한번 숙지할 겸 공유하고자 한다.</p>\n<br>\n<h2 id=\"근황보고\" style=\"position:relative;\"><a href=\"#%EA%B7%BC%ED%99%A9%EB%B3%B4%EA%B3%A0\" aria-label=\"근황보고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>근황보고</h2>\n<p>현재 구글 뉴스랩 프로그램에 개발자로 참여하여 뉴스컨텐츠 제작 작업을 진행하고 있다. 뉴스랩 활동에 대해서는 프로그램이 끝나고 따로 포스팅할 예정이다 :) (블로그 활동이 뜸한 이유는 바로 이것때문!ㅋㅋ)</p>\n<br>\n<h2 id=\"시작-전-구상하기\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EC%9E%91-%EC%A0%84-%EA%B5%AC%EC%83%81%ED%95%98%EA%B8%B0\" aria-label=\"시작 전 구상하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시작 전 구상하기</h2>\n<p>AWS로 배포를 한번 해봤던 터라 배포과정은 대략적으로 다음과 같이 구상했다.</p>\n<p><code class=\"language-text\">장고 프로젝트 생성(데이터베이스 포함)</code> > <code class=\"language-text\">웹서버 구축</code> > <code class=\"language-text\">도커이미지 생성</code> > <code class=\"language-text\">구글 엔진에 이미지 배포</code></p>\n<p>하지만 AWS와 구글 엔진 작동 원리는 좀 달랐다.\n구글의 기본 스탠다드/플렉시블 엔진을 사용할 경우 배포 설정이 담긴 <code class=\"language-text\">app.yaml</code>와 <code class=\"language-text\">requirements.txt</code>만 있으면 배포가 된다.</p>\n<p>도커 이미지를 배포하려면 다른 엔진을 써야했는데,<br>\n처음에는 컴퓨트 엔진에 바로 도커이미지를 태울까 생각도 했었지만 장고의 도커이미지를 올리는 데 <code class=\"language-text\">Kubernete</code> 엔진이 적합하다는 튜토리얼의 문구를 믿고(...선택의 여지가 없었다. 문서가 너무 빈약함) 따라해보기로 했다.</p>\n<p><a href=\"https://cloud.google.com/python/django/kubernetes-engine\" target=\"_blank\">문서 바로가기 - Deploying Djnago with Kubernetes Engine</a></p>\n<br>\n<h2 id=\"1-장고-프로젝트-생성\" style=\"position:relative;\"><a href=\"#1-%EC%9E%A5%EA%B3%A0-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1\" aria-label=\"1 장고 프로젝트 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 장고 프로젝트 생성</h2>\n<p>먼저 배포할 장고 프로젝트를 생성한다. 생성하는 방법은 <a href=\"#\" target=\"_blank\">여기</a>에 따로 설명해놓았는데, 주의할 점은 <code class=\"language-text\">pyenv</code>를 사용하지 않고 <code class=\"language-text\">virtualenv</code>를 사용할 것이기 때문에 가상환경 설정은 따로 설명한다.</p>\n<p><code class=\"language-text\">Github</code>에 <a href=\"https://github.com/juliahwang/pilter_web/tree/master/\" target=\"_blank\">소스코드</a>를 올려놓았다.\n프로젝트를 만든 후 파일구조는 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>django_app\n<span class=\"token punctuation\">.</span>\n├── README<span class=\"token punctuation\">.</span>md\n├── __init__<span class=\"token punctuation\">.</span>py\n├── article\n│   ├── __init__<span class=\"token punctuation\">.</span>py\n│   ├── admin<span class=\"token punctuation\">.</span>py\n│   ├── apps<span class=\"token punctuation\">.</span>py\n│   ├── migrations\n│   ├── models<span class=\"token punctuation\">.</span>py\n│   ├── tests<span class=\"token punctuation\">.</span>py\n│   ├── urls<span class=\"token punctuation\">.</span>py\n│   └── views<span class=\"token punctuation\">.</span>py\n├── config\n│   ├── __init__<span class=\"token punctuation\">.</span>py\n│   ├── settings<span class=\"token punctuation\">.</span>py\n│   ├── urls<span class=\"token punctuation\">.</span>py\n│   └── wsgi<span class=\"token punctuation\">.</span>py\n├── manage<span class=\"token punctuation\">.</span>py\n├── static\n└── templates</code></pre></div>\n<br>\n<h2 id=\"2-가상환경-설정하기\" style=\"position:relative;\"><a href=\"#2-%EA%B0%80%EC%83%81%ED%99%98%EA%B2%BD-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\"2 가상환경 설정하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 가상환경 설정하기</h2>\n<p><strong>구글엔진을 쓰면서 가장 불편했던 점은 커멘드라인 툴이 파이썬 2.7까지만 호환된다는 점이다.</strong> 거기다가 개발은 파이썬 3으로 하라고 권장하니, 하나의 폴더 내에 2개의 가상환경을 만들어서 서로 바꿔가며 써야했다.</p>\n<p>이에 <code class=\"language-text\">virtualenv</code>를 사용했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">$ virtualenv <span class=\"token operator\">--</span>python=python2 pilter2\n$ virtualenv <span class=\"token operator\">--</span>python=python3 pilter3</code></pre></div>\n<p><code class=\"language-text\">pilter2</code>와 <code class=\"language-text\">pilter3</code>에 각각 파이썬2, 파이썬3을 설정하여 가상환경을 만들면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">$ virtualenv env\n$ source env<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>activate\n$ pip install <span class=\"token operator\">-</span>r requirements<span class=\"token punctuation\">.</span>txt</code></pre></div>\n<br>\n<h3 id=\"1-requirementstxt\" style=\"position:relative;\"><a href=\"#1-requirementstxt\" aria-label=\"1 requirementstxt permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(1) requirements.txt</h3>\n<p>쿠버네트 엔진에서 장고를 배포할 때 필요한 패키지는 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"txt\"><pre class=\"language-txt\"><code class=\"language-txt\">Django==1.10\nwheel==0.30.0\ngunicorn==19.7.1\npsycopg2==2.7.3.2\nPillow==5.0.0   (--&gt; ImageField를 쓰지 않는다면 생략 가능)</code></pre></div>\n<br>\n<h2 id=\"3-준비사항\" style=\"position:relative;\"><a href=\"#3-%EC%A4%80%EB%B9%84%EC%82%AC%ED%95%AD\" aria-label=\"3 준비사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 준비사항</h2>\n<h3 id=\"1-빌링-허용하기\" style=\"position:relative;\"><a href=\"#1-%EB%B9%8C%EB%A7%81-%ED%97%88%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"1 빌링 허용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(1) 빌링 허용하기</h3>\n<p>구글 서비스를 사용하기 위해 <a href=\"https://console.cloud.google.com\" target=\"_blank\">구글 클라우드 콘솔</a>로 접속한다. 첫 가입시 무료 크레딧 300개를 주니 해당 크레딧으로 빌링을 등록한다. 빌링을 등록해야 인스턴스, 데이터 스토리지 등의 서비스를 사용할 수 있다.</p>\n<br>\n<h3 id=\"2-google-cloud-sdk-설치하기\" style=\"position:relative;\"><a href=\"#2-google-cloud-sdk-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0\" aria-label=\"2 google cloud sdk 설치하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(2) Google Cloud SDK 설치하기</h3>\n<p>구글 클라우드 플랫폼에서 제공하는 리소스, 툴, 라이브러리 등을 사용하기 위해서는 SDK를 다운받아야한다. <a href=\"https://cloud.google.com/sdk/docs/\" target=\"_blank\">여기</a>서 자신의 컴퓨터 사양에 따라 다운받으면 된다. (아무데나 위치시켜도 되지만 나는 해당 폴더를 프로젝트 폴더 경로 내에 넣어주었다.)</p>\n<p>받고 나서는 설치 파일을 실행해주고, 초기화를 진행해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># 설치파일 실행</span>\n$ <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>google<span class=\"token operator\">-</span>cloud<span class=\"token operator\">-</span>sdk<span class=\"token operator\">/</span>install<span class=\"token punctuation\">.</span>sh\n<span class=\"token comment\"># 설치파일 실행후에는 터미널 다시 열기!</span>\n\n<span class=\"token comment\"># 초기화</span>\n$ <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>google<span class=\"token operator\">-</span>cloud<span class=\"token operator\">-</span>sdk<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>gcloud init</code></pre></div>\n<p>이제 콘솔에서 <code class=\"language-text\">gcloud</code>, <code class=\"language-text\">gsutil</code> 등의 커맨드 라인 툴을 사용할 수 있다.</p>\n<p>문서를 보면 API를 활성화하라고 하는데, 나는 권한이 없어서 따로 해주지 않았다... 살펴보니 Google Cloud SQL API만 있으면 되는 것 같다.(직접 쓸 것이므로)  </p>\n<br>\n<h2 id=\"4-마치며\" style=\"position:relative;\"><a href=\"#4-%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"4 마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 마치며</h2>\n<p>다음 포스팅에서는 Cloud SQL Proxy를 통하여 PostgreSQL 데이터베이스를 생성, 연결하는 방법에 대해 설명할 예정이다.</p>\n<br>","excerpt":"오늘 포스팅은 오랜만에 삽질하며 구글 클라우드 플랫폼으로 장고 프로젝트 배포를 성공했기에, 그 방법을 다시 한번 숙지할 겸 공유하고자 한다. 근황보고 현재 구글 뉴스랩 프로그램에 개발자로 참여하여 뉴스컨텐츠 제작 작업을 진행하고 있다. 뉴스랩 활동에…","tableOfContents":"<ul>\n<li><a href=\"/ggcloudDeploy_01/#%EA%B7%BC%ED%99%A9%EB%B3%B4%EA%B3%A0\">근황보고</a></li>\n<li><a href=\"/ggcloudDeploy_01/#%EC%8B%9C%EC%9E%91-%EC%A0%84-%EA%B5%AC%EC%83%81%ED%95%98%EA%B8%B0\">시작 전 구상하기</a></li>\n<li><a href=\"/ggcloudDeploy_01/#1-%EC%9E%A5%EA%B3%A0-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%83%9D%EC%84%B1\">1. 장고 프로젝트 생성</a></li>\n<li>\n<p><a href=\"/ggcloudDeploy_01/#2-%EA%B0%80%EC%83%81%ED%99%98%EA%B2%BD-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\">2. 가상환경 설정하기</a></p>\n<ul>\n<li><a href=\"/ggcloudDeploy_01/#1-requirementstxt\">(1) requirements.txt</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/ggcloudDeploy_01/#3-%EC%A4%80%EB%B9%84%EC%82%AC%ED%95%AD\">3. 준비사항</a></p>\n<ul>\n<li><a href=\"/ggcloudDeploy_01/#1-%EB%B9%8C%EB%A7%81-%ED%97%88%EC%9A%A9%ED%95%98%EA%B8%B0\">(1) 빌링 허용하기</a></li>\n<li><a href=\"/ggcloudDeploy_01/#2-google-cloud-sdk-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0\">(2) Google Cloud SDK 설치하기</a></li>\n</ul>\n</li>\n<li><a href=\"/ggcloudDeploy_01/#4-%EB%A7%88%EC%B9%98%EB%A9%B0\">4. 마치며</a></li>\n</ul>","fields":{"slug":"/ggcloudDeploy_01/"},"frontmatter":{"title":"Google News Lab > 1. 구글 클라우드 플랫폼을 사용한 배포 전 준비","date":"Jan 29, 2018","tags":["Google News Lab","Django"],"keywords":["Development Note","Julia"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/ggcloudDeploy_01/","series":[{"slug":"/ggcloudDeploy_01/","title":"Google News Lab > 1. 구글 클라우드 플랫폼을 사용한 배포 전 준비","num":1},{"slug":"/ggcloudDeploy_02/","title":"Google News Lab > 2. 프록시 서버 및 데이터베이스 구축","num":2},{"slug":"/ggcloudDeploy_03/","title":"Google News Lab > 3. Kubernetes 엔진 생성 전 설정","num":3},{"slug":"/ggcloudDeploy_04/","title":"Google News Lab > 4. Kubernetes 버킷 및 클러스터 엔진 생성","num":4},{"slug":"/ggcloudDeploy_05/","title":"Google News Lab > 5. 도커파일 생성 및 배포","num":5},{"slug":"/ggcloudDeploy_07/","title":"Google News Lab > 장고로 만든 웹사이트에 커스텀 파비콘(.ico) 적용시키기","num":7}],"lastmod":"2018-01-29"}},"staticQueryHashes":["2027115977","694178885"]}