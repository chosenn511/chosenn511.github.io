{"componentChunkName":"component---src-templates-post-tsx","path":"/git_01/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"clean-명령어의-정의\" style=\"position:relative;\"><a href=\"#clean-%EB%AA%85%EB%A0%B9%EC%96%B4%EC%9D%98-%EC%A0%95%EC%9D%98\" aria-label=\"clean 명령어의 정의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>clean 명령어의 정의</h2>\n<p>작업 중의 효율을 고려한 <code class=\"language-text\">stash</code> 명령어와 함께 사용할 수 있는 것이 <code class=\"language-text\">clean</code>명령어이다. 깃에서 추적되지 않는 파일만 지우는 명령어가 바로 <code class=\"language-text\">git clean</code>이라 할 수 있다.</p>\n<h2 id=\"1-git-clean\" style=\"position:relative;\"><a href=\"#1-git-clean\" aria-label=\"1 git clean permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. git clean</h2>\n<p><code class=\"language-text\">git clean</code> 과 <code class=\"language-text\">git stash --all</code></p>\n<p>: 추적중이지 않은 파일만 지우는 것이 기본 동작인 명령어다. 워킹 디렉토리의 파일들을 모두 지우고 싶을 때 사용하거나 <code class=\"language-text\">merge</code> 또는 외부 도구가 만들어낸 파일을 지울 때, 이전 빌드 작업으로 생성된 파일을 지우는데 사용된다.</p>\n<ul>\n<li>워킹 디렉토리 내에 추적하고있지 않은 모든 파일이 지워지기 때문에 실제로 사용할 때는 <code class=\"language-text\">git stash --all</code>으로 모든 파일을 일단 <code class=\"language-text\">stash</code>한 후 디렉토리에서 지운다.</li>\n</ul>\n<br>\n<h2 id=\"2-clean의-옵션-사용하기\" style=\"position:relative;\"><a href=\"#2-clean%EC%9D%98-%EC%98%B5%EC%85%98-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"2 clean의 옵션 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. clean의 옵션 사용하기</h2>\n<h3 id=\"code-classlanguage-textgit-clean--f--dcode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textgit-clean--f--dcode\" aria-label=\"code classlanguage textgit clean  f  dcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">git clean -f -d</code></h3>\n<p>: 추적중이지 않은 모든 정보를 디렉토리에서 지워버릴 때. 하위 디렉토리까지 모두 지운다.\n<br>* <code class=\"language-text\">-f</code>는 강제의 의미를 띄고 있다.</p>\n<br>\n<h3 id=\"code-classlanguage-textgit-clean--d--ncode\" style=\"position:relative;\"><a href=\"#code-classlanguage-textgit-clean--d--ncode\" aria-label=\"code classlanguage textgit clean  d  ncode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">git clean -d -n</code></h3>\n<p>: 명령을 실행했을 때 어떤 일이 일어날 지 미리 보고싶다면 <code class=\"language-text\">-n</code>을 사용한다. 마치 git에게 <strong>\"가상으로 지워보고 어떤 파일이 지워질지 알려달라\"</strong>고 말하는 것과 같다.</p>\n<br>\n### `git clean -x`\n<p>: 무시된 파일(.DS_Store나 .gitignore에 등록한 확장자 파일들)까지 모두 지울 때</p>\n<br>\n### `clean -d -i`\n<p>: clean 명령을 대화형으로 실행해 지우고 싶은 것만 지울 수도 있다.</p>","excerpt":"clean 명령어의 정의 작업 중의 효율을 고려한  명령어와 함께 사용할 수 있는 것이 명령어이다. 깃에서 추적되지 않는 파일만 지우는 명령어가 바로 이라 할 수 있다. 1. git clean  과  : 추적중이지 않은 파일만 지우는 것이 기본 동작…","tableOfContents":"<ul>\n<li><a href=\"/git_01/#clean-%EB%AA%85%EB%A0%B9%EC%96%B4%EC%9D%98-%EC%A0%95%EC%9D%98\">clean 명령어의 정의</a></li>\n<li><a href=\"/git_01/#1-git-clean\">1. git clean</a></li>\n<li>\n<p><a href=\"/git_01/#2-clean%EC%9D%98-%EC%98%B5%EC%85%98-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\">2. clean의 옵션 사용하기</a></p>\n<ul>\n<li><a href=\"/git_01/#code-classlanguage-textgit-clean--f--dcode\"><code class=\"language-text\">git clean -f -d</code></a></li>\n<li><a href=\"/git_01/#code-classlanguage-textgit-clean--d--ncode\"><code class=\"language-text\">git clean -d -n</code></a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/git_01/"},"frontmatter":{"title":"Git _ 파일 삭제를 위한 clean 명령어 사용하기","date":"Jun 15, 2016","tags":["Git"],"keywords":["Development Note","Julia"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/git_01/","series":[{"slug":"/git_01/","title":"Git _ 파일 삭제를 위한 clean 명령어 사용하기","num":1},{"slug":"/git_02/","title":"Git _ 협업을 위한 stash 명령어 사용하기","num":2},{"slug":"/git_03/","title":"Git _ 버전관리 상태 수정하기","num":3},{"slug":"/git_04/","title":"Git _ 제외시킬 파일 관리하기","num":4},{"slug":"/git_05/","title":"Git _ 원격저장소 연결하기","num":5},{"slug":"/git_06/","title":"Git _ 태그 관리하기","num":6},{"slug":"/git_07/","title":"Git _ 도구 검색","num":7},{"slug":"/git_08/","title":"Git _ 히스토리 단장하기","num":8},{"slug":"/git_09/","title":"Git _ Reset 명확히 알고 가기","num":9}],"lastmod":"2016-06-15"}},"staticQueryHashes":["2027115977","694178885"]}