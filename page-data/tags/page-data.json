{"componentChunkName":"component---src-pages-tags-tsx","path":"/tags/","result":{"data":{"allMarkdownRemark":{"group":[{"fieldValue":"CSS","totalCount":7,"edges":[{"node":{"excerpt":"선택자는 선택을 하게 해주는 요소이다. 이를 통해 특정 요소들을 선택하여 스타일을 적용할 수 있다. CSS의 속성을 부여할 HTML요소를 선택하는 선택자의 종류들에 대해 알아보자. 1. 하위선택자와 자식선택자 문서의 계층구조를 사용하여 특정 요소에 …","fields":{"slug":"/CSS_06/"},"frontmatter":{"date":"Jun 20, 2017","update":"Jan 01, 0001","title":"CSS _ 선택자","tags":["CSS","markup"]}}},{"node":{"excerpt":"css에서 지정할 수 있는 정렬은 ,  요소인지에 따라 결정된다. 각각의 경우에 텍스트 요소를 정렬하는 방식을 알아보자.  텍스트 요소를 가운데로 정렬한다. 단, 에는 적용되지 않는다. 블록요소의 가로 정렬은 어떻게 할까? 이 때는  속성을 지정하여…","fields":{"slug":"/CSS_04/"},"frontmatter":{"date":"Jun 19, 2017","update":"Jan 01, 0001","title":"CSS _ 페이지 정렬","tags":["CSS","markup"]}}},{"node":{"excerpt":"CSS는 HTML의 요소에 스타일 속성을 지정할 수 있도록 고안된 언어이다. 따라서 특정 요소에만 속성을 주기 위해서는 요소별로 구분자, 쉽게 말해 이 필요하다. 그리고 이러한 이름에는 지정한 속성에 대한 우선순위 계층이 존재하는데 이를 라고 한다.…","fields":{"slug":"/CSS_05/"},"frontmatter":{"date":"Jun 19, 2017","update":"Jan 01, 0001","title":"CSS _ 특정도","tags":["CSS","markup"]}}},{"node":{"excerpt":"css에서 대부분의 css속성은 부모 요소에서 자식 요소로 상속된다. 속성을 상속할 때 사용하는 선택자와 상속의 우선순위를 의미하는 특정도에 대해 알아보고, 텍스트 속성을 이용하여 상속을 설명해보았다. 상속이 되지 않는 속성도 있다. ex_ bord…","fields":{"slug":"/CSS_01/"},"frontmatter":{"date":"Jun 17, 2017","update":"Jan 01, 0001","title":"CSS _ 상속과 텍스트 속성","tags":["CSS","markup","inheritance"]}}},{"node":{"excerpt":"CSS에서 공간영역을 조절할 수 있는 박스모델과 배경이미지 지정하는 방법에 대해 알아본다. 1.  박스 모델  -  -  -  최초 마진, 보더, 패딩 두께는 0이다.  : 요소가 포함하고 있는 콘텐트의 너비 (수치값, 퍼센트값) 인라인 요소에는 지…","fields":{"slug":"/CSS_02/"},"frontmatter":{"date":"Jun 17, 2017","update":"Jan 01, 0001","title":"CSS _ 박스 모델","tags":["CSS","markup"]}}},{"node":{"excerpt":"CSS에서는 화면의 구성요소들을 각각 인라인, 블록 요소로 구분하고 이에 맞는 스타일 속성을 부여한다. CSS에서 적용할 수 있는 페이지 레이아웃 속성에 대해서 알아보자. 1. 기본 페이지 레이아웃 CSS요소를 화면에 출력할 수 있는 방법을 html…","fields":{"slug":"/CSS_03/"},"frontmatter":{"date":"Jun 17, 2017","update":"Jan 01, 0001","title":"CSS _ 페이지 레이아웃","tags":["CSS","markup"]}}},{"node":{"excerpt":"HTML은 웹페이지의 구조를 다루는 문법이다. 그리고 CSS는 HTML의 각 요소에 스타일 속성을 지정한다. 예를 들어, 문장을 쓰고 그 문장의 글씨 크기를 15px로 맞추고 싶다면 전자는 HTML, 후자는 CSS가 담당하게 된다.  SASS는 작업…","fields":{"slug":"/HTML_04/"},"frontmatter":{"date":"Jun 16, 2017","update":"Jan 01, 0001","title":"HTML/CSS _ HTML와 CSS 소개","tags":["HTML","markup","CSS"]}}}]},{"fieldValue":"Celery","totalCount":1,"edges":[{"node":{"excerpt":"우리가 사용하고 있는 웹서버(, ,  등)는 이다. 덕분에 브라우저에서 요청을 할 때마다 그에 따른 응답 결과를 서버에서 받아 보내줄 수 있다. 그러나 한번에 수많은 요청이 들어왔을 때는 어떨까? 웹서버는 처리가 끝날 때까지 브라우저에게 결과를 보내…","fields":{"slug":"/2scoops-25-비동기태스크큐/"},"frontmatter":{"date":"Jun 18, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 25장. 비동기 태스크 큐 이해하기","tags":["book review","Django","Celery","Redis","Queue"]}}}]},{"fieldValue":"Django","totalCount":31,"edges":[{"node":{"excerpt":"사이트를 배포하고 나서 반드시 해주어야 하는 작업이 있다. 바로 웹사이트 도메인에  인증서를 발급받는 일이다. 특히 크롬/사파리 브라우저는 앞으로 인증서가 없는 웹사이트에 접속 시 경고창을 띄울 것이라고 공지한 만큼 SSL인증서 발급은 웹사이트 배포…","fields":{"slug":"/ggcloudDeploy-6_02/"},"frontmatter":{"date":"Feb 13, 2018","update":"Jan 01, 0001","title":"Google News Lab > 6. SSL 인증서 발급 <2편> kube-lego 이해하기","tags":["Google News Lab","Kubernetes","Django","SSL","Let's Encrypt"]}}},{"node":{"excerpt":"웹앱을 배포할 때 웹 개발자가 반드시 준수해야 하는 사항이 있다. 바로 TLS/SSL 인증서를 발급받는 일이다. 이번 포스트에서는 인증서에 대한 개념을 뒤로 하고, 쿠버네트 엔진에서 인증서를 발급받기 위해 반드시 이해해야 하는 배포 동작원리\n에 대해…","fields":{"slug":"/ggcloudDeploy-6_01/"},"frontmatter":{"date":"Feb 11, 2018","update":"Jan 01, 0001","title":"Google News Lab > 6. SSL 인증서 발급 <1편> 배포방식에 대한 고찰","tags":["Google News Lab","Kubernetes","Django","SSL","Let's Encrypt"]}}},{"node":{"excerpt":"장고 프로젝트를 생성하고 처음 로컬서버를 실행했을 때 항상 마주하는 로그가 있다. 바로 이것! 파비콘이 적용안됨 장고는 기본  파일을 기본적으로 제공하지 않는다. 결국 로컬 서버는 파일을 찾을 수 없다는  로그를 남긴다. 파비콘은 영어로 이라 쓰고,…","fields":{"slug":"/ggcloudDeploy_07/"},"frontmatter":{"date":"Feb 11, 2018","update":"Jan 01, 0001","title":"Google News Lab > 장고로 만든 웹사이트에 커스텀 파비콘(.ico) 적용시키기","tags":["Google News Lab","Django","favicon"]}}},{"node":{"excerpt":"오늘 포스팅은 오랜만에 삽질하며 구글 클라우드 플랫폼으로 장고 프로젝트 배포를 성공했기에, 그 방법을 다시 한번 숙지할 겸 공유하고자 한다. 근황보고 현재 구글 뉴스랩 프로그램에 개발자로 참여하여 뉴스컨텐츠 제작 작업을 진행하고 있다. 뉴스랩 활동에…","fields":{"slug":"/ggcloudDeploy_01/"},"frontmatter":{"date":"Jan 29, 2018","update":"Jan 01, 0001","title":"Google News Lab > 1. 구글 클라우드 플랫폼을 사용한 배포 전 준비","tags":["Google News Lab","Django"]}}},{"node":{"excerpt":"이번 포스팅에서는 Cloud SQL Proxy를 통하여 PostgreSQL 데이터베이스를 생성, 연결하는 방법에 대해 설명할 예정이다. 1. Cloud SQL Proxy용 로컬환경 구축하기 배포된 앱은 클라우드 SQL 인스턴스와 통신하기위해 Clou…","fields":{"slug":"/ggcloudDeploy_02/"},"frontmatter":{"date":"Jan 29, 2018","update":"Jan 01, 0001","title":"Google News Lab > 2. 프록시 서버 및 데이터베이스 구축","tags":["Google News Lab","Django"]}}},{"node":{"excerpt":"이번 포스팅에서는 Google Cloud Storage를 사용하여 정적 파일을 저장해줄 버킷을 생성하고 연동하는 방법에 대해서 알아볼 예정이다. 1. Cloud Storage에 버킷 생성 구글 클라우드 플랫폼에서는 Gunicorn 서버를 사용하여 앱…","fields":{"slug":"/ggcloudDeploy_04/"},"frontmatter":{"date":"Jan 29, 2018","update":"Jan 01, 0001","title":"Google News Lab > 4. Kubernetes 버킷 및 클러스터 엔진 생성","tags":["Google News Lab","Kubernetes","Django"]}}},{"node":{"excerpt":"이번 배포에서는 웹서버로 을 사용하였는데, 도커파일 생성하는 방법과 함께 웹서버를 어떻게 구성했는지 설명할 예정이다. 또, 배포 마지막 단계에 대해 서술했다. 1. Gunicorn 서버설정 + 도커파일 생성 (1) 도커파일 작성 만들어준 도커파일은 …","fields":{"slug":"/ggcloudDeploy_05/"},"frontmatter":{"date":"Jan 29, 2018","update":"Jan 01, 0001","title":"Google News Lab > 5. 도커파일 생성 및 배포","tags":["Google News Lab","Kubernetes","Django","Docker","Gunicorn"]}}},{"node":{"excerpt":"이번 포스팅에서는 서비스 계정을 생성하여 Kubernetes 엔진 환경을 구성하는 방식에 대해 설명할 예정이다. 1. 서비스 계정(Service Account) 생성 서비스 계정은 IAM 내에서 제공중이다. 해당 콘솔페이지에서 콘솔 탭메뉴의 을 선택…","fields":{"slug":"/ggcloudDeploy_03/"},"frontmatter":{"date":"Jan 29, 2018","update":"Jan 01, 0001","title":"Google News Lab > 3. Kubernetes 엔진 생성 전 설정","tags":["Google News Lab","Kubernetes","Django"]}}},{"node":{"excerpt":"이번 포스트에서는 모델의  API와 모델 매니저, 헬퍼 함수 등의 모델 인터페이스들에 대해 알아보고자 한다. 기본적인 모델에 대한 설명은 장고 문서를 참고하기 바란다. 1. 모델의 _meta API 장고 1.8이 되기 전까지  API는 공식적이지 않…","fields":{"slug":"/2scoops-6-modeling_03/"},"frontmatter":{"date":"Oct 17, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _  6장. 장고에서 모델 이용하기 <3부>","tags":["book review","Django"]}}},{"node":{"excerpt":"이번 포스트에서는 장고 모델 디자인에 관련된 내용을 정리해보았다. 기본적인 모델에 대한 설명은 장고 문서를 참고하기 바란다. 데이터베이스 정규화 데이터베이스를 설계할 때 기본 원칙으로 삼을 수 있는 것이 이다. 정규화에 대해 간략하게 정리해보았다. …","fields":{"slug":"/2scoops-6-modeling_02/"},"frontmatter":{"date":"Oct 15, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 6장. 장고에서 모델 이용하기 <2부>","tags":["book review","Django"]}}},{"node":{"excerpt":"장고 프레임워크에서 모델은 서비스의 기본 구조이자 뼈대이다. 따라서 초기 모델링이 매우매우 중요하다.(아무리 강조해도 모자란다) 프로젝트를 진행하다가 새로운 모델을 추가하거나 기존 모델을 수정할 때도 전체 디자인을 고려하여 설계해야한다. 이번 포스트…","fields":{"slug":"/2scoops-6-modeling_01/"},"frontmatter":{"date":"Oct 14, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 6장. 장고에서 모델 이용하기 <1부>","tags":["book review","Django"]}}},{"node":{"excerpt":"REST 프레임워크를 이용하여 로그인을 구현하는 방식에는 2가지가 있다. 바로 토큰과 세션 기반인데, 프로젝트에서는 토큰 기반 인증을 사용하여 다음과 같은 로직에 따라 구현하였다. 장고의 REST 로그인 - Token 인증 사용자에게서 User Cr…","fields":{"slug":"/web-2-인증API제작하기_02/"},"frontmatter":{"date":"Sep 29, 2017","update":"Jan 01, 0001","title":"Web _ 2.1 인증 API <2부> - REST의 토큰기반 인증","tags":["Django","Project","Web development"]}}},{"node":{"excerpt":"이번 포스트에서는 웹서비스의 기능에 해당하는 API들을 간략하게 소개해보려고 한다. 크게 3가지로 나뉘는데, 작품 목록 및 세부페이지 조회 API, 장르별 작품 목록 및 세부 페이지 API, 모티프 등록/수정/삭제 API 이다. API를 제작하면서 …","fields":{"slug":"/web_3.1-기능API제작-작품조회/"},"frontmatter":{"date":"Sep 29, 2017","update":"Jan 01, 0001","title":"Web _ 3.1 기능 API 구현하기","tags":["Django","Project","Web development"]}}},{"node":{"excerpt":"여러 개의 세팅파일을 적용할 경우 각 세팅파일에 해당하는  파일도 따로 관리해주어야 한다. 이는 서버마다 그 환경에 필요한 컴포넌트 및 패키지만 설치하자는 뜻이다. 이번 포스트에서는 패키지의 버전 관리를 도와주는  파일에 대해 알아볼 것이다. 또, …","fields":{"slug":"/2scoops-5_02/"},"frontmatter":{"date":"Sep 29, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 5장. settings와 requirements 파일 <2부>","tags":["book review","Django"]}}},{"node":{"excerpt":"layout: post\ntitle: Two Scoops of Django - 4장. 장고 앱 디자인의 기본\ncategories: 도서 리뷰\ntags: django, 장고\ndescription: 장고에서는 하나의 프로젝트를 생성하고, 그 내부에 프로젝…","fields":{"slug":"/2scoops-4-장고앱디자인의기본/"},"frontmatter":{"date":"Sep 28, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 4장. 장고 앱 디자인의 기본","tags":["book review","Django"]}}},{"node":{"excerpt":"장고 1.8에서는 140가지 설정을 제어할 수 있는 세팅 모듈과 버전별 필요 패키지를 기록할 수 있는  모듈을 통해 프로젝트를 실행 환경별로 구동한다. 이번 포스트에서는 실행 환경별 최선의 설정 관리법에 대해 알아보았다. 2부에서는 그에 따라 요구되…","fields":{"slug":"/2scoops-5_01/"},"frontmatter":{"date":"Sep 28, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 5장. settings와 requirements 파일 <1부>","tags":["book review","Django"]}}},{"node":{"excerpt":"유저 관련 API는 웹서비스에 가입하는 사용자 정보를 저장하고 이 정보를 사용하여 서비스를 이용할 수 있는 권한을 제어한다. 커스텀으로 만든 유저 모델과 매니저에 대해 정리하였다. 커스텀 유저 모델 - MyUser 유저 모델은 커스텀으로 를 상속받아…","fields":{"slug":"/web-2-인증API제작하기_01/"},"frontmatter":{"date":"Sep 22, 2017","update":"Jan 01, 0001","title":"Web _ 2.1 인증 API <1부> - 유저 모델과 매니저","tags":["Django","Project","Web development"]}}},{"node":{"excerpt":"웹서비스에서 사이트맵을 제작할 경우 사용자가 클릭하여 바로 특정 페이지로 이동할 수 있도록 하는 네비게이션이 필요하다. 이번에는 2.1 라우트 설정하기 1편 포스트에 이어 SPA에서 네비게이션을 설정하는 방법에 대해 알아보자. 네비게이션 만들기 먼저…","fields":{"slug":"/web-2.2-라우트설정하기_02/"},"frontmatter":{"date":"Sep 22, 2017","update":"Jan 01, 0001","title":"Web _ 2.3 Vue.js를 사용하여 라우트 설정하기 <2부>","tags":["Django","Project","Web development","Vue.js"]}}},{"node":{"excerpt":"장고는 파이썬으로 쉽게 웹개발에 필요한 구조와 클래스를 제공하는 프레임워크이다.(더 읽어보기 - 1편. 장고 프로젝트 세팅하기) 이번 포스트에서는 투스쿱 도서 3장을 정리하면서 장고의 프로젝트를 구성하는 다양한 방법에 대해 소개하고자 한다. 장고에서…","fields":{"slug":"/2scoops-3-장고프로젝트구성하기/"},"frontmatter":{"date":"Sep 19, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 3장. 장고 프로젝트 구성하기","tags":["book review","Django"]}}},{"node":{"excerpt":"이번 포스트는 'Wordy Gallery' 프로젝트 전반의 앱 구성과 데이터베이스 모델링 설계를 바탕으로 작성하였다. Database ERD   : 사용자 정보를 저장  :  작품과 그 상세 정보를 저장  : 작품별 장르 정보를 저장  : 사용자가 …","fields":{"slug":"/web_1.3-앱생성및모델링/"},"frontmatter":{"date":"Sep 16, 2017","update":"Jan 01, 0001","title":"Web _ 1.3 앱 생성 및 모델링","tags":["Django","Project","Web development"]}}},{"node":{"excerpt":"(Web Server Gateway Interface)는 웹서버와 파이썬을 사용한 웹 어플리케이션 개발환경 간의 인터페이스에 대한 규칙\n이다. 파이썬으로 선택할 수 있는 웹 프레임워크에서 사용할 수 있는 기존 웹서버는 , , , 또는 커스텀으로 만들…","fields":{"slug":"/web_WSGI/"},"frontmatter":{"date":"Sep 16, 2017","update":"Jan 01, 0001","title":"Web _ WSGI란 무엇인가?","tags":["Django","Web development","Network","python","WSGI"]}}},{"node":{"excerpt":"프로젝트를 진행할 때 가장 중요한 것은 깃에서 추적할 코드와 추적하지 않을 중요 정보 및 설정을 분리해놓는 것\n이다. 특히 깃헙 퍼블릭 레포지토리를 사용하고 있다면 소스코드를 푸시하기 전에 반드시 추적되선 안되는 프로젝트 , 허용하는 호스트 주소들,…","fields":{"slug":"/web_1.2-장고배포환경구축하기/"},"frontmatter":{"date":"Sep 13, 2017","update":"Jan 01, 0001","title":"Web _ 1.2 장고 배포환경 구축하기","tags":["Django","Project","Web development"]}}},{"node":{"excerpt":"1장에서는 파이썬과 장고의 표준 스타일가이드에 대해서 공부하였다. 2장에서는 장고를 사용할 때 최적화된 로컬환경을 구성하는 간단한 가이드를 소개한다. 1. 같은 데이터베이스를 사용하라 개인 및 팀프로젝트를 진행할 때 로컬환경에서는 을, 배포환경에서는…","fields":{"slug":"/2scoops-2-최적화된장고꾸미기/"},"frontmatter":{"date":"Sep 10, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 2장. 최적화된 장고 꾸미기","tags":["book review","Django"]}}},{"node":{"excerpt":"어제부터 웹프로그래밍 스쿨 수료생 분들과 함께 를 시작했다. 해당 스터디에서는 각자가 만들고 싶었던 개인 프로젝트를 진행하면서 서로 피드백을 주고받는다. 이번 포스트에서는 1주차 미팅에서 한 일을 기록하고 프로젝트 관련 공부내용을 정리하고자 한다. …","fields":{"slug":"/web_1.1-개인 프로젝트 기획/"},"frontmatter":{"date":"Sep 08, 2017","update":"Jan 01, 0001","title":"Web _ 1.1 장고를 사용한 개인 프로젝트 기획 및 세팅하기","tags":["Django","Project","Web development"]}}},{"node":{"excerpt":"(Single Page Application)란 웹페이지를 보여줄 때 하나의 페이지에서 여러 컴포넌트들의 리소스(HTML, CSS, JS 등 페이지를 구성하는 코드들)를 지정한 URI에 따라 렌더해줄 수 있도록 구성한 웹 어플리케이션이다. SPA와 …","fields":{"slug":"/web-2.2-라우트설정하기_01/"},"frontmatter":{"date":"Sep 07, 2017","update":"Jan 01, 0001","title":"Web _ 2.2 Vue.js를 사용하여 라우트 설정하기 <1부>","tags":["Django","Project","Web development"]}}},{"node":{"excerpt":"이번 포스트에서는 웹 프레임워크인 를 소개하고 장고의 개발환경 설치까지 알아본다. 장고란 무엇이고, 왜 쓰는가? 는 파이썬으로 만들어진 오픈소스 웹 어플리케이션 프레임워크이다. 쉽게 말하면 웹사이트를 쉽고 빠르게 개발하기 위해 필요한 공통적인 요소들…","fields":{"slug":"/web_1.0-장고프로젝트세팅하기/"},"frontmatter":{"date":"Sep 07, 2017","update":"Jan 01, 0001","title":"Web _ 1.0 장고 프로젝트 세팅하기","tags":["Django","Project","Web development"]}}},{"node":{"excerpt":"이번 포스트에서는 웹 프레임워크인 를 소개하고 장고의 개발환경 설치까지 알아본다. 장고란 무엇이고, 왜 쓰는가? 는 파이썬으로 만들어진 오픈소스 웹 어플리케이션 프레임워크이다. 쉽게 말하면 웹사이트를 쉽고 빠르게 개발하기 위해 필요한 공통적인 요소들…","fields":{"slug":"/web_10.0-장고프로젝트세팅하기/"},"frontmatter":{"date":"Sep 07, 2017","update":"Jan 01, 0001","title":"Web _ 1.0 장고 프로젝트 세팅하기","tags":["Django","Project","Web development"]}}},{"node":{"excerpt":"이번 포스트에서는 초심으로 돌아가서 장고 프레임워크를 사용하기 전에 꼭 숙지해야하는 에 대해 알아보고자 한다. 읽기 쉬운 코드는 어떤 것인가? 가독성이 좋은 코드는 로직이 한 눈에 보이고 유지 관리가 쉬우며 리펙터링이 용이한 코드다. 이러한 코드는 …","fields":{"slug":"/2scoops-1-코딩스타일/"},"frontmatter":{"date":"Sep 05, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 1장. 코딩 스타일","tags":["book review","Django","REST api"]}}},{"node":{"excerpt":"1부에서 REST API의 핵심인 http 프로토콜에 대한 전반적인 내용을 다루었다. 2부에서는 REST API를 효율적으로 설계하는 방법들에 대해 소개한다. 해당 포스트는 의 16장 를 요약하여 작성하였다. 1. API 컴포넌트를 어디에 위치시킬까…","fields":{"slug":"/2scoops-16-RESTAPI_02/"},"frontmatter":{"date":"Sep 03, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 16장. REST API 구현하기 <2부>","tags":["book review","Django","REST api","HTTP"]}}},{"node":{"excerpt":"(Representational State Transfer)는 기존의 HTTP 통신 프로토콜을 제대로 활용하기 위해 만들어진 규칙이다. 또한 인터넷은 더이상 형식에만 국한되지 않고 , , , 등의 여러 형식을 지원하고 있다. 이에 따라 다양한 환경과…","fields":{"slug":"/2scoops-16-RESTAPI_01/"},"frontmatter":{"date":"Aug 30, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 16장. REST API 구현하기 <1부>","tags":["book review","Django","REST api","HTTP"]}}},{"node":{"excerpt":"우리가 사용하고 있는 웹서버(, ,  등)는 이다. 덕분에 브라우저에서 요청을 할 때마다 그에 따른 응답 결과를 서버에서 받아 보내줄 수 있다. 그러나 한번에 수많은 요청이 들어왔을 때는 어떨까? 웹서버는 처리가 끝날 때까지 브라우저에게 결과를 보내…","fields":{"slug":"/2scoops-25-비동기태스크큐/"},"frontmatter":{"date":"Jun 18, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 25장. 비동기 태스크 큐 이해하기","tags":["book review","Django","Celery","Redis","Queue"]}}}]},{"fieldValue":"Docker","totalCount":1,"edges":[{"node":{"excerpt":"이번 배포에서는 웹서버로 을 사용하였는데, 도커파일 생성하는 방법과 함께 웹서버를 어떻게 구성했는지 설명할 예정이다. 또, 배포 마지막 단계에 대해 서술했다. 1. Gunicorn 서버설정 + 도커파일 생성 (1) 도커파일 작성 만들어준 도커파일은 …","fields":{"slug":"/ggcloudDeploy_05/"},"frontmatter":{"date":"Jan 29, 2018","update":"Jan 01, 0001","title":"Google News Lab > 5. 도커파일 생성 및 배포","tags":["Google News Lab","Kubernetes","Django","Docker","Gunicorn"]}}}]},{"fieldValue":"Frontend","totalCount":5,"edges":[{"node":{"excerpt":"지난 포스트에서는 선언적 렌더링을 위해 HTML 요소 내부에서 사용할 수 있는 (directive)에 대해 알아보았다. 이번 포스트에는 기타 디렉티브들에 대해 정리하였다.  디렉티브 의 역할은 HTML 요소를 컴파일하지 않고 문자 그대로 출력하는 것…","fields":{"slug":"/vue-directives_03/"},"frontmatter":{"date":"Oct 17, 2017","update":"Jan 01, 0001","title":"Vue.js _ 5. 디렉티브 (directives) <3부>","tags":["Frontend","Vue.js"]}}},{"node":{"excerpt":"지난 포스트에 이어 선언적 렌더링을 위해 HTML 요소 내부에서 사용할 수 있는 (directive) 중 , 에 대해 알아보고자 한다. <brs 와 의 차이  디렉티브는 Vue 객체의 속성에 따라 렌더링 여부를 결정할 수 있는 기능이다. 도 랑 비슷…","fields":{"slug":"/vue-directives_02/"},"frontmatter":{"date":"Oct 17, 2017","update":"Jan 01, 0001","title":"Vue.js _ 4. 디렉티브 (directives) <2부>","tags":["Frontend","Vue.js"]}}},{"node":{"excerpt":"는 단일페이지 사용자 인터페이스(SPA, Single Page Application)를 만들기 위한 프론트엔드 프레임워크이다. 이번 포스트에서는 의 기본적인 특징과 설치법에 대해 정리해보았다. Vue.js의 특징 jquery처럼  태그를 사용하여 C…","fields":{"slug":"/vue-1-setup/"},"frontmatter":{"date":"Oct 16, 2017","update":"Jan 01, 0001","title":"Vue.js _ 1. Vue 소개 및 설치","tags":["Frontend","Vue.js"]}}},{"node":{"excerpt":"이번 포스트에서는 앞선 포스트에서 만든 예제를 바탕으로 Vue.js의 을 설명해보았다. Vue.js의  패턴 Vue는 --으로 구성된 을 따른다. 어플리케이션 로직과 UI를 분리하기 위해 설계된 패턴으로, UI를 가지는 응용 프로그램을 위한 아키텍처…","fields":{"slug":"/vue-2-mvvmpattern/"},"frontmatter":{"date":"Oct 16, 2017","update":"Jan 01, 0001","title":"Vue.js _ 2. vue파일에서 MVVM 패턴 구현하기","tags":["Frontend","Vue.js"]}}},{"node":{"excerpt":"이번 포스트에서는 템플릿 표현식( ) 말고도 선언적 렌더링을 위해 HTML 요소 내부에서 사용할 수 있는 (directive)에 대해 알아보고자 한다. 와  기존에 템플릿 표현식으로 데이터를 삽입했다. 그렇지만 에서는 HTML 요소에 목적에 따라 다…","fields":{"slug":"/vue-directives_01/"},"frontmatter":{"date":"Oct 16, 2017","update":"Jan 01, 0001","title":"Vue.js _ 3. 디렉티브 (directives) <1부>","tags":["Frontend","Vue.js"]}}}]},{"fieldValue":"Git","totalCount":10,"edges":[{"node":{"excerpt":"git에는 데이터베이스에 저장된 코드나 커밋에서 원하는 부분을 빠르고 쉽게 검색하는 도구들이 있다. 프로젝트를 진행할 때 함수의 정의나 함수가 호출되는 곳을 검색해야하는 경우 사용할 수 있다. (1) \"어디에 있는지 검색\"  매우 빠르고 깃 히스토리…","fields":{"slug":"/git_07/"},"frontmatter":{"date":"Jun 15, 2017","update":"Jan 01, 0001","title":"Git _ 도구 검색","tags":["Git"]}}},{"node":{"excerpt":"git으로 일하다보면 커밋 히스토리를 수정해야할 때가 있다. 깃에서는 커밋한 내용 뿐만 아니라 커밋 순서, 커밋 메세지, 커밋 파일 수정이 가능하다. 단, 다른 사람과 코드를 공유하기 전에 해야 한다! git의 장점 staging area로 커밋할 …","fields":{"slug":"/git_08/"},"frontmatter":{"date":"Jun 15, 2017","update":"Jan 01, 0001","title":"Git _ 히스토리 단장하기","tags":["Git"]}}},{"node":{"excerpt":"Git은 서로 다른 세 개의 트리를 관리하는 컨텐츠 관리자라고 할 수 있다. 트리()란 실제로 을 의미한다. 블롭()은 깃에서 개별 파일을 일컫는 단어이다. 세 개의 트리 트리 역할 HEAD 마지막 커밋 스냅샷, 다음 커밋의 부모가 되는 커밋 ind…","fields":{"slug":"/git_09/"},"frontmatter":{"date":"Jun 15, 2017","update":"Jan 01, 0001","title":"Git _ Reset 명확히 알고 가기","tags":["Git"]}}},{"node":{"excerpt":"에서도 일정 시점에 를 등록하여 원하는 시점까지 버전을 그룹핑하거나 기록해둘 수 있다. 태그는 처럼 특정 시점에 이름을 붙이는 기능인데, 주로 서비스의 배포 버전을 제공할 때 사용한다. 또한 작업중 되돌아갈 여지가 있는 시점에 붙이기도 한다. Git…","fields":{"slug":"/git_06/"},"frontmatter":{"date":"Oct 06, 2016","update":"Jan 01, 0001","title":"Git _ 태그 관리하기","tags":["Git"]}}},{"node":{"excerpt":"에서는 로컬 저장소에서만 관리하던 소스코드를 원격 저장소에 올려 다른 사람들이 보거나 사용할 수 있도록 하고 있다. 이를 통해 단순 공유뿐만 아니라, 협업, 그리고 더 나아가 오픈소스의 기여까지 편리하게 작업할 수 있다. 이번 포스트에서는 원격저장소…","fields":{"slug":"/git_05/"},"frontmatter":{"date":"Oct 04, 2016","update":"Jan 01, 0001","title":"Git _ 원격저장소 연결하기","tags":["Git"]}}},{"node":{"excerpt":"버전관리컨트롤 시스템인 Git에서 파일을 실수로 추가하지 않았거나 추가하면 안될 파일의 상태를 바꾸고 싶을 때 어떻게 해주어야하는지 정리해보았다. 커밋 합치기 에서 프로젝트 초기에 설정해주는  등의 파일을 빼먹고 커밋했다면 다음 명령어를 사용하여 원…","fields":{"slug":"/git_03/"},"frontmatter":{"date":"Oct 02, 2016","update":"Jan 01, 0001","title":"Git _ 버전관리 상태 수정하기","tags":["Git"]}}},{"node":{"excerpt":"을 사용하여 버전관리를 할 때 포함시켜야하는 파일들과 포함되면 안되는 파일들이 존재한다. 이번 포스트에서는 버전관리에 포함시키지 말아야 하는 파일을 에서 어떻게 처리하는지, 그리고 이미 원격 저장소에 올린 파일을 제외시키는 방법에 대해 정리하였다. …","fields":{"slug":"/git_04/"},"frontmatter":{"date":"Oct 02, 2016","update":"Jan 01, 0001","title":"Git _ 제외시킬 파일 관리하기","tags":["Git"]}}},{"node":{"excerpt":"버전 컨트롤 시스템인 의 기본원리와 사용법에 대해 간단히 정리하였다. 워킹 디렉토리의 모든 파일은 크게 Tracked(관리대상임)와 Untracked(관리대상이 아님)로 나눈다. Tracked 파일은 이미 스냅샷에 포함돼 있던 파일이다. Tracke…","fields":{"slug":"/git_00/"},"frontmatter":{"date":"Jun 15, 2016","update":"Jan 01, 0001","title":"Git _ 기본 이해하기","tags":["Git"]}}},{"node":{"excerpt":"clean 명령어의 정의 작업 중의 효율을 고려한  명령어와 함께 사용할 수 있는 것이 명령어이다. 깃에서 추적되지 않는 파일만 지우는 명령어가 바로 이라 할 수 있다. 1. git clean  과  : 추적중이지 않은 파일만 지우는 것이 기본 동작…","fields":{"slug":"/git_01/"},"frontmatter":{"date":"Jun 15, 2016","update":"Jan 01, 0001","title":"Git _ 파일 삭제를 위한 clean 명령어 사용하기","tags":["Git"]}}},{"node":{"excerpt":"협업에서 각자 작업을 하다가 협업자의 작업을 머지해야하는 상황이 생길 수 있다. 그런데 작업 중인 내용이 아직 커밋을 하기에는 어정쩡한 상태라면 어떻게 해야할까? 이럴 때 유용하게 사용되는 것이 바로 git의  명령어다. 1. git stash : …","fields":{"slug":"/git_02/"},"frontmatter":{"date":"Jun 15, 2016","update":"Jan 01, 0001","title":"Git _ 협업을 위한 stash 명령어 사용하기","tags":["Git"]}}}]},{"fieldValue":"Google News Lab","totalCount":8,"edges":[{"node":{"excerpt":"사이트를 배포하고 나서 반드시 해주어야 하는 작업이 있다. 바로 웹사이트 도메인에  인증서를 발급받는 일이다. 특히 크롬/사파리 브라우저는 앞으로 인증서가 없는 웹사이트에 접속 시 경고창을 띄울 것이라고 공지한 만큼 SSL인증서 발급은 웹사이트 배포…","fields":{"slug":"/ggcloudDeploy-6_02/"},"frontmatter":{"date":"Feb 13, 2018","update":"Jan 01, 0001","title":"Google News Lab > 6. SSL 인증서 발급 <2편> kube-lego 이해하기","tags":["Google News Lab","Kubernetes","Django","SSL","Let's Encrypt"]}}},{"node":{"excerpt":"웹앱을 배포할 때 웹 개발자가 반드시 준수해야 하는 사항이 있다. 바로 TLS/SSL 인증서를 발급받는 일이다. 이번 포스트에서는 인증서에 대한 개념을 뒤로 하고, 쿠버네트 엔진에서 인증서를 발급받기 위해 반드시 이해해야 하는 배포 동작원리\n에 대해…","fields":{"slug":"/ggcloudDeploy-6_01/"},"frontmatter":{"date":"Feb 11, 2018","update":"Jan 01, 0001","title":"Google News Lab > 6. SSL 인증서 발급 <1편> 배포방식에 대한 고찰","tags":["Google News Lab","Kubernetes","Django","SSL","Let's Encrypt"]}}},{"node":{"excerpt":"장고 프로젝트를 생성하고 처음 로컬서버를 실행했을 때 항상 마주하는 로그가 있다. 바로 이것! 파비콘이 적용안됨 장고는 기본  파일을 기본적으로 제공하지 않는다. 결국 로컬 서버는 파일을 찾을 수 없다는  로그를 남긴다. 파비콘은 영어로 이라 쓰고,…","fields":{"slug":"/ggcloudDeploy_07/"},"frontmatter":{"date":"Feb 11, 2018","update":"Jan 01, 0001","title":"Google News Lab > 장고로 만든 웹사이트에 커스텀 파비콘(.ico) 적용시키기","tags":["Google News Lab","Django","favicon"]}}},{"node":{"excerpt":"오늘 포스팅은 오랜만에 삽질하며 구글 클라우드 플랫폼으로 장고 프로젝트 배포를 성공했기에, 그 방법을 다시 한번 숙지할 겸 공유하고자 한다. 근황보고 현재 구글 뉴스랩 프로그램에 개발자로 참여하여 뉴스컨텐츠 제작 작업을 진행하고 있다. 뉴스랩 활동에…","fields":{"slug":"/ggcloudDeploy_01/"},"frontmatter":{"date":"Jan 29, 2018","update":"Jan 01, 0001","title":"Google News Lab > 1. 구글 클라우드 플랫폼을 사용한 배포 전 준비","tags":["Google News Lab","Django"]}}},{"node":{"excerpt":"이번 포스팅에서는 Cloud SQL Proxy를 통하여 PostgreSQL 데이터베이스를 생성, 연결하는 방법에 대해 설명할 예정이다. 1. Cloud SQL Proxy용 로컬환경 구축하기 배포된 앱은 클라우드 SQL 인스턴스와 통신하기위해 Clou…","fields":{"slug":"/ggcloudDeploy_02/"},"frontmatter":{"date":"Jan 29, 2018","update":"Jan 01, 0001","title":"Google News Lab > 2. 프록시 서버 및 데이터베이스 구축","tags":["Google News Lab","Django"]}}},{"node":{"excerpt":"이번 포스팅에서는 Google Cloud Storage를 사용하여 정적 파일을 저장해줄 버킷을 생성하고 연동하는 방법에 대해서 알아볼 예정이다. 1. Cloud Storage에 버킷 생성 구글 클라우드 플랫폼에서는 Gunicorn 서버를 사용하여 앱…","fields":{"slug":"/ggcloudDeploy_04/"},"frontmatter":{"date":"Jan 29, 2018","update":"Jan 01, 0001","title":"Google News Lab > 4. Kubernetes 버킷 및 클러스터 엔진 생성","tags":["Google News Lab","Kubernetes","Django"]}}},{"node":{"excerpt":"이번 배포에서는 웹서버로 을 사용하였는데, 도커파일 생성하는 방법과 함께 웹서버를 어떻게 구성했는지 설명할 예정이다. 또, 배포 마지막 단계에 대해 서술했다. 1. Gunicorn 서버설정 + 도커파일 생성 (1) 도커파일 작성 만들어준 도커파일은 …","fields":{"slug":"/ggcloudDeploy_05/"},"frontmatter":{"date":"Jan 29, 2018","update":"Jan 01, 0001","title":"Google News Lab > 5. 도커파일 생성 및 배포","tags":["Google News Lab","Kubernetes","Django","Docker","Gunicorn"]}}},{"node":{"excerpt":"이번 포스팅에서는 서비스 계정을 생성하여 Kubernetes 엔진 환경을 구성하는 방식에 대해 설명할 예정이다. 1. 서비스 계정(Service Account) 생성 서비스 계정은 IAM 내에서 제공중이다. 해당 콘솔페이지에서 콘솔 탭메뉴의 을 선택…","fields":{"slug":"/ggcloudDeploy_03/"},"frontmatter":{"date":"Jan 29, 2018","update":"Jan 01, 0001","title":"Google News Lab > 3. Kubernetes 엔진 생성 전 설정","tags":["Google News Lab","Kubernetes","Django"]}}}]},{"fieldValue":"Gunicorn","totalCount":1,"edges":[{"node":{"excerpt":"이번 배포에서는 웹서버로 을 사용하였는데, 도커파일 생성하는 방법과 함께 웹서버를 어떻게 구성했는지 설명할 예정이다. 또, 배포 마지막 단계에 대해 서술했다. 1. Gunicorn 서버설정 + 도커파일 생성 (1) 도커파일 작성 만들어준 도커파일은 …","fields":{"slug":"/ggcloudDeploy_05/"},"frontmatter":{"date":"Jan 29, 2018","update":"Jan 01, 0001","title":"Google News Lab > 5. 도커파일 생성 및 배포","tags":["Google News Lab","Kubernetes","Django","Docker","Gunicorn"]}}}]},{"fieldValue":"HTML","totalCount":6,"edges":[{"node":{"excerpt":"은 웹페이지를 위한 마크업 언어인 동시에 비교적 쉽게 구조를 만들 수 있는 템플릿 언어이다. 텍스트로 구성된 웹페이지에 구조적인 속성을 부여하는 태그들을 알아보자. (1) 헤드라인 h1 ~ h6 중요도 순으로 개요를 나타낼 때 사용하는 태그이다. 주…","fields":{"slug":"/HTML_06/"},"frontmatter":{"date":"Jun 17, 2017","update":"Jan 01, 0001","title":"HTML _ 텍스트와 관련된 태그","tags":["HTML","markup"]}}},{"node":{"excerpt":"HTML에서 표를 만들 수 있는 테이블 요소에 대해서 알아보자! 테이블의 기본 구조 table 태그 \nthead / tbody / tfoot : 행을 그룹화하는 태그 \ntr : 행 \nth : 헤더셀 \ntd : 데이터셀  colspan : 행 병합\nr…","fields":{"slug":"/HTML_05/"},"frontmatter":{"date":"Jun 17, 2017","update":"Jan 01, 0001","title":"HTML _ 테이블 요소","tags":["HTML","markup"]}}},{"node":{"excerpt":"브라우저는 기본적으로 이미지 포맷을 지원하여 이미지에 대한 플러그인은 필요없지만 비디오나 오디오는 플러그인을 지원해야한다. 이 때 사용할 수 있는 것이 HTML의 내장 컨텐트 태그 요소이다. 비디오, 오디오 내장 -  data : 포함할 파일의 ur…","fields":{"slug":"/HTML_02/"},"frontmatter":{"date":"Jun 16, 2017","update":"Jan 01, 0001","title":"HTML _ 내장 컨텐트 태그","tags":["HTML","markup"]}}},{"node":{"excerpt":"HTML은 마크업 언어로, 내용에 의미를 부여하는 언어이다. 따라서 각 요소의 속성 자체를 그대로 유지하는 것이 좋다. 디자인 요소는 최대한 css에서 해결하도록 한다. 1. 기본태그 소개  단락을 의미, paragraph 블록 요소 줄바꿈을 하려면…","fields":{"slug":"/HTML_01/"},"frontmatter":{"date":"Jun 16, 2017","update":"Jan 01, 0001","title":"HTML _ 기본 태그와 인라인, 블록 요소","tags":["HTML","markup"]}}},{"node":{"excerpt":"HTML을 작성할 때 알아 놓으면 좋은 특수문자 변환기호를 정리해보았다. 특수 문자 종류 모양 문자열 변환(escaping) copyright ©  앰퍼센트 &  부등호 <, > ,  작은 따옴표 ‘, ’ ,  큰 따옴표 “, ” ,  유로기호 € …","fields":{"slug":"/HTML_03/"},"frontmatter":{"date":"Jun 16, 2017","update":"Jan 01, 0001","title":"HTML _ 특수문자","tags":["HTML","markup"]}}},{"node":{"excerpt":"HTML은 웹페이지의 구조를 다루는 문법이다. 그리고 CSS는 HTML의 각 요소에 스타일 속성을 지정한다. 예를 들어, 문장을 쓰고 그 문장의 글씨 크기를 15px로 맞추고 싶다면 전자는 HTML, 후자는 CSS가 담당하게 된다.  SASS는 작업…","fields":{"slug":"/HTML_04/"},"frontmatter":{"date":"Jun 16, 2017","update":"Jan 01, 0001","title":"HTML/CSS _ HTML와 CSS 소개","tags":["HTML","markup","CSS"]}}}]},{"fieldValue":"HTTP","totalCount":2,"edges":[{"node":{"excerpt":"1부에서 REST API의 핵심인 http 프로토콜에 대한 전반적인 내용을 다루었다. 2부에서는 REST API를 효율적으로 설계하는 방법들에 대해 소개한다. 해당 포스트는 의 16장 를 요약하여 작성하였다. 1. API 컴포넌트를 어디에 위치시킬까…","fields":{"slug":"/2scoops-16-RESTAPI_02/"},"frontmatter":{"date":"Sep 03, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 16장. REST API 구현하기 <2부>","tags":["book review","Django","REST api","HTTP"]}}},{"node":{"excerpt":"(Representational State Transfer)는 기존의 HTTP 통신 프로토콜을 제대로 활용하기 위해 만들어진 규칙이다. 또한 인터넷은 더이상 형식에만 국한되지 않고 , , , 등의 여러 형식을 지원하고 있다. 이에 따라 다양한 환경과…","fields":{"slug":"/2scoops-16-RESTAPI_01/"},"frontmatter":{"date":"Aug 30, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 16장. REST API 구현하기 <1부>","tags":["book review","Django","REST api","HTTP"]}}}]},{"fieldValue":"Kubernetes","totalCount":5,"edges":[{"node":{"excerpt":"사이트를 배포하고 나서 반드시 해주어야 하는 작업이 있다. 바로 웹사이트 도메인에  인증서를 발급받는 일이다. 특히 크롬/사파리 브라우저는 앞으로 인증서가 없는 웹사이트에 접속 시 경고창을 띄울 것이라고 공지한 만큼 SSL인증서 발급은 웹사이트 배포…","fields":{"slug":"/ggcloudDeploy-6_02/"},"frontmatter":{"date":"Feb 13, 2018","update":"Jan 01, 0001","title":"Google News Lab > 6. SSL 인증서 발급 <2편> kube-lego 이해하기","tags":["Google News Lab","Kubernetes","Django","SSL","Let's Encrypt"]}}},{"node":{"excerpt":"웹앱을 배포할 때 웹 개발자가 반드시 준수해야 하는 사항이 있다. 바로 TLS/SSL 인증서를 발급받는 일이다. 이번 포스트에서는 인증서에 대한 개념을 뒤로 하고, 쿠버네트 엔진에서 인증서를 발급받기 위해 반드시 이해해야 하는 배포 동작원리\n에 대해…","fields":{"slug":"/ggcloudDeploy-6_01/"},"frontmatter":{"date":"Feb 11, 2018","update":"Jan 01, 0001","title":"Google News Lab > 6. SSL 인증서 발급 <1편> 배포방식에 대한 고찰","tags":["Google News Lab","Kubernetes","Django","SSL","Let's Encrypt"]}}},{"node":{"excerpt":"이번 포스팅에서는 Google Cloud Storage를 사용하여 정적 파일을 저장해줄 버킷을 생성하고 연동하는 방법에 대해서 알아볼 예정이다. 1. Cloud Storage에 버킷 생성 구글 클라우드 플랫폼에서는 Gunicorn 서버를 사용하여 앱…","fields":{"slug":"/ggcloudDeploy_04/"},"frontmatter":{"date":"Jan 29, 2018","update":"Jan 01, 0001","title":"Google News Lab > 4. Kubernetes 버킷 및 클러스터 엔진 생성","tags":["Google News Lab","Kubernetes","Django"]}}},{"node":{"excerpt":"이번 배포에서는 웹서버로 을 사용하였는데, 도커파일 생성하는 방법과 함께 웹서버를 어떻게 구성했는지 설명할 예정이다. 또, 배포 마지막 단계에 대해 서술했다. 1. Gunicorn 서버설정 + 도커파일 생성 (1) 도커파일 작성 만들어준 도커파일은 …","fields":{"slug":"/ggcloudDeploy_05/"},"frontmatter":{"date":"Jan 29, 2018","update":"Jan 01, 0001","title":"Google News Lab > 5. 도커파일 생성 및 배포","tags":["Google News Lab","Kubernetes","Django","Docker","Gunicorn"]}}},{"node":{"excerpt":"이번 포스팅에서는 서비스 계정을 생성하여 Kubernetes 엔진 환경을 구성하는 방식에 대해 설명할 예정이다. 1. 서비스 계정(Service Account) 생성 서비스 계정은 IAM 내에서 제공중이다. 해당 콘솔페이지에서 콘솔 탭메뉴의 을 선택…","fields":{"slug":"/ggcloudDeploy_03/"},"frontmatter":{"date":"Jan 29, 2018","update":"Jan 01, 0001","title":"Google News Lab > 3. Kubernetes 엔진 생성 전 설정","tags":["Google News Lab","Kubernetes","Django"]}}}]},{"fieldValue":"Let's Encrypt","totalCount":2,"edges":[{"node":{"excerpt":"사이트를 배포하고 나서 반드시 해주어야 하는 작업이 있다. 바로 웹사이트 도메인에  인증서를 발급받는 일이다. 특히 크롬/사파리 브라우저는 앞으로 인증서가 없는 웹사이트에 접속 시 경고창을 띄울 것이라고 공지한 만큼 SSL인증서 발급은 웹사이트 배포…","fields":{"slug":"/ggcloudDeploy-6_02/"},"frontmatter":{"date":"Feb 13, 2018","update":"Jan 01, 0001","title":"Google News Lab > 6. SSL 인증서 발급 <2편> kube-lego 이해하기","tags":["Google News Lab","Kubernetes","Django","SSL","Let's Encrypt"]}}},{"node":{"excerpt":"웹앱을 배포할 때 웹 개발자가 반드시 준수해야 하는 사항이 있다. 바로 TLS/SSL 인증서를 발급받는 일이다. 이번 포스트에서는 인증서에 대한 개념을 뒤로 하고, 쿠버네트 엔진에서 인증서를 발급받기 위해 반드시 이해해야 하는 배포 동작원리\n에 대해…","fields":{"slug":"/ggcloudDeploy-6_01/"},"frontmatter":{"date":"Feb 11, 2018","update":"Jan 01, 0001","title":"Google News Lab > 6. SSL 인증서 발급 <1편> 배포방식에 대한 고찰","tags":["Google News Lab","Kubernetes","Django","SSL","Let's Encrypt"]}}}]},{"fieldValue":"Network","totalCount":1,"edges":[{"node":{"excerpt":"(Web Server Gateway Interface)는 웹서버와 파이썬을 사용한 웹 어플리케이션 개발환경 간의 인터페이스에 대한 규칙\n이다. 파이썬으로 선택할 수 있는 웹 프레임워크에서 사용할 수 있는 기존 웹서버는 , , , 또는 커스텀으로 만들…","fields":{"slug":"/web_WSGI/"},"frontmatter":{"date":"Sep 16, 2017","update":"Jan 01, 0001","title":"Web _ WSGI란 무엇인가?","tags":["Django","Web development","Network","python","WSGI"]}}}]},{"fieldValue":"Project","totalCount":10,"edges":[{"node":{"excerpt":"REST 프레임워크를 이용하여 로그인을 구현하는 방식에는 2가지가 있다. 바로 토큰과 세션 기반인데, 프로젝트에서는 토큰 기반 인증을 사용하여 다음과 같은 로직에 따라 구현하였다. 장고의 REST 로그인 - Token 인증 사용자에게서 User Cr…","fields":{"slug":"/web-2-인증API제작하기_02/"},"frontmatter":{"date":"Sep 29, 2017","update":"Jan 01, 0001","title":"Web _ 2.1 인증 API <2부> - REST의 토큰기반 인증","tags":["Django","Project","Web development"]}}},{"node":{"excerpt":"이번 포스트에서는 웹서비스의 기능에 해당하는 API들을 간략하게 소개해보려고 한다. 크게 3가지로 나뉘는데, 작품 목록 및 세부페이지 조회 API, 장르별 작품 목록 및 세부 페이지 API, 모티프 등록/수정/삭제 API 이다. API를 제작하면서 …","fields":{"slug":"/web_3.1-기능API제작-작품조회/"},"frontmatter":{"date":"Sep 29, 2017","update":"Jan 01, 0001","title":"Web _ 3.1 기능 API 구현하기","tags":["Django","Project","Web development"]}}},{"node":{"excerpt":"유저 관련 API는 웹서비스에 가입하는 사용자 정보를 저장하고 이 정보를 사용하여 서비스를 이용할 수 있는 권한을 제어한다. 커스텀으로 만든 유저 모델과 매니저에 대해 정리하였다. 커스텀 유저 모델 - MyUser 유저 모델은 커스텀으로 를 상속받아…","fields":{"slug":"/web-2-인증API제작하기_01/"},"frontmatter":{"date":"Sep 22, 2017","update":"Jan 01, 0001","title":"Web _ 2.1 인증 API <1부> - 유저 모델과 매니저","tags":["Django","Project","Web development"]}}},{"node":{"excerpt":"웹서비스에서 사이트맵을 제작할 경우 사용자가 클릭하여 바로 특정 페이지로 이동할 수 있도록 하는 네비게이션이 필요하다. 이번에는 2.1 라우트 설정하기 1편 포스트에 이어 SPA에서 네비게이션을 설정하는 방법에 대해 알아보자. 네비게이션 만들기 먼저…","fields":{"slug":"/web-2.2-라우트설정하기_02/"},"frontmatter":{"date":"Sep 22, 2017","update":"Jan 01, 0001","title":"Web _ 2.3 Vue.js를 사용하여 라우트 설정하기 <2부>","tags":["Django","Project","Web development","Vue.js"]}}},{"node":{"excerpt":"이번 포스트는 'Wordy Gallery' 프로젝트 전반의 앱 구성과 데이터베이스 모델링 설계를 바탕으로 작성하였다. Database ERD   : 사용자 정보를 저장  :  작품과 그 상세 정보를 저장  : 작품별 장르 정보를 저장  : 사용자가 …","fields":{"slug":"/web_1.3-앱생성및모델링/"},"frontmatter":{"date":"Sep 16, 2017","update":"Jan 01, 0001","title":"Web _ 1.3 앱 생성 및 모델링","tags":["Django","Project","Web development"]}}},{"node":{"excerpt":"프로젝트를 진행할 때 가장 중요한 것은 깃에서 추적할 코드와 추적하지 않을 중요 정보 및 설정을 분리해놓는 것\n이다. 특히 깃헙 퍼블릭 레포지토리를 사용하고 있다면 소스코드를 푸시하기 전에 반드시 추적되선 안되는 프로젝트 , 허용하는 호스트 주소들,…","fields":{"slug":"/web_1.2-장고배포환경구축하기/"},"frontmatter":{"date":"Sep 13, 2017","update":"Jan 01, 0001","title":"Web _ 1.2 장고 배포환경 구축하기","tags":["Django","Project","Web development"]}}},{"node":{"excerpt":"어제부터 웹프로그래밍 스쿨 수료생 분들과 함께 를 시작했다. 해당 스터디에서는 각자가 만들고 싶었던 개인 프로젝트를 진행하면서 서로 피드백을 주고받는다. 이번 포스트에서는 1주차 미팅에서 한 일을 기록하고 프로젝트 관련 공부내용을 정리하고자 한다. …","fields":{"slug":"/web_1.1-개인 프로젝트 기획/"},"frontmatter":{"date":"Sep 08, 2017","update":"Jan 01, 0001","title":"Web _ 1.1 장고를 사용한 개인 프로젝트 기획 및 세팅하기","tags":["Django","Project","Web development"]}}},{"node":{"excerpt":"(Single Page Application)란 웹페이지를 보여줄 때 하나의 페이지에서 여러 컴포넌트들의 리소스(HTML, CSS, JS 등 페이지를 구성하는 코드들)를 지정한 URI에 따라 렌더해줄 수 있도록 구성한 웹 어플리케이션이다. SPA와 …","fields":{"slug":"/web-2.2-라우트설정하기_01/"},"frontmatter":{"date":"Sep 07, 2017","update":"Jan 01, 0001","title":"Web _ 2.2 Vue.js를 사용하여 라우트 설정하기 <1부>","tags":["Django","Project","Web development"]}}},{"node":{"excerpt":"이번 포스트에서는 웹 프레임워크인 를 소개하고 장고의 개발환경 설치까지 알아본다. 장고란 무엇이고, 왜 쓰는가? 는 파이썬으로 만들어진 오픈소스 웹 어플리케이션 프레임워크이다. 쉽게 말하면 웹사이트를 쉽고 빠르게 개발하기 위해 필요한 공통적인 요소들…","fields":{"slug":"/web_1.0-장고프로젝트세팅하기/"},"frontmatter":{"date":"Sep 07, 2017","update":"Jan 01, 0001","title":"Web _ 1.0 장고 프로젝트 세팅하기","tags":["Django","Project","Web development"]}}},{"node":{"excerpt":"이번 포스트에서는 웹 프레임워크인 를 소개하고 장고의 개발환경 설치까지 알아본다. 장고란 무엇이고, 왜 쓰는가? 는 파이썬으로 만들어진 오픈소스 웹 어플리케이션 프레임워크이다. 쉽게 말하면 웹사이트를 쉽고 빠르게 개발하기 위해 필요한 공통적인 요소들…","fields":{"slug":"/web_10.0-장고프로젝트세팅하기/"},"frontmatter":{"date":"Sep 07, 2017","update":"Jan 01, 0001","title":"Web _ 1.0 장고 프로젝트 세팅하기","tags":["Django","Project","Web development"]}}}]},{"fieldValue":"Project Euler","totalCount":2,"edges":[{"node":{"excerpt":"문제 설명 피보나치 수열의 각 항은 바로 앞의 항 두 개를 더한 것이 된다. 1과 2로 시작하는 경우 이 수열은 아래와 같다. 이 때 짝수이면서 4백만 이하인 모든 항을 더하면 얼마가 되는지 구하는 문제다. Project Euler 사이트의 2번 문…","fields":{"slug":"/Euler-Problem2/"},"frontmatter":{"date":"Aug 28, 2017","update":"Jan 01, 0001","title":"Project Euler > Python _ Problem 02","tags":["algorithm","Project Euler","python"]}}},{"node":{"excerpt":"문제 설명 10보다 작은 자연수 중에서 3 또는 5의 배수는 3, 5, 6, 9 이고, 이것을 모두 더하면 23이다. 이 때, 1000보다 작은 자연수 중에서 3 또는 5의 배수를 모두 더한 값을 구하는 문제다. Project Euler 사이트의 1…","fields":{"slug":"/Euler-problem1/"},"frontmatter":{"date":"Aug 28, 2017","update":"Jan 01, 0001","title":"Project Euler > Python _ Problem 01","tags":["algorithm","Project Euler","python"]}}}]},{"fieldValue":"Queue","totalCount":1,"edges":[{"node":{"excerpt":"우리가 사용하고 있는 웹서버(, ,  등)는 이다. 덕분에 브라우저에서 요청을 할 때마다 그에 따른 응답 결과를 서버에서 받아 보내줄 수 있다. 그러나 한번에 수많은 요청이 들어왔을 때는 어떨까? 웹서버는 처리가 끝날 때까지 브라우저에게 결과를 보내…","fields":{"slug":"/2scoops-25-비동기태스크큐/"},"frontmatter":{"date":"Jun 18, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 25장. 비동기 태스크 큐 이해하기","tags":["book review","Django","Celery","Redis","Queue"]}}}]},{"fieldValue":"REST api","totalCount":3,"edges":[{"node":{"excerpt":"이번 포스트에서는 초심으로 돌아가서 장고 프레임워크를 사용하기 전에 꼭 숙지해야하는 에 대해 알아보고자 한다. 읽기 쉬운 코드는 어떤 것인가? 가독성이 좋은 코드는 로직이 한 눈에 보이고 유지 관리가 쉬우며 리펙터링이 용이한 코드다. 이러한 코드는 …","fields":{"slug":"/2scoops-1-코딩스타일/"},"frontmatter":{"date":"Sep 05, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 1장. 코딩 스타일","tags":["book review","Django","REST api"]}}},{"node":{"excerpt":"1부에서 REST API의 핵심인 http 프로토콜에 대한 전반적인 내용을 다루었다. 2부에서는 REST API를 효율적으로 설계하는 방법들에 대해 소개한다. 해당 포스트는 의 16장 를 요약하여 작성하였다. 1. API 컴포넌트를 어디에 위치시킬까…","fields":{"slug":"/2scoops-16-RESTAPI_02/"},"frontmatter":{"date":"Sep 03, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 16장. REST API 구현하기 <2부>","tags":["book review","Django","REST api","HTTP"]}}},{"node":{"excerpt":"(Representational State Transfer)는 기존의 HTTP 통신 프로토콜을 제대로 활용하기 위해 만들어진 규칙이다. 또한 인터넷은 더이상 형식에만 국한되지 않고 , , , 등의 여러 형식을 지원하고 있다. 이에 따라 다양한 환경과…","fields":{"slug":"/2scoops-16-RESTAPI_01/"},"frontmatter":{"date":"Aug 30, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 16장. REST API 구현하기 <1부>","tags":["book review","Django","REST api","HTTP"]}}}]},{"fieldValue":"Redis","totalCount":1,"edges":[{"node":{"excerpt":"우리가 사용하고 있는 웹서버(, ,  등)는 이다. 덕분에 브라우저에서 요청을 할 때마다 그에 따른 응답 결과를 서버에서 받아 보내줄 수 있다. 그러나 한번에 수많은 요청이 들어왔을 때는 어떨까? 웹서버는 처리가 끝날 때까지 브라우저에게 결과를 보내…","fields":{"slug":"/2scoops-25-비동기태스크큐/"},"frontmatter":{"date":"Jun 18, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 25장. 비동기 태스크 큐 이해하기","tags":["book review","Django","Celery","Redis","Queue"]}}}]},{"fieldValue":"SSL","totalCount":2,"edges":[{"node":{"excerpt":"사이트를 배포하고 나서 반드시 해주어야 하는 작업이 있다. 바로 웹사이트 도메인에  인증서를 발급받는 일이다. 특히 크롬/사파리 브라우저는 앞으로 인증서가 없는 웹사이트에 접속 시 경고창을 띄울 것이라고 공지한 만큼 SSL인증서 발급은 웹사이트 배포…","fields":{"slug":"/ggcloudDeploy-6_02/"},"frontmatter":{"date":"Feb 13, 2018","update":"Jan 01, 0001","title":"Google News Lab > 6. SSL 인증서 발급 <2편> kube-lego 이해하기","tags":["Google News Lab","Kubernetes","Django","SSL","Let's Encrypt"]}}},{"node":{"excerpt":"웹앱을 배포할 때 웹 개발자가 반드시 준수해야 하는 사항이 있다. 바로 TLS/SSL 인증서를 발급받는 일이다. 이번 포스트에서는 인증서에 대한 개념을 뒤로 하고, 쿠버네트 엔진에서 인증서를 발급받기 위해 반드시 이해해야 하는 배포 동작원리\n에 대해…","fields":{"slug":"/ggcloudDeploy-6_01/"},"frontmatter":{"date":"Feb 11, 2018","update":"Jan 01, 0001","title":"Google News Lab > 6. SSL 인증서 발급 <1편> 배포방식에 대한 고찰","tags":["Google News Lab","Kubernetes","Django","SSL","Let's Encrypt"]}}}]},{"fieldValue":"Vim editor","totalCount":2,"edges":[{"node":{"excerpt":"에서는 알아두면 유용한  단축키 및 기능을 하루에 하나씩 정리합니다. 이번 포스트에서는 빔 에디터에서 지원하는 6개의 모드들에 대해 소개합니다. Vim의 모드들 빔 에디터는 6개의 모드를 지원한다. 간단하게 어떤 모드들이 있는지 알아보자. 1. No…","fields":{"slug":"/vim_modes/"},"frontmatter":{"date":"Oct 11, 2017","update":"Jan 01, 0001","title":"Vim _ Vim Editor의 다양한 Mode","tags":["Vim editor"]}}},{"node":{"excerpt":"오늘의 에서는 알아두면 유용한 vim 단축키 및 기능을 하루에 하나씩 정리합니다. 이번 포스트에서는 원하는 줄번호로 한번에 이동하여 편집할 수 있는 방법에 대해 소개합니다. 원하는 줄번호로 한번에 이동하기 원하는 라인번호로 이동하기 위해서는 다음과 …","fields":{"slug":"/vim_linenum/"},"frontmatter":{"date":"Oct 03, 2017","update":"Jan 01, 0001","title":"Vim _ 원하는 라인으로 한번에 이동하기","tags":["Vim editor"]}}}]},{"fieldValue":"Vue.js","totalCount":7,"edges":[{"node":{"excerpt":"이번 포스트에서는 자바스크립트로 1부터 N까지의 합을 구하는 알고리즘을 풀이한다. 코드 및 풀이 의 개념은 매우 중요하다. 함수 안에서 는 도큐먼트 객체를 참조한다. 만약 함수 내부에서 다른 콜백 함수를 실행하면 는 다른 값으로 연결될 수 있으므로 …","fields":{"slug":"/level1. 1-N까지의합/"},"frontmatter":{"date":"Oct 31, 2017","update":"Jan 01, 0001","title":"JS _ Lv1. N 까지의 합 구하기","tags":["Vue.js","javescript","algorithm"]}}},{"node":{"excerpt":"지난 포스트에서는 선언적 렌더링을 위해 HTML 요소 내부에서 사용할 수 있는 (directive)에 대해 알아보았다. 이번 포스트에는 기타 디렉티브들에 대해 정리하였다.  디렉티브 의 역할은 HTML 요소를 컴파일하지 않고 문자 그대로 출력하는 것…","fields":{"slug":"/vue-directives_03/"},"frontmatter":{"date":"Oct 17, 2017","update":"Jan 01, 0001","title":"Vue.js _ 5. 디렉티브 (directives) <3부>","tags":["Frontend","Vue.js"]}}},{"node":{"excerpt":"지난 포스트에 이어 선언적 렌더링을 위해 HTML 요소 내부에서 사용할 수 있는 (directive) 중 , 에 대해 알아보고자 한다. <brs 와 의 차이  디렉티브는 Vue 객체의 속성에 따라 렌더링 여부를 결정할 수 있는 기능이다. 도 랑 비슷…","fields":{"slug":"/vue-directives_02/"},"frontmatter":{"date":"Oct 17, 2017","update":"Jan 01, 0001","title":"Vue.js _ 4. 디렉티브 (directives) <2부>","tags":["Frontend","Vue.js"]}}},{"node":{"excerpt":"는 단일페이지 사용자 인터페이스(SPA, Single Page Application)를 만들기 위한 프론트엔드 프레임워크이다. 이번 포스트에서는 의 기본적인 특징과 설치법에 대해 정리해보았다. Vue.js의 특징 jquery처럼  태그를 사용하여 C…","fields":{"slug":"/vue-1-setup/"},"frontmatter":{"date":"Oct 16, 2017","update":"Jan 01, 0001","title":"Vue.js _ 1. Vue 소개 및 설치","tags":["Frontend","Vue.js"]}}},{"node":{"excerpt":"이번 포스트에서는 앞선 포스트에서 만든 예제를 바탕으로 Vue.js의 을 설명해보았다. Vue.js의  패턴 Vue는 --으로 구성된 을 따른다. 어플리케이션 로직과 UI를 분리하기 위해 설계된 패턴으로, UI를 가지는 응용 프로그램을 위한 아키텍처…","fields":{"slug":"/vue-2-mvvmpattern/"},"frontmatter":{"date":"Oct 16, 2017","update":"Jan 01, 0001","title":"Vue.js _ 2. vue파일에서 MVVM 패턴 구현하기","tags":["Frontend","Vue.js"]}}},{"node":{"excerpt":"이번 포스트에서는 템플릿 표현식( ) 말고도 선언적 렌더링을 위해 HTML 요소 내부에서 사용할 수 있는 (directive)에 대해 알아보고자 한다. 와  기존에 템플릿 표현식으로 데이터를 삽입했다. 그렇지만 에서는 HTML 요소에 목적에 따라 다…","fields":{"slug":"/vue-directives_01/"},"frontmatter":{"date":"Oct 16, 2017","update":"Jan 01, 0001","title":"Vue.js _ 3. 디렉티브 (directives) <1부>","tags":["Frontend","Vue.js"]}}},{"node":{"excerpt":"웹서비스에서 사이트맵을 제작할 경우 사용자가 클릭하여 바로 특정 페이지로 이동할 수 있도록 하는 네비게이션이 필요하다. 이번에는 2.1 라우트 설정하기 1편 포스트에 이어 SPA에서 네비게이션을 설정하는 방법에 대해 알아보자. 네비게이션 만들기 먼저…","fields":{"slug":"/web-2.2-라우트설정하기_02/"},"frontmatter":{"date":"Sep 22, 2017","update":"Jan 01, 0001","title":"Web _ 2.3 Vue.js를 사용하여 라우트 설정하기 <2부>","tags":["Django","Project","Web development","Vue.js"]}}}]},{"fieldValue":"WSGI","totalCount":1,"edges":[{"node":{"excerpt":"(Web Server Gateway Interface)는 웹서버와 파이썬을 사용한 웹 어플리케이션 개발환경 간의 인터페이스에 대한 규칙\n이다. 파이썬으로 선택할 수 있는 웹 프레임워크에서 사용할 수 있는 기존 웹서버는 , , , 또는 커스텀으로 만들…","fields":{"slug":"/web_WSGI/"},"frontmatter":{"date":"Sep 16, 2017","update":"Jan 01, 0001","title":"Web _ WSGI란 무엇인가?","tags":["Django","Web development","Network","python","WSGI"]}}}]},{"fieldValue":"Web development","totalCount":11,"edges":[{"node":{"excerpt":"REST 프레임워크를 이용하여 로그인을 구현하는 방식에는 2가지가 있다. 바로 토큰과 세션 기반인데, 프로젝트에서는 토큰 기반 인증을 사용하여 다음과 같은 로직에 따라 구현하였다. 장고의 REST 로그인 - Token 인증 사용자에게서 User Cr…","fields":{"slug":"/web-2-인증API제작하기_02/"},"frontmatter":{"date":"Sep 29, 2017","update":"Jan 01, 0001","title":"Web _ 2.1 인증 API <2부> - REST의 토큰기반 인증","tags":["Django","Project","Web development"]}}},{"node":{"excerpt":"이번 포스트에서는 웹서비스의 기능에 해당하는 API들을 간략하게 소개해보려고 한다. 크게 3가지로 나뉘는데, 작품 목록 및 세부페이지 조회 API, 장르별 작품 목록 및 세부 페이지 API, 모티프 등록/수정/삭제 API 이다. API를 제작하면서 …","fields":{"slug":"/web_3.1-기능API제작-작품조회/"},"frontmatter":{"date":"Sep 29, 2017","update":"Jan 01, 0001","title":"Web _ 3.1 기능 API 구현하기","tags":["Django","Project","Web development"]}}},{"node":{"excerpt":"유저 관련 API는 웹서비스에 가입하는 사용자 정보를 저장하고 이 정보를 사용하여 서비스를 이용할 수 있는 권한을 제어한다. 커스텀으로 만든 유저 모델과 매니저에 대해 정리하였다. 커스텀 유저 모델 - MyUser 유저 모델은 커스텀으로 를 상속받아…","fields":{"slug":"/web-2-인증API제작하기_01/"},"frontmatter":{"date":"Sep 22, 2017","update":"Jan 01, 0001","title":"Web _ 2.1 인증 API <1부> - 유저 모델과 매니저","tags":["Django","Project","Web development"]}}},{"node":{"excerpt":"웹서비스에서 사이트맵을 제작할 경우 사용자가 클릭하여 바로 특정 페이지로 이동할 수 있도록 하는 네비게이션이 필요하다. 이번에는 2.1 라우트 설정하기 1편 포스트에 이어 SPA에서 네비게이션을 설정하는 방법에 대해 알아보자. 네비게이션 만들기 먼저…","fields":{"slug":"/web-2.2-라우트설정하기_02/"},"frontmatter":{"date":"Sep 22, 2017","update":"Jan 01, 0001","title":"Web _ 2.3 Vue.js를 사용하여 라우트 설정하기 <2부>","tags":["Django","Project","Web development","Vue.js"]}}},{"node":{"excerpt":"이번 포스트는 'Wordy Gallery' 프로젝트 전반의 앱 구성과 데이터베이스 모델링 설계를 바탕으로 작성하였다. Database ERD   : 사용자 정보를 저장  :  작품과 그 상세 정보를 저장  : 작품별 장르 정보를 저장  : 사용자가 …","fields":{"slug":"/web_1.3-앱생성및모델링/"},"frontmatter":{"date":"Sep 16, 2017","update":"Jan 01, 0001","title":"Web _ 1.3 앱 생성 및 모델링","tags":["Django","Project","Web development"]}}},{"node":{"excerpt":"(Web Server Gateway Interface)는 웹서버와 파이썬을 사용한 웹 어플리케이션 개발환경 간의 인터페이스에 대한 규칙\n이다. 파이썬으로 선택할 수 있는 웹 프레임워크에서 사용할 수 있는 기존 웹서버는 , , , 또는 커스텀으로 만들…","fields":{"slug":"/web_WSGI/"},"frontmatter":{"date":"Sep 16, 2017","update":"Jan 01, 0001","title":"Web _ WSGI란 무엇인가?","tags":["Django","Web development","Network","python","WSGI"]}}},{"node":{"excerpt":"프로젝트를 진행할 때 가장 중요한 것은 깃에서 추적할 코드와 추적하지 않을 중요 정보 및 설정을 분리해놓는 것\n이다. 특히 깃헙 퍼블릭 레포지토리를 사용하고 있다면 소스코드를 푸시하기 전에 반드시 추적되선 안되는 프로젝트 , 허용하는 호스트 주소들,…","fields":{"slug":"/web_1.2-장고배포환경구축하기/"},"frontmatter":{"date":"Sep 13, 2017","update":"Jan 01, 0001","title":"Web _ 1.2 장고 배포환경 구축하기","tags":["Django","Project","Web development"]}}},{"node":{"excerpt":"어제부터 웹프로그래밍 스쿨 수료생 분들과 함께 를 시작했다. 해당 스터디에서는 각자가 만들고 싶었던 개인 프로젝트를 진행하면서 서로 피드백을 주고받는다. 이번 포스트에서는 1주차 미팅에서 한 일을 기록하고 프로젝트 관련 공부내용을 정리하고자 한다. …","fields":{"slug":"/web_1.1-개인 프로젝트 기획/"},"frontmatter":{"date":"Sep 08, 2017","update":"Jan 01, 0001","title":"Web _ 1.1 장고를 사용한 개인 프로젝트 기획 및 세팅하기","tags":["Django","Project","Web development"]}}},{"node":{"excerpt":"(Single Page Application)란 웹페이지를 보여줄 때 하나의 페이지에서 여러 컴포넌트들의 리소스(HTML, CSS, JS 등 페이지를 구성하는 코드들)를 지정한 URI에 따라 렌더해줄 수 있도록 구성한 웹 어플리케이션이다. SPA와 …","fields":{"slug":"/web-2.2-라우트설정하기_01/"},"frontmatter":{"date":"Sep 07, 2017","update":"Jan 01, 0001","title":"Web _ 2.2 Vue.js를 사용하여 라우트 설정하기 <1부>","tags":["Django","Project","Web development"]}}},{"node":{"excerpt":"이번 포스트에서는 웹 프레임워크인 를 소개하고 장고의 개발환경 설치까지 알아본다. 장고란 무엇이고, 왜 쓰는가? 는 파이썬으로 만들어진 오픈소스 웹 어플리케이션 프레임워크이다. 쉽게 말하면 웹사이트를 쉽고 빠르게 개발하기 위해 필요한 공통적인 요소들…","fields":{"slug":"/web_1.0-장고프로젝트세팅하기/"},"frontmatter":{"date":"Sep 07, 2017","update":"Jan 01, 0001","title":"Web _ 1.0 장고 프로젝트 세팅하기","tags":["Django","Project","Web development"]}}},{"node":{"excerpt":"이번 포스트에서는 웹 프레임워크인 를 소개하고 장고의 개발환경 설치까지 알아본다. 장고란 무엇이고, 왜 쓰는가? 는 파이썬으로 만들어진 오픈소스 웹 어플리케이션 프레임워크이다. 쉽게 말하면 웹사이트를 쉽고 빠르게 개발하기 위해 필요한 공통적인 요소들…","fields":{"slug":"/web_10.0-장고프로젝트세팅하기/"},"frontmatter":{"date":"Sep 07, 2017","update":"Jan 01, 0001","title":"Web _ 1.0 장고 프로젝트 세팅하기","tags":["Django","Project","Web development"]}}}]},{"fieldValue":"algorithm","totalCount":37,"edges":[{"node":{"excerpt":"문제 설명 toWeirdCase함수는 문자열 s를 매개변수로 입력받습니다.\n문자열 s에 각 단어의 짝수번째 인덱스 문자는 대문자로, 홀수번째 인덱스 문자는 소문자로 바꾼 문자열을 리턴하도록 함수를 완성하세요.\n예를 들어 s가 \"try hello wo…","fields":{"slug":"/level2. 이상한문자만들기/"},"frontmatter":{"date":"Nov 13, 2017","update":"Jan 01, 0001","title":"Python _ Lv2. 이상한 문자 만들기","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 앞뒤를 뒤집어도 똑같은 문자열을 palindrome이라고 합니다.\nlongest_palindrom함수는 문자열 s를 매개변수로 입력받습니다.\ns의 부분문자열중 가장 긴 palindrom의 길이를 리턴하는 함수를 완성하세요.\n예를들어 s가 …","fields":{"slug":"/level2. 가장 긴 펠린드롬/"},"frontmatter":{"date":"Nov 03, 2017","update":"Jan 01, 0001","title":"Python _ Lv2. 가장 긴 펠린드롬","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 2016년 1월 1일은 금요일입니다. 2016년 A월 B일은 무슨 요일일까요? 두 수 A,B를 입력받아 A월 B일이 무슨 요일인지 출력하는 getDayName 함수를 완성하세요. 요일의 이름은 일요일부터 토요일까지 각각\nSUN,MON,TU…","fields":{"slug":"/level2. 2016년/"},"frontmatter":{"date":"Nov 01, 2017","update":"Jan 01, 0001","title":"Python _ Lv2. 2016년","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 1937년 Collatz란 사람에 의해 제기된 이 추측은, 입력된 수가 짝수라면 2로 나누고, 홀수라면 3을 곱하고 1을 더한 다음, 결과로 나온 수에 같은 작업을 1이 될 때까지 반복할 경우 모든 수가 1이 된다는 추측입니다.  예를 들…","fields":{"slug":"/level2. 콜라츠추측/"},"frontmatter":{"date":"Nov 01, 2017","update":"Jan 01, 0001","title":"Python _ Lv2. 콜라츠 추측","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 numberOfPrime 메소드는 정수 n을 매개변수로 입력받습니다.\n1부터 입력받은 숫자 n 사이에 있는 소수의 개수를 반환하도록 numberOfPrime 메소드를 만들어 보세요. 소수는 1과 자기 자신으로만 나누어지는 수를 의미합니다.…","fields":{"slug":"/level2. 소수찾기/"},"frontmatter":{"date":"Oct 31, 2017","update":"Jan 01, 0001","title":"Python _ Lv2. 소수 찾기","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 digit_reverse함수는 양의 정수 n을 매개변수로 입력받습니다.\nn을 뒤집어 숫자 하나하나를 list로 표현해주세요\n예를 들어 n이 12345이면 5,4,3,2,1을 리턴하면 됩니다. 문제 보러가기 코드 및 풀이 숫자를 뒤집는 방법…","fields":{"slug":"/level2. 자연수뒤집어리스트만들기/"},"frontmatter":{"date":"Oct 31, 2017","update":"Jan 01, 0001","title":"Python _ Lv2. 자연수 뒤집어 리스트로 만들기","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 양의 정수 x가 하샤드 수이려면 x의 자릿수의 합으로 x가 나누어져야 합니다.\n예를들어 18의 자릿수 합은 1+8=9이고, 18은 9로 나누어 떨어지므로\n18은 하샤드 수입니다. Harshad함수는 양의 정수 n을 매개변수로 입력받습니다.…","fields":{"slug":"/level2. 하샤드수/"},"frontmatter":{"date":"Oct 31, 2017","update":"Jan 01, 0001","title":"Python _ Lv2. 하샤드 수","tags":["algorithm","python"]}}},{"node":{"excerpt":"이번 포스트에서는 자바스크립트로 1부터 N까지의 합을 구하는 알고리즘을 풀이한다. 코드 및 풀이 의 개념은 매우 중요하다. 함수 안에서 는 도큐먼트 객체를 참조한다. 만약 함수 내부에서 다른 콜백 함수를 실행하면 는 다른 값으로 연결될 수 있으므로 …","fields":{"slug":"/level1. 1-N까지의합/"},"frontmatter":{"date":"Oct 31, 2017","update":"Jan 01, 0001","title":"JS _ Lv1. N 까지의 합 구하기","tags":["Vue.js","javescript","algorithm"]}}},{"node":{"excerpt":"어떤 수를 입력받아 그 수의 약수를 모두 더한 수 sumDivisor 함수를 완성해 보세요.\n예를 들어 12가 입력된다면 12의 약수는 1, 2, 3, 4, 6, 12가 되고,\n총 합은 28이 되므로 28을 반환해 주면 됩니다. 문제 보러가기 코드 …","fields":{"slug":"/level1. 약수의합/"},"frontmatter":{"date":"Oct 30, 2017","update":"Jan 01, 0001","title":"Python _ Lv1. 약수의 합","tags":["algorithm","python"]}}},{"node":{"excerpt":"행렬의 덧셈은 행과 열의 크기가 같은 두 행렬의 같은 행, 같은 열의 값을 서로 더한 결과가 됩니다.\n2개의 행렬을 입력받는 sumMatrix 함수를 완성하여\n행렬 덧셈의 결과를 반환해 주세요. 예를 들어 2x2 행렬인\nA = ((1, 2), (2,…","fields":{"slug":"/level1. 행렬의덧셈/"},"frontmatter":{"date":"Oct 30, 2017","update":"Jan 01, 0001","title":"Python _ Lv1. 행렬의 덧셈","tags":["algorithm","python"]}}},{"node":{"excerpt":"8번은 한번에 계단을 오르는 갯수가 한정되어 있을 때 입력받은 계단의 수를 오르는 경우의 수를 구하는 문제이다. 해당 문제 또한 ,  그리고  재귀방식을 사용하여 풀어보았다. 문제 8) 계단 오르기 해당 문제는 계단의 수()가 증가할 때 그 경우의 …","fields":{"slug":"/recursion_08/"},"frontmatter":{"date":"Sep 25, 2017","update":"Jan 01, 0001","title":"Python _ Recursion8. 계단 오르기","tags":["algorithm","python","recursion"]}}},{"node":{"excerpt":"7번은 이진수로 구성된 16자리 이하의 숫자를 입력받은 후, 입력받은 숫자에 등장하는 1의 총 갯수를 구하는 문제이다. 해당 문제 또한 , , 그리고 재귀방식을 사용하여 풀어보았다. 문제 7) 이진수의 1의 개수 출력 코드 및 풀이 (1) while…","fields":{"slug":"/recursion_07/"},"frontmatter":{"date":"Sep 24, 2017","update":"Jan 01, 0001","title":"Python _ Recursion7. 이진수의 1의 개수 출력","tags":["algorithm","python","recursion"]}}},{"node":{"excerpt":"6번은 주어진 범위 안에서 입력받은 숫자의 각 자릿수를 더하는 문제이다. 해당 문제는 스트링의 인덱싱과 슬라이싱 성질을 사용하여 풀이하였다. 또, , , 그리고  방식을 사용하여 풀어보았다. 문제 6) 숫자의 자릿수의 합 코드 및 풀이 (1) whi…","fields":{"slug":"/recursion_06/"},"frontmatter":{"date":"Sep 23, 2017","update":"Jan 01, 0001","title":"Python _ Recursion6. 숫자의 자릿수의 합","tags":["algorithm","python","recursion"]}}},{"node":{"excerpt":"문제 5번은 입력받은 숫자를 거꾸로 출력하는 문제이다. 파이썬에서는 리스트 인덱싱과 슬라이싱을 사용하여 반복문을 사용하지 않고 풀 수도 있다. 해당 포스트에서는 리스트 인덱싱과 반복문(, ), 그리고 재귀를 사용하여 풀어보았다. 문제 5) 숫자를 거…","fields":{"slug":"/recursion_05/"},"frontmatter":{"date":"Sep 20, 2017","update":"Jan 01, 0001","title":"Python _ Recursion5. 숫자를 거꾸로 출력","tags":["algorithm","python","recursion"]}}},{"node":{"excerpt":"문제 4번은 재귀 함수를 구현할 때 가장 빈번하게 등장하는 을 구현하는 문제다. 피보나치를 간단하게 설명하자면 다음과 같다. 0과 1로 시작하며(시작값은 달라질 수 있다)  다음 피보나치 수는 바로 앞의 두 피보나치 수의 합이 된다. 이러한 규칙을 …","fields":{"slug":"/recursion_04/"},"frontmatter":{"date":"Sep 18, 2017","update":"Jan 01, 0001","title":"Python _ Recursion4. 피보나치 수열 출력","tags":["algorithm","python","recursion"]}}},{"node":{"excerpt":"3번은 정해진 범위 ()에서 의 값을 모두 출력하는 문제이다. 해당 문제의 핵심은 재귀를 계산한 값을 리턴하기 전에 출력을 한다는 데에 있었다. 이 문제도 , , 그리고 방식으로 각각 풀어보았다. 문제 3) 2 ** n 출력 해당 문제는 매우 간단하…","fields":{"slug":"/recursion_03/"},"frontmatter":{"date":"Sep 17, 2017","update":"Jan 01, 0001","title":"Python _ Recursion3. 2 ** n 출력","tags":["algorithm","python","recursion"]}}},{"node":{"excerpt":"아직 알고리즘을 작성하는 것에 익숙하지 않은 개발자들은 먼저 자신이 만든 코드가 정상적으로 작동되는지를 신경쓴다. 이 단계를 넘어서면 기본적으로 고려해야할 것이 바로 성능인데, 성능을 측정하는 방법 중의 하나가 하나의 알고리즘 문제를 여러 방식으로 …","fields":{"slug":"/countTime/"},"frontmatter":{"date":"Sep 12, 2017","update":"Jan 01, 0001","title":"Python _ 파이썬에서 코드실행시간 측정하기","tags":["algorithm","python"]}}},{"node":{"excerpt":"는 하나의 함수 내에서 자신(해당 함수)을 다시 호출하여 작업을 수행하는 방식으로 문제를 푸는 방법\n이다. 재귀함수를 설계할 때 가장 중요한 점은 매 호출시마다 매개변수가 변한다\n는 점이다. 계속 다른 매개변수에 대해 같은 함수처리를 반복, 즉, 자…","fields":{"slug":"/recursion_01/"},"frontmatter":{"date":"Sep 11, 2017","update":"Jan 01, 0001","title":"Python _ Recursion1. 1부터 n까지 연속된 수의 합","tags":["algorithm","python","recursion"]}}},{"node":{"excerpt":"두번째 문제는 첫번째 문제인 재귀 - 1부터 n까지 연속된 수의 합을 응용한 문제이다. 문제 2) 주어진 범위 내 홀수의 합 출력 이 문제에서는 매개변수의 범위가 정해져있는 가운데 매개변수보다 작은 홀수의 합만 재귀로 구하면 된다. 코드 및 풀이 (…","fields":{"slug":"/recursion_02/"},"frontmatter":{"date":"Sep 11, 2017","update":"Jan 01, 0001","title":"Python _ Recursion2. 홀수의 합 출력","tags":["algorithm","python","recursion"]}}},{"node":{"excerpt":"9번은 이항계수의 계산값을 재귀방식으로 구하는 문제이다. 여기서 이항계수(Binominal Coefficient)는 다음을 만족한다. 이항계수는  나 로 쓰기도 한다. 이항계수는 다음과 같은 성질을 가지는데 해당 문제는 다음 성질을 가진다. 실제로 …","fields":{"slug":"/recursion_09/"},"frontmatter":{"date":"Sep 11, 2017","update":"Jan 01, 0001","title":"Python _ Recursion9. 이항계수 계산하기","tags":["algorithm","python","recursion"]}}},{"node":{"excerpt":"문제 설명 두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환해주는 gcdlcm 함수를 완성해 보세요. 배열의 맨 앞에 최대공약수, 그 다음 최소공배수를 넣어 반환하면 됩니다. 예를 들어 gcdlcm(3,12) 가 입력되면, 3, 12를 반환해…","fields":{"slug":"/level1. 최대공약수와최소공배수/"},"frontmatter":{"date":"Sep 11, 2017","update":"Jan 01, 0001","title":"Python _ Lv1. 최대공약수와 최소공배수","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 수학을 공부하던 민지는 재미있는 사실을 발견하였습니다. 그 사실은 바로 연속된 자연수의 합으로 어떤 숫자를 표현하는 방법이 여러 가지라는 것입니다. 예를 들어, 15를 표현하는 방법은\n, , , 로 총 4가지가 존재합니다. 숫자를 입력받아…","fields":{"slug":"/level4. 숫자의표현/"},"frontmatter":{"date":"Sep 06, 2017","update":"Jan 01, 0001","title":"Python _ Lv4. 숫자의 표현","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 자연수로 이루어진 길이가 같은 수열 A,B가 있습니다. 최솟값 만들기는 A, B에서 각각 한 개의 숫자를 뽑아 두 수를 곱한 값을 누적하여 더합니다. 이러한 과정을 수열의 길이만큼 반복하여 최종적으로 누적된 값이 최소가 되도록 만드는 것이…","fields":{"slug":"/level2. 최솟값 구하기/"},"frontmatter":{"date":"Sep 05, 2017","update":"Jan 01, 0001","title":"Python _ Lv2. 최솟값 구하기","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 Jaden_Case함수는 문자열 s을 매개변수로 입력받습니다. s에 모든 단어의 첫 알파벳이 대문자이고, 그 외의 알파벳은 소문자인 문자열을 리턴하도록 함수를 완성하세요. 예를 들어 s가 \"3people unFollowed me for t…","fields":{"slug":"/level2. JadenCase 문자열 만들기/"},"frontmatter":{"date":"Aug 30, 2017","update":"Jan 01, 0001","title":"Python _ Lv2. JadenCase 문자열 만들기","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 피보나치 수열의 각 항은 바로 앞의 항 두 개를 더한 것이 된다. 1과 2로 시작하는 경우 이 수열은 아래와 같다. 이 때 짝수이면서 4백만 이하인 모든 항을 더하면 얼마가 되는지 구하는 문제다. Project Euler 사이트의 2번 문…","fields":{"slug":"/Euler-Problem2/"},"frontmatter":{"date":"Aug 28, 2017","update":"Jan 01, 0001","title":"Project Euler > Python _ Problem 02","tags":["algorithm","Project Euler","python"]}}},{"node":{"excerpt":"문제 설명 10보다 작은 자연수 중에서 3 또는 5의 배수는 3, 5, 6, 9 이고, 이것을 모두 더하면 23이다. 이 때, 1000보다 작은 자연수 중에서 3 또는 5의 배수를 모두 더한 값을 구하는 문제다. Project Euler 사이트의 1…","fields":{"slug":"/Euler-problem1/"},"frontmatter":{"date":"Aug 28, 2017","update":"Jan 01, 0001","title":"Project Euler > Python _ Problem 01","tags":["algorithm","Project Euler","python"]}}},{"node":{"excerpt":"문제 설명 딕셔너리는 들어있는 값에 순서가 없지만, 키를 기준으로 정렬하고 싶습니다. 그래서 키와 값을 튜플로 구성하고, 이를 순서대로 리스트에 넣으려고 합니다.\n예를들어 {\"김철수\":78, \"이하나\":97, \"정진원\":88}이 있다면 각각의 키와 …","fields":{"slug":"/level1. 딕셔너리정렬하기/"},"frontmatter":{"date":"Jun 13, 2017","update":"Jan 01, 0001","title":"Python _ Lv1. 딕셔너리 정렬하기","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 strange_sort함수는 strings와 n이라는 매개변수를 받아들입니다.\nstrings는 문자열로 구성된 리스트인데, 각 문자열을 인덱스 n인 글자를 기준으로 정렬하면 됩니다. 예를들어 strings가 \"sun\", \"bed\", \"ca…","fields":{"slug":"/level1. 문자열내맘대로정렬하기/"},"frontmatter":{"date":"Jun 12, 2017","update":"Jan 01, 0001","title":"Python _ Lv1. 문자열 내맘대로 정렬하기","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 numPY함수는 대문자와 소문자가 섞여있는 문자열 s를 매개변수로 입력받습니다.\ns에 'p'의 개수와 'y'의 개수를 비교해 같으면 True, 다르면 False를 리턴하도록 함수를 완성하세요. 'p', 'y' 모두 하나도 없는 경우는 항상…","fields":{"slug":"/level1. 문자열내p와y의갯수/"},"frontmatter":{"date":"Jun 08, 2017","update":"Jan 01, 0001","title":"Python _ Lv1. 문자열 내 p와 y의 갯수","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 alpha_string46함수는 문자열 s를 매개변수로 입력받습니다.\ns의 길이가 4혹은 6이고, 숫자로만 구성되있는지 확인해주는 함수를 완성하세요.\n예를들어 s가 \"a234\"이면 False를 리턴하고 \"1234\"라면 True를 리턴하면 …","fields":{"slug":"/level1. 문자열다루기기본/"},"frontmatter":{"date":"Jun 08, 2017","update":"Jan 01, 0001","title":"Python _ Lv1. 문자열 다루기 기본","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 findKim 함수(메소드)는 String형 배열 seoul을 매개변수로 받습니다. seoul의 element중 \"Kim\"의 위치 x를 찾아, \"김서방은 x에 있다\"는 String을 반환하세요.\nseoul에 \"Kim\"은 오직 한 번만 나타…","fields":{"slug":"/level1. 서울에서김서방찾기/"},"frontmatter":{"date":"Jun 07, 2017","update":"Jan 01, 0001","title":"Python _ Lv1. 서울에서 김서방 찾기","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 printTriangle 메소드는 양의 정수 num을 매개변수로 입력받습니다.\n다음을 참고해 *(별)로 높이가 num인 삼각형을 문자열로 리턴하는 printTriangle 메소드를 완성하세요\nprintTriangle이 return하는 St…","fields":{"slug":"/level1. 삼각형출력하기/"},"frontmatter":{"date":"Jun 07, 2017","update":"Jan 01, 0001","title":"Python _ Lv1. 삼각형 출력하기","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 water_melon함수는 정수 n을 매개변수로 입력받습니다.\n길이가 n이고, 수박수박수...와 같은 패턴을 유지하는 문자열을 리턴하도록 함수를 완성하세요. 예를들어 n이 4이면 '수박수박'을 리턴하고 3이라면 '수박수'를 리턴하면 됩니다…","fields":{"slug":"/level1. 수박수박수박수/"},"frontmatter":{"date":"Jun 05, 2017","update":"Jan 01, 0001","title":"lPython _ Lv1. 수박수박수박수?","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 strToInt 메소드는 String형 str을 매개변수로 받습니다.\nstr을 숫자로 변환한 결과를 반환하도록 strToInt를 완성하세요.\n예를들어 str이 \"1234\"이면 1234를 반환하고, \"-1234\"이면 -1234를 반환하면 됩…","fields":{"slug":"/level1. 스트링을숫자로바꾸기/"},"frontmatter":{"date":"Jun 02, 2017","update":"Jan 01, 0001","title":"Python _ Lv1. 스트링을 숫자로 바꾸기","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 함수는 자연수를 전달 받아서 숫자의 각 자릿수의 합을 구해서 return합니다.\n예를들어 number = 123이면 1 + 2 + 3 = 6을 return하면 됩니다.\n 함수를 완성해보세요. 내코드 타인의 코드 재귀 구조를 활용하여 일의 …","fields":{"slug":"/level1. 자릿수더하기/"},"frontmatter":{"date":"Jun 02, 2017","update":"Jan 01, 0001","title":"Python _ Lv1. 자릿수 더하기","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 nextSquare함수는 정수 n을 매개변수로 입력받습니다. n이 임의의 정수 x의 제곱이라면 x+1을 리턴하고, n이 임의의 정수 x의 제곱이 아니라면 'no'을 리턴하는 함수를 완성하세요. 예를 들어 n이 121이라면 이는 정수 11의…","fields":{"slug":"/level1. 정수제곱근판별하기/"},"frontmatter":{"date":"Jun 01, 2017","update":"Jan 01, 0001","title":"Python _ Lv1. 정수 제곱근 판별하기","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 rm_small함수는 list타입 변수 mylist을 매개변수로 입력받습니다.\nmylist 에서 가장 작은 수를 제거한 리스트를 리턴하고, mylist의 원소가 1개 이하인 경우는 []를 리턴하는 함수를 완성하세요.\n예를들어 mylist가…","fields":{"slug":"/level1. 제일작은수제거하기/"},"frontmatter":{"date":"Jun 01, 2017","update":"Jan 01, 0001","title":"Python _ Lv1. 제일 작은수 제거하기","tags":["algorithm","python"]}}}]},{"fieldValue":"basic grammar","totalCount":24,"edges":[{"node":{"excerpt":"자바스크립트의 란 사용자가 웹페이지에서 수행하는 모든 행위에 대한 페이지의 행동\n을 말한다. 예를 들면 마우스를 올리고 메뉴를 내리고 스크롤을 하는 등의 행동이 모두 이벤트이다. Timers 이벤트 (1) 페이지 로딩 이후 알림 띄우기 브라우저에 자…","fields":{"slug":"/js-20-events_02/"},"frontmatter":{"date":"Oct 24, 2017","update":"Jan 01, 0001","title":"JS _ 21. 이벤트(Event)와 활용 <2부> times","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"HTML 요소 중 을 구성하는 태그들은 자바스크립트 로 접근할 수 있다. 이번 포스트에서는 폼에 이벤트를 적용하는 것까지 실습을 통해 정리하였다.   태그 내  속성이 이라면 다음과 같이 접근하여 변수에 할당할 수 있다. 폼 태그에 이벤트 적용하기 …","fields":{"slug":"/js-22-formelements/"},"frontmatter":{"date":"Oct 24, 2017","update":"Jan 01, 0001","title":"JS _ 22. 폼(form) 엘리먼트 접근하기","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"지난 포스트에 이어 이번 포스트에서는  버튼 클릭 시 추가적인 유효성 검사를 적용할 수 있는  이벤트에 대해 소개한다. onsubmit 이벤트 적용하기 제출 버튼을 누르고 나면 서버와 통신을 하여 사용자가 입력한 정보가 유효한지 검사하고 정보를 (기…","fields":{"slug":"/js-23-formonsubmit/"},"frontmatter":{"date":"Oct 24, 2017","update":"Jan 01, 0001","title":"JS _ 23. 폼(form)에 onsubmit 이벤트 적용하기","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"이번 포스트에서는 자바스크립트의 강력한 라이브러리인 ()에 대해 간단히 소개한다. 제이쿼리는 자바스크립트의 대표적인 라이브러리다. 이미 구현되어 있는 애니메이션 효과나 양식 처리, 비디오 등의 처리를 편리하게 구현할 수 있다. 제이쿼리 (JQuery…","fields":{"slug":"/js-24-jquery/"},"frontmatter":{"date":"Oct 24, 2017","update":"Jan 01, 0001","title":"JS _ 24. JQuery 맛보기","tags":["javascript","jquery","basic grammar"]}}},{"node":{"excerpt":"자바스크립트의 란 사용자가 웹페이지에서 수행하는 모든 행위에 대한 페이지의 행동\n을 말한다. 예를 들면 마우스를 올리고 메뉴를 내리고 스크롤을 하는 등의 행동이 모두 이벤트이다. 많이 쓰는  이벤트와  이벤트를 사용해보았다. 예제 -  이벤트  다음…","fields":{"slug":"/js-20-events_01/"},"frontmatter":{"date":"Oct 23, 2017","update":"Jan 01, 0001","title":"JS _ 20. 이벤트(Event)와 활용 <1부> 개념, onclick, onload","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"일반적으로 객체지향 언어에서 생성자는 객체를 생성할 때 사용한다. 생성자를 실행하는 방식은 일반적으로 를 사용하는 방법이 있다. 생성자 함수를 만들 때는 보통 첫 글자를 대문자로 쓴다. 생성자로 객체 생성하기 다음과 같이 생성자에서 여러 개의 객체를…","fields":{"slug":"/js-15-constructor/"},"frontmatter":{"date":"Oct 20, 2017","update":"Jan 01, 0001","title":"JS _ 15. 생성자 (Constructor)","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"자바스크립트가 동작하는 데에 꼭 이해해야 할 (Document Object Model)의 개념과 활용방식에 대해 소개한다. 1. DOM이란? 은 Document Object Model의 약자로, 웹페이지와 상호작용할 때 사용한다. API(applic…","fields":{"slug":"/js-17-dom_01/"},"frontmatter":{"date":"Oct 20, 2017","update":"Jan 01, 0001","title":"JS _ 17. DOM의 정의 <1부>","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"자바스크립트에는 브라우저에서 동적으로 시간을 표시할 수 있는  내장함수를 제공하고 있다. Date() 다음과 같이 를 사용하여 객체를 생성한다. 위의 값은 페이지를 새로고침하면 계속 현재 시간으로 리프레시된다. 한편으로는 값을 직접 지정해서 변수에 …","fields":{"slug":"/js-16-dateobj/"},"frontmatter":{"date":"Oct 20, 2017","update":"Jan 01, 0001","title":"JS _ 16. Date Objects","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"지난 포스트에 이어 을 활용하는 방식에 대해 실습을 통하여 소개한다. 값을 바꾸고 속성을 찾는 방법, 그리고 CSS 속성을 변경하는 방식에 대해 각각 정리하였다. 1. 실제 DOM에서 값 바꿔보기 위 HTML 코드에서  태그 내의 텍스트를 바꿔보도록…","fields":{"slug":"/js-17-dom_02/"},"frontmatter":{"date":"Oct 20, 2017","update":"Jan 01, 0001","title":"JS _ 18. DOM 활용하기 <2부>","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"을 활용하는 방식에 대해 실습을 통하여 소개한다. 이번 포스트에서는 에 엘리먼트를 추가하고 삭제하는 방법에 대해 정리해보았다. 1. DOM에 새로운 엘리먼트 추가하기 새로운 엘리먼트를 직접 원하는 곳에 추가해줄 수 있다. 이 때 자바스크립트 내장함수…","fields":{"slug":"/js-17-dom_03/"},"frontmatter":{"date":"Oct 20, 2017","update":"Jan 01, 0001","title":"JS _ 19. DOM에 엘리먼트 추가, 삭제하기 <3부>","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"이번 포스트에서는 자바스크립트에서 중요한 개념인 변수의 스코프에 대해 실습한 내용을 소개한다. 변수 스코프 지역 변수 전역 변수 다음과 같이 지역변수인 는 함수 내에서만 사용되고 찾지 못하므로 를 발생시킨다.  변수에 함수 할당하기","fields":{"slug":"/js-09-varscope/"},"frontmatter":{"date":"Oct 19, 2017","update":"Jan 01, 0001","title":"JS _ 9. 변수 스코프 (Scope)","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"이번 포스트에서는 자바스크립트의 숫자 자료형과 자료형 연산시 등장하는 의 개념에 대해 소개한다. 숫자 자료형(Numbers)의 연산과 연쇄 숫자형에 를 붙일 경우 문자형으로 변환된다. 문자형과 숫자형 자료를 더하면 띄어쓰기 없이 합쳐진다. 결과는 다…","fields":{"slug":"/js-10-numbersnan/"},"frontmatter":{"date":"Oct 19, 2017","update":"Jan 01, 0001","title":"JS _ 10. 숫자형 자료와 NaN","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"이번 포스트에서는 자바스크립트의 문자 자료형에 대한 소개와 비교연산, 그리고 ,  방식에 대해 소개한다. 문자 자료형 (Strings) 문자형의 비교연산 다음은 스트링 값의 비교연산에 대한 예제들이다. 문자열 잘라내기와 나누기 (String slic…","fields":{"slug":"/js-11-string/"},"frontmatter":{"date":"Oct 19, 2017","update":"Jan 01, 0001","title":"JS _ 11. 문자형 자료의 연산","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"이번 포스트에서는 자바스크립트의 배열에 대해 간단히 소개한다. 배열 생성하기 (Arrays) 배열 사용하기","fields":{"slug":"/js-12-array/"},"frontmatter":{"date":"Oct 19, 2017","update":"Jan 01, 0001","title":"JS _ 12. 배열 (Array)","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"이번 포스트에서는 자바스크립트의 객체에 대해 간단히 소개한다. 객체 (Objects) 자바스크립트에서는 객체를 사용한다. strings, numbers, arrays... 등이 모두 객체이다. 이러한 객체는 클래스의 프로퍼티와 메서드를 사용할 수 있…","fields":{"slug":"/js-13-objects/"},"frontmatter":{"date":"Oct 19, 2017","update":"Jan 01, 0001","title":"JS _ 13. 객체 (Objects)","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"자바스크립트의 가 각 컨텍스트(context)마다 어떠한 방식으로 동작하는지 MDN 문서를 참고하여 정리해보았다.  키워드 는 자바스크립트에서 함수의 현재 실행 문맥\n이다. 따라서 가 쓰여지고 호출되는 방식에 따라 참조하는 객체가 달라진다. 위와 같…","fields":{"slug":"/js-14-this/"},"frontmatter":{"date":"Oct 19, 2017","update":"Jan 01, 0001","title":"JS _ 14. 자바스크립트의 this","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"은 웹페이지의 구조를 제어한다. 은  구조의 디스플레이와 디자인을 제어한다. 는  요소의 행동과 인터렉티비티(상호작용, Interactivity)을 추가해준다. 1. JavaScript는 스크립트 언어이다. 의도적으로 제한되어 있다.  이나 같은 프…","fields":{"slug":"/js-01-intro/"},"frontmatter":{"date":"Oct 18, 2017","update":"Jan 01, 0001","title":"JS _ 1. 자바스크립트의 정의와 기본 문법","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"브라우저 콘솔에서 자바스크립트로 로깅(=기록을 남기는, 출력하는) 방식을 소개한다. 위의 코드를 진행하고 난 후의 브라우저 화면은 다음과 같다.","fields":{"slug":"/js-02-console/"},"frontmatter":{"date":"Oct 18, 2017","update":"Jan 01, 0001","title":"JS _ 2. 콘솔 로그 남기기","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"자바스크립트의 if 조건문은 조건을 충족하는 경우 특정 코드를, 만족하지 않을 경우 다른 특정 코드를 적용하는 방식으로 동작한다. 조건이 여러가지인 경우에는 를 쓸 수 있다.","fields":{"slug":"/js-04-if/"},"frontmatter":{"date":"Oct 18, 2017","update":"Jan 01, 0001","title":"JS _ 4. if & else if 조건문","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"자바스크립트의 자료형 중 형에 대해 알아보고 연산에 활용하는 방법을 소개한다. Boolean()","fields":{"slug":"/js-03-boolean자료형/"},"frontmatter":{"date":"Oct 18, 2017","update":"Jan 01, 0001","title":"JS _ 3. Boolean 자료형","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"이번 포스트에서는 자바스크립트의  루프와  루프에 대해 소개한다. 1. while 루프 브라우저에서 작동한 화면은 다음과 같다.  2. for 루프 범위를 정하여 돌릴 수도 있다. 다음과 같이 작동하는 것을 확인할 수 있다.  3. loop문 활용하…","fields":{"slug":"/js-06-loops/"},"frontmatter":{"date":"Oct 18, 2017","update":"Jan 01, 0001","title":"JS _ 6. while과 for 루프","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"이번 포스트에서는 자바스크립트의 비교연산자(Comparison Operators)와 논리연산자(Logical Operators)에 대해 소개한다. 1. 비교연산자 (Comparison Operators) 2. 논리연산자 (Logical Operato…","fields":{"slug":"/js-05-comparisonlogical/"},"frontmatter":{"date":"Oct 18, 2017","update":"Jan 01, 0001","title":"JS _ 5. 비교연산자와 논리연산자","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"이번 포스트에서는 자바스크립트의 루프문과 조건문에서 사용할 수 있는 , 에 대해 정리하였다. Break & Continue 는 코드의 실행을 종료시킨다. 반면 는 코드를 건너뛰고 계속 진행시킨다. if문을 사용하여 다음과 같이 10 이하일 때 7에 …","fields":{"slug":"/js-07-breakcontinue/"},"frontmatter":{"date":"Oct 18, 2017","update":"Jan 01, 0001","title":"JS _ 7. break와 continue","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"이번 포스트에는 자바스크립트에서 함수를 정의하는 방법과 return 값 유무의 차이에 대해 정리하였다. 함수 작성하기 다른 변수에 값을 할당하여 출력방식을 바꿔줄 수도 있다. 이 때 함수에서는  값이 정의되어야 한다. 그렇지 않으면 함수에서 반환하는…","fields":{"slug":"/js-08-function/"},"frontmatter":{"date":"Oct 18, 2017","update":"Jan 01, 0001","title":"JS _ 8. 함수 (function)","tags":["javascript","basic grammar"]}}}]},{"fieldValue":"book review","totalCount":12,"edges":[{"node":{"excerpt":"이번 포스트에서는 모델의  API와 모델 매니저, 헬퍼 함수 등의 모델 인터페이스들에 대해 알아보고자 한다. 기본적인 모델에 대한 설명은 장고 문서를 참고하기 바란다. 1. 모델의 _meta API 장고 1.8이 되기 전까지  API는 공식적이지 않…","fields":{"slug":"/2scoops-6-modeling_03/"},"frontmatter":{"date":"Oct 17, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _  6장. 장고에서 모델 이용하기 <3부>","tags":["book review","Django"]}}},{"node":{"excerpt":"이번 포스트에서는 장고 모델 디자인에 관련된 내용을 정리해보았다. 기본적인 모델에 대한 설명은 장고 문서를 참고하기 바란다. 데이터베이스 정규화 데이터베이스를 설계할 때 기본 원칙으로 삼을 수 있는 것이 이다. 정규화에 대해 간략하게 정리해보았다. …","fields":{"slug":"/2scoops-6-modeling_02/"},"frontmatter":{"date":"Oct 15, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 6장. 장고에서 모델 이용하기 <2부>","tags":["book review","Django"]}}},{"node":{"excerpt":"장고 프레임워크에서 모델은 서비스의 기본 구조이자 뼈대이다. 따라서 초기 모델링이 매우매우 중요하다.(아무리 강조해도 모자란다) 프로젝트를 진행하다가 새로운 모델을 추가하거나 기존 모델을 수정할 때도 전체 디자인을 고려하여 설계해야한다. 이번 포스트…","fields":{"slug":"/2scoops-6-modeling_01/"},"frontmatter":{"date":"Oct 14, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 6장. 장고에서 모델 이용하기 <1부>","tags":["book review","Django"]}}},{"node":{"excerpt":"여러 개의 세팅파일을 적용할 경우 각 세팅파일에 해당하는  파일도 따로 관리해주어야 한다. 이는 서버마다 그 환경에 필요한 컴포넌트 및 패키지만 설치하자는 뜻이다. 이번 포스트에서는 패키지의 버전 관리를 도와주는  파일에 대해 알아볼 것이다. 또, …","fields":{"slug":"/2scoops-5_02/"},"frontmatter":{"date":"Sep 29, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 5장. settings와 requirements 파일 <2부>","tags":["book review","Django"]}}},{"node":{"excerpt":"layout: post\ntitle: Two Scoops of Django - 4장. 장고 앱 디자인의 기본\ncategories: 도서 리뷰\ntags: django, 장고\ndescription: 장고에서는 하나의 프로젝트를 생성하고, 그 내부에 프로젝…","fields":{"slug":"/2scoops-4-장고앱디자인의기본/"},"frontmatter":{"date":"Sep 28, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 4장. 장고 앱 디자인의 기본","tags":["book review","Django"]}}},{"node":{"excerpt":"장고 1.8에서는 140가지 설정을 제어할 수 있는 세팅 모듈과 버전별 필요 패키지를 기록할 수 있는  모듈을 통해 프로젝트를 실행 환경별로 구동한다. 이번 포스트에서는 실행 환경별 최선의 설정 관리법에 대해 알아보았다. 2부에서는 그에 따라 요구되…","fields":{"slug":"/2scoops-5_01/"},"frontmatter":{"date":"Sep 28, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 5장. settings와 requirements 파일 <1부>","tags":["book review","Django"]}}},{"node":{"excerpt":"장고는 파이썬으로 쉽게 웹개발에 필요한 구조와 클래스를 제공하는 프레임워크이다.(더 읽어보기 - 1편. 장고 프로젝트 세팅하기) 이번 포스트에서는 투스쿱 도서 3장을 정리하면서 장고의 프로젝트를 구성하는 다양한 방법에 대해 소개하고자 한다. 장고에서…","fields":{"slug":"/2scoops-3-장고프로젝트구성하기/"},"frontmatter":{"date":"Sep 19, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 3장. 장고 프로젝트 구성하기","tags":["book review","Django"]}}},{"node":{"excerpt":"1장에서는 파이썬과 장고의 표준 스타일가이드에 대해서 공부하였다. 2장에서는 장고를 사용할 때 최적화된 로컬환경을 구성하는 간단한 가이드를 소개한다. 1. 같은 데이터베이스를 사용하라 개인 및 팀프로젝트를 진행할 때 로컬환경에서는 을, 배포환경에서는…","fields":{"slug":"/2scoops-2-최적화된장고꾸미기/"},"frontmatter":{"date":"Sep 10, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 2장. 최적화된 장고 꾸미기","tags":["book review","Django"]}}},{"node":{"excerpt":"이번 포스트에서는 초심으로 돌아가서 장고 프레임워크를 사용하기 전에 꼭 숙지해야하는 에 대해 알아보고자 한다. 읽기 쉬운 코드는 어떤 것인가? 가독성이 좋은 코드는 로직이 한 눈에 보이고 유지 관리가 쉬우며 리펙터링이 용이한 코드다. 이러한 코드는 …","fields":{"slug":"/2scoops-1-코딩스타일/"},"frontmatter":{"date":"Sep 05, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 1장. 코딩 스타일","tags":["book review","Django","REST api"]}}},{"node":{"excerpt":"1부에서 REST API의 핵심인 http 프로토콜에 대한 전반적인 내용을 다루었다. 2부에서는 REST API를 효율적으로 설계하는 방법들에 대해 소개한다. 해당 포스트는 의 16장 를 요약하여 작성하였다. 1. API 컴포넌트를 어디에 위치시킬까…","fields":{"slug":"/2scoops-16-RESTAPI_02/"},"frontmatter":{"date":"Sep 03, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 16장. REST API 구현하기 <2부>","tags":["book review","Django","REST api","HTTP"]}}},{"node":{"excerpt":"(Representational State Transfer)는 기존의 HTTP 통신 프로토콜을 제대로 활용하기 위해 만들어진 규칙이다. 또한 인터넷은 더이상 형식에만 국한되지 않고 , , , 등의 여러 형식을 지원하고 있다. 이에 따라 다양한 환경과…","fields":{"slug":"/2scoops-16-RESTAPI_01/"},"frontmatter":{"date":"Aug 30, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 16장. REST API 구현하기 <1부>","tags":["book review","Django","REST api","HTTP"]}}},{"node":{"excerpt":"우리가 사용하고 있는 웹서버(, ,  등)는 이다. 덕분에 브라우저에서 요청을 할 때마다 그에 따른 응답 결과를 서버에서 받아 보내줄 수 있다. 그러나 한번에 수많은 요청이 들어왔을 때는 어떨까? 웹서버는 처리가 끝날 때까지 브라우저에게 결과를 보내…","fields":{"slug":"/2scoops-25-비동기태스크큐/"},"frontmatter":{"date":"Jun 18, 2017","update":"Jan 01, 0001","title":"BookReview > Two Scoops of Django _ 25장. 비동기 태스크 큐 이해하기","tags":["book review","Django","Celery","Redis","Queue"]}}}]},{"fieldValue":"favicon","totalCount":1,"edges":[{"node":{"excerpt":"장고 프로젝트를 생성하고 처음 로컬서버를 실행했을 때 항상 마주하는 로그가 있다. 바로 이것! 파비콘이 적용안됨 장고는 기본  파일을 기본적으로 제공하지 않는다. 결국 로컬 서버는 파일을 찾을 수 없다는  로그를 남긴다. 파비콘은 영어로 이라 쓰고,…","fields":{"slug":"/ggcloudDeploy_07/"},"frontmatter":{"date":"Feb 11, 2018","update":"Jan 01, 0001","title":"Google News Lab > 장고로 만든 웹사이트에 커스텀 파비콘(.ico) 적용시키기","tags":["Google News Lab","Django","favicon"]}}}]},{"fieldValue":"inheritance","totalCount":1,"edges":[{"node":{"excerpt":"css에서 대부분의 css속성은 부모 요소에서 자식 요소로 상속된다. 속성을 상속할 때 사용하는 선택자와 상속의 우선순위를 의미하는 특정도에 대해 알아보고, 텍스트 속성을 이용하여 상속을 설명해보았다. 상속이 되지 않는 속성도 있다. ex_ bord…","fields":{"slug":"/CSS_01/"},"frontmatter":{"date":"Jun 17, 2017","update":"Jan 01, 0001","title":"CSS _ 상속과 텍스트 속성","tags":["CSS","markup","inheritance"]}}}]},{"fieldValue":"javascript","totalCount":24,"edges":[{"node":{"excerpt":"자바스크립트의 란 사용자가 웹페이지에서 수행하는 모든 행위에 대한 페이지의 행동\n을 말한다. 예를 들면 마우스를 올리고 메뉴를 내리고 스크롤을 하는 등의 행동이 모두 이벤트이다. Timers 이벤트 (1) 페이지 로딩 이후 알림 띄우기 브라우저에 자…","fields":{"slug":"/js-20-events_02/"},"frontmatter":{"date":"Oct 24, 2017","update":"Jan 01, 0001","title":"JS _ 21. 이벤트(Event)와 활용 <2부> times","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"HTML 요소 중 을 구성하는 태그들은 자바스크립트 로 접근할 수 있다. 이번 포스트에서는 폼에 이벤트를 적용하는 것까지 실습을 통해 정리하였다.   태그 내  속성이 이라면 다음과 같이 접근하여 변수에 할당할 수 있다. 폼 태그에 이벤트 적용하기 …","fields":{"slug":"/js-22-formelements/"},"frontmatter":{"date":"Oct 24, 2017","update":"Jan 01, 0001","title":"JS _ 22. 폼(form) 엘리먼트 접근하기","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"지난 포스트에 이어 이번 포스트에서는  버튼 클릭 시 추가적인 유효성 검사를 적용할 수 있는  이벤트에 대해 소개한다. onsubmit 이벤트 적용하기 제출 버튼을 누르고 나면 서버와 통신을 하여 사용자가 입력한 정보가 유효한지 검사하고 정보를 (기…","fields":{"slug":"/js-23-formonsubmit/"},"frontmatter":{"date":"Oct 24, 2017","update":"Jan 01, 0001","title":"JS _ 23. 폼(form)에 onsubmit 이벤트 적용하기","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"이번 포스트에서는 자바스크립트의 강력한 라이브러리인 ()에 대해 간단히 소개한다. 제이쿼리는 자바스크립트의 대표적인 라이브러리다. 이미 구현되어 있는 애니메이션 효과나 양식 처리, 비디오 등의 처리를 편리하게 구현할 수 있다. 제이쿼리 (JQuery…","fields":{"slug":"/js-24-jquery/"},"frontmatter":{"date":"Oct 24, 2017","update":"Jan 01, 0001","title":"JS _ 24. JQuery 맛보기","tags":["javascript","jquery","basic grammar"]}}},{"node":{"excerpt":"자바스크립트의 란 사용자가 웹페이지에서 수행하는 모든 행위에 대한 페이지의 행동\n을 말한다. 예를 들면 마우스를 올리고 메뉴를 내리고 스크롤을 하는 등의 행동이 모두 이벤트이다. 많이 쓰는  이벤트와  이벤트를 사용해보았다. 예제 -  이벤트  다음…","fields":{"slug":"/js-20-events_01/"},"frontmatter":{"date":"Oct 23, 2017","update":"Jan 01, 0001","title":"JS _ 20. 이벤트(Event)와 활용 <1부> 개념, onclick, onload","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"일반적으로 객체지향 언어에서 생성자는 객체를 생성할 때 사용한다. 생성자를 실행하는 방식은 일반적으로 를 사용하는 방법이 있다. 생성자 함수를 만들 때는 보통 첫 글자를 대문자로 쓴다. 생성자로 객체 생성하기 다음과 같이 생성자에서 여러 개의 객체를…","fields":{"slug":"/js-15-constructor/"},"frontmatter":{"date":"Oct 20, 2017","update":"Jan 01, 0001","title":"JS _ 15. 생성자 (Constructor)","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"자바스크립트가 동작하는 데에 꼭 이해해야 할 (Document Object Model)의 개념과 활용방식에 대해 소개한다. 1. DOM이란? 은 Document Object Model의 약자로, 웹페이지와 상호작용할 때 사용한다. API(applic…","fields":{"slug":"/js-17-dom_01/"},"frontmatter":{"date":"Oct 20, 2017","update":"Jan 01, 0001","title":"JS _ 17. DOM의 정의 <1부>","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"자바스크립트에는 브라우저에서 동적으로 시간을 표시할 수 있는  내장함수를 제공하고 있다. Date() 다음과 같이 를 사용하여 객체를 생성한다. 위의 값은 페이지를 새로고침하면 계속 현재 시간으로 리프레시된다. 한편으로는 값을 직접 지정해서 변수에 …","fields":{"slug":"/js-16-dateobj/"},"frontmatter":{"date":"Oct 20, 2017","update":"Jan 01, 0001","title":"JS _ 16. Date Objects","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"지난 포스트에 이어 을 활용하는 방식에 대해 실습을 통하여 소개한다. 값을 바꾸고 속성을 찾는 방법, 그리고 CSS 속성을 변경하는 방식에 대해 각각 정리하였다. 1. 실제 DOM에서 값 바꿔보기 위 HTML 코드에서  태그 내의 텍스트를 바꿔보도록…","fields":{"slug":"/js-17-dom_02/"},"frontmatter":{"date":"Oct 20, 2017","update":"Jan 01, 0001","title":"JS _ 18. DOM 활용하기 <2부>","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"을 활용하는 방식에 대해 실습을 통하여 소개한다. 이번 포스트에서는 에 엘리먼트를 추가하고 삭제하는 방법에 대해 정리해보았다. 1. DOM에 새로운 엘리먼트 추가하기 새로운 엘리먼트를 직접 원하는 곳에 추가해줄 수 있다. 이 때 자바스크립트 내장함수…","fields":{"slug":"/js-17-dom_03/"},"frontmatter":{"date":"Oct 20, 2017","update":"Jan 01, 0001","title":"JS _ 19. DOM에 엘리먼트 추가, 삭제하기 <3부>","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"이번 포스트에서는 자바스크립트에서 중요한 개념인 변수의 스코프에 대해 실습한 내용을 소개한다. 변수 스코프 지역 변수 전역 변수 다음과 같이 지역변수인 는 함수 내에서만 사용되고 찾지 못하므로 를 발생시킨다.  변수에 함수 할당하기","fields":{"slug":"/js-09-varscope/"},"frontmatter":{"date":"Oct 19, 2017","update":"Jan 01, 0001","title":"JS _ 9. 변수 스코프 (Scope)","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"이번 포스트에서는 자바스크립트의 숫자 자료형과 자료형 연산시 등장하는 의 개념에 대해 소개한다. 숫자 자료형(Numbers)의 연산과 연쇄 숫자형에 를 붙일 경우 문자형으로 변환된다. 문자형과 숫자형 자료를 더하면 띄어쓰기 없이 합쳐진다. 결과는 다…","fields":{"slug":"/js-10-numbersnan/"},"frontmatter":{"date":"Oct 19, 2017","update":"Jan 01, 0001","title":"JS _ 10. 숫자형 자료와 NaN","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"이번 포스트에서는 자바스크립트의 문자 자료형에 대한 소개와 비교연산, 그리고 ,  방식에 대해 소개한다. 문자 자료형 (Strings) 문자형의 비교연산 다음은 스트링 값의 비교연산에 대한 예제들이다. 문자열 잘라내기와 나누기 (String slic…","fields":{"slug":"/js-11-string/"},"frontmatter":{"date":"Oct 19, 2017","update":"Jan 01, 0001","title":"JS _ 11. 문자형 자료의 연산","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"이번 포스트에서는 자바스크립트의 배열에 대해 간단히 소개한다. 배열 생성하기 (Arrays) 배열 사용하기","fields":{"slug":"/js-12-array/"},"frontmatter":{"date":"Oct 19, 2017","update":"Jan 01, 0001","title":"JS _ 12. 배열 (Array)","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"이번 포스트에서는 자바스크립트의 객체에 대해 간단히 소개한다. 객체 (Objects) 자바스크립트에서는 객체를 사용한다. strings, numbers, arrays... 등이 모두 객체이다. 이러한 객체는 클래스의 프로퍼티와 메서드를 사용할 수 있…","fields":{"slug":"/js-13-objects/"},"frontmatter":{"date":"Oct 19, 2017","update":"Jan 01, 0001","title":"JS _ 13. 객체 (Objects)","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"자바스크립트의 가 각 컨텍스트(context)마다 어떠한 방식으로 동작하는지 MDN 문서를 참고하여 정리해보았다.  키워드 는 자바스크립트에서 함수의 현재 실행 문맥\n이다. 따라서 가 쓰여지고 호출되는 방식에 따라 참조하는 객체가 달라진다. 위와 같…","fields":{"slug":"/js-14-this/"},"frontmatter":{"date":"Oct 19, 2017","update":"Jan 01, 0001","title":"JS _ 14. 자바스크립트의 this","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"은 웹페이지의 구조를 제어한다. 은  구조의 디스플레이와 디자인을 제어한다. 는  요소의 행동과 인터렉티비티(상호작용, Interactivity)을 추가해준다. 1. JavaScript는 스크립트 언어이다. 의도적으로 제한되어 있다.  이나 같은 프…","fields":{"slug":"/js-01-intro/"},"frontmatter":{"date":"Oct 18, 2017","update":"Jan 01, 0001","title":"JS _ 1. 자바스크립트의 정의와 기본 문법","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"브라우저 콘솔에서 자바스크립트로 로깅(=기록을 남기는, 출력하는) 방식을 소개한다. 위의 코드를 진행하고 난 후의 브라우저 화면은 다음과 같다.","fields":{"slug":"/js-02-console/"},"frontmatter":{"date":"Oct 18, 2017","update":"Jan 01, 0001","title":"JS _ 2. 콘솔 로그 남기기","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"자바스크립트의 if 조건문은 조건을 충족하는 경우 특정 코드를, 만족하지 않을 경우 다른 특정 코드를 적용하는 방식으로 동작한다. 조건이 여러가지인 경우에는 를 쓸 수 있다.","fields":{"slug":"/js-04-if/"},"frontmatter":{"date":"Oct 18, 2017","update":"Jan 01, 0001","title":"JS _ 4. if & else if 조건문","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"자바스크립트의 자료형 중 형에 대해 알아보고 연산에 활용하는 방법을 소개한다. Boolean()","fields":{"slug":"/js-03-boolean자료형/"},"frontmatter":{"date":"Oct 18, 2017","update":"Jan 01, 0001","title":"JS _ 3. Boolean 자료형","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"이번 포스트에서는 자바스크립트의  루프와  루프에 대해 소개한다. 1. while 루프 브라우저에서 작동한 화면은 다음과 같다.  2. for 루프 범위를 정하여 돌릴 수도 있다. 다음과 같이 작동하는 것을 확인할 수 있다.  3. loop문 활용하…","fields":{"slug":"/js-06-loops/"},"frontmatter":{"date":"Oct 18, 2017","update":"Jan 01, 0001","title":"JS _ 6. while과 for 루프","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"이번 포스트에서는 자바스크립트의 비교연산자(Comparison Operators)와 논리연산자(Logical Operators)에 대해 소개한다. 1. 비교연산자 (Comparison Operators) 2. 논리연산자 (Logical Operato…","fields":{"slug":"/js-05-comparisonlogical/"},"frontmatter":{"date":"Oct 18, 2017","update":"Jan 01, 0001","title":"JS _ 5. 비교연산자와 논리연산자","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"이번 포스트에서는 자바스크립트의 루프문과 조건문에서 사용할 수 있는 , 에 대해 정리하였다. Break & Continue 는 코드의 실행을 종료시킨다. 반면 는 코드를 건너뛰고 계속 진행시킨다. if문을 사용하여 다음과 같이 10 이하일 때 7에 …","fields":{"slug":"/js-07-breakcontinue/"},"frontmatter":{"date":"Oct 18, 2017","update":"Jan 01, 0001","title":"JS _ 7. break와 continue","tags":["javascript","basic grammar"]}}},{"node":{"excerpt":"이번 포스트에는 자바스크립트에서 함수를 정의하는 방법과 return 값 유무의 차이에 대해 정리하였다. 함수 작성하기 다른 변수에 값을 할당하여 출력방식을 바꿔줄 수도 있다. 이 때 함수에서는  값이 정의되어야 한다. 그렇지 않으면 함수에서 반환하는…","fields":{"slug":"/js-08-function/"},"frontmatter":{"date":"Oct 18, 2017","update":"Jan 01, 0001","title":"JS _ 8. 함수 (function)","tags":["javascript","basic grammar"]}}}]},{"fieldValue":"javescript","totalCount":1,"edges":[{"node":{"excerpt":"이번 포스트에서는 자바스크립트로 1부터 N까지의 합을 구하는 알고리즘을 풀이한다. 코드 및 풀이 의 개념은 매우 중요하다. 함수 안에서 는 도큐먼트 객체를 참조한다. 만약 함수 내부에서 다른 콜백 함수를 실행하면 는 다른 값으로 연결될 수 있으므로 …","fields":{"slug":"/level1. 1-N까지의합/"},"frontmatter":{"date":"Oct 31, 2017","update":"Jan 01, 0001","title":"JS _ Lv1. N 까지의 합 구하기","tags":["Vue.js","javescript","algorithm"]}}}]},{"fieldValue":"jquery","totalCount":1,"edges":[{"node":{"excerpt":"이번 포스트에서는 자바스크립트의 강력한 라이브러리인 ()에 대해 간단히 소개한다. 제이쿼리는 자바스크립트의 대표적인 라이브러리다. 이미 구현되어 있는 애니메이션 효과나 양식 처리, 비디오 등의 처리를 편리하게 구현할 수 있다. 제이쿼리 (JQuery…","fields":{"slug":"/js-24-jquery/"},"frontmatter":{"date":"Oct 24, 2017","update":"Jan 01, 0001","title":"JS _ 24. JQuery 맛보기","tags":["javascript","jquery","basic grammar"]}}}]},{"fieldValue":"markup","totalCount":12,"edges":[{"node":{"excerpt":"선택자는 선택을 하게 해주는 요소이다. 이를 통해 특정 요소들을 선택하여 스타일을 적용할 수 있다. CSS의 속성을 부여할 HTML요소를 선택하는 선택자의 종류들에 대해 알아보자. 1. 하위선택자와 자식선택자 문서의 계층구조를 사용하여 특정 요소에 …","fields":{"slug":"/CSS_06/"},"frontmatter":{"date":"Jun 20, 2017","update":"Jan 01, 0001","title":"CSS _ 선택자","tags":["CSS","markup"]}}},{"node":{"excerpt":"css에서 지정할 수 있는 정렬은 ,  요소인지에 따라 결정된다. 각각의 경우에 텍스트 요소를 정렬하는 방식을 알아보자.  텍스트 요소를 가운데로 정렬한다. 단, 에는 적용되지 않는다. 블록요소의 가로 정렬은 어떻게 할까? 이 때는  속성을 지정하여…","fields":{"slug":"/CSS_04/"},"frontmatter":{"date":"Jun 19, 2017","update":"Jan 01, 0001","title":"CSS _ 페이지 정렬","tags":["CSS","markup"]}}},{"node":{"excerpt":"CSS는 HTML의 요소에 스타일 속성을 지정할 수 있도록 고안된 언어이다. 따라서 특정 요소에만 속성을 주기 위해서는 요소별로 구분자, 쉽게 말해 이 필요하다. 그리고 이러한 이름에는 지정한 속성에 대한 우선순위 계층이 존재하는데 이를 라고 한다.…","fields":{"slug":"/CSS_05/"},"frontmatter":{"date":"Jun 19, 2017","update":"Jan 01, 0001","title":"CSS _ 특정도","tags":["CSS","markup"]}}},{"node":{"excerpt":"css에서 대부분의 css속성은 부모 요소에서 자식 요소로 상속된다. 속성을 상속할 때 사용하는 선택자와 상속의 우선순위를 의미하는 특정도에 대해 알아보고, 텍스트 속성을 이용하여 상속을 설명해보았다. 상속이 되지 않는 속성도 있다. ex_ bord…","fields":{"slug":"/CSS_01/"},"frontmatter":{"date":"Jun 17, 2017","update":"Jan 01, 0001","title":"CSS _ 상속과 텍스트 속성","tags":["CSS","markup","inheritance"]}}},{"node":{"excerpt":"CSS에서 공간영역을 조절할 수 있는 박스모델과 배경이미지 지정하는 방법에 대해 알아본다. 1.  박스 모델  -  -  -  최초 마진, 보더, 패딩 두께는 0이다.  : 요소가 포함하고 있는 콘텐트의 너비 (수치값, 퍼센트값) 인라인 요소에는 지…","fields":{"slug":"/CSS_02/"},"frontmatter":{"date":"Jun 17, 2017","update":"Jan 01, 0001","title":"CSS _ 박스 모델","tags":["CSS","markup"]}}},{"node":{"excerpt":"CSS에서는 화면의 구성요소들을 각각 인라인, 블록 요소로 구분하고 이에 맞는 스타일 속성을 부여한다. CSS에서 적용할 수 있는 페이지 레이아웃 속성에 대해서 알아보자. 1. 기본 페이지 레이아웃 CSS요소를 화면에 출력할 수 있는 방법을 html…","fields":{"slug":"/CSS_03/"},"frontmatter":{"date":"Jun 17, 2017","update":"Jan 01, 0001","title":"CSS _ 페이지 레이아웃","tags":["CSS","markup"]}}},{"node":{"excerpt":"은 웹페이지를 위한 마크업 언어인 동시에 비교적 쉽게 구조를 만들 수 있는 템플릿 언어이다. 텍스트로 구성된 웹페이지에 구조적인 속성을 부여하는 태그들을 알아보자. (1) 헤드라인 h1 ~ h6 중요도 순으로 개요를 나타낼 때 사용하는 태그이다. 주…","fields":{"slug":"/HTML_06/"},"frontmatter":{"date":"Jun 17, 2017","update":"Jan 01, 0001","title":"HTML _ 텍스트와 관련된 태그","tags":["HTML","markup"]}}},{"node":{"excerpt":"HTML에서 표를 만들 수 있는 테이블 요소에 대해서 알아보자! 테이블의 기본 구조 table 태그 \nthead / tbody / tfoot : 행을 그룹화하는 태그 \ntr : 행 \nth : 헤더셀 \ntd : 데이터셀  colspan : 행 병합\nr…","fields":{"slug":"/HTML_05/"},"frontmatter":{"date":"Jun 17, 2017","update":"Jan 01, 0001","title":"HTML _ 테이블 요소","tags":["HTML","markup"]}}},{"node":{"excerpt":"브라우저는 기본적으로 이미지 포맷을 지원하여 이미지에 대한 플러그인은 필요없지만 비디오나 오디오는 플러그인을 지원해야한다. 이 때 사용할 수 있는 것이 HTML의 내장 컨텐트 태그 요소이다. 비디오, 오디오 내장 -  data : 포함할 파일의 ur…","fields":{"slug":"/HTML_02/"},"frontmatter":{"date":"Jun 16, 2017","update":"Jan 01, 0001","title":"HTML _ 내장 컨텐트 태그","tags":["HTML","markup"]}}},{"node":{"excerpt":"HTML은 마크업 언어로, 내용에 의미를 부여하는 언어이다. 따라서 각 요소의 속성 자체를 그대로 유지하는 것이 좋다. 디자인 요소는 최대한 css에서 해결하도록 한다. 1. 기본태그 소개  단락을 의미, paragraph 블록 요소 줄바꿈을 하려면…","fields":{"slug":"/HTML_01/"},"frontmatter":{"date":"Jun 16, 2017","update":"Jan 01, 0001","title":"HTML _ 기본 태그와 인라인, 블록 요소","tags":["HTML","markup"]}}},{"node":{"excerpt":"HTML을 작성할 때 알아 놓으면 좋은 특수문자 변환기호를 정리해보았다. 특수 문자 종류 모양 문자열 변환(escaping) copyright ©  앰퍼센트 &  부등호 <, > ,  작은 따옴표 ‘, ’ ,  큰 따옴표 “, ” ,  유로기호 € …","fields":{"slug":"/HTML_03/"},"frontmatter":{"date":"Jun 16, 2017","update":"Jan 01, 0001","title":"HTML _ 특수문자","tags":["HTML","markup"]}}},{"node":{"excerpt":"HTML은 웹페이지의 구조를 다루는 문법이다. 그리고 CSS는 HTML의 각 요소에 스타일 속성을 지정한다. 예를 들어, 문장을 쓰고 그 문장의 글씨 크기를 15px로 맞추고 싶다면 전자는 HTML, 후자는 CSS가 담당하게 된다.  SASS는 작업…","fields":{"slug":"/HTML_04/"},"frontmatter":{"date":"Jun 16, 2017","update":"Jan 01, 0001","title":"HTML/CSS _ HTML와 CSS 소개","tags":["HTML","markup","CSS"]}}}]},{"fieldValue":"python","totalCount":37,"edges":[{"node":{"excerpt":"문제 설명 toWeirdCase함수는 문자열 s를 매개변수로 입력받습니다.\n문자열 s에 각 단어의 짝수번째 인덱스 문자는 대문자로, 홀수번째 인덱스 문자는 소문자로 바꾼 문자열을 리턴하도록 함수를 완성하세요.\n예를 들어 s가 \"try hello wo…","fields":{"slug":"/level2. 이상한문자만들기/"},"frontmatter":{"date":"Nov 13, 2017","update":"Jan 01, 0001","title":"Python _ Lv2. 이상한 문자 만들기","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 앞뒤를 뒤집어도 똑같은 문자열을 palindrome이라고 합니다.\nlongest_palindrom함수는 문자열 s를 매개변수로 입력받습니다.\ns의 부분문자열중 가장 긴 palindrom의 길이를 리턴하는 함수를 완성하세요.\n예를들어 s가 …","fields":{"slug":"/level2. 가장 긴 펠린드롬/"},"frontmatter":{"date":"Nov 03, 2017","update":"Jan 01, 0001","title":"Python _ Lv2. 가장 긴 펠린드롬","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 2016년 1월 1일은 금요일입니다. 2016년 A월 B일은 무슨 요일일까요? 두 수 A,B를 입력받아 A월 B일이 무슨 요일인지 출력하는 getDayName 함수를 완성하세요. 요일의 이름은 일요일부터 토요일까지 각각\nSUN,MON,TU…","fields":{"slug":"/level2. 2016년/"},"frontmatter":{"date":"Nov 01, 2017","update":"Jan 01, 0001","title":"Python _ Lv2. 2016년","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 1937년 Collatz란 사람에 의해 제기된 이 추측은, 입력된 수가 짝수라면 2로 나누고, 홀수라면 3을 곱하고 1을 더한 다음, 결과로 나온 수에 같은 작업을 1이 될 때까지 반복할 경우 모든 수가 1이 된다는 추측입니다.  예를 들…","fields":{"slug":"/level2. 콜라츠추측/"},"frontmatter":{"date":"Nov 01, 2017","update":"Jan 01, 0001","title":"Python _ Lv2. 콜라츠 추측","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 numberOfPrime 메소드는 정수 n을 매개변수로 입력받습니다.\n1부터 입력받은 숫자 n 사이에 있는 소수의 개수를 반환하도록 numberOfPrime 메소드를 만들어 보세요. 소수는 1과 자기 자신으로만 나누어지는 수를 의미합니다.…","fields":{"slug":"/level2. 소수찾기/"},"frontmatter":{"date":"Oct 31, 2017","update":"Jan 01, 0001","title":"Python _ Lv2. 소수 찾기","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 digit_reverse함수는 양의 정수 n을 매개변수로 입력받습니다.\nn을 뒤집어 숫자 하나하나를 list로 표현해주세요\n예를 들어 n이 12345이면 5,4,3,2,1을 리턴하면 됩니다. 문제 보러가기 코드 및 풀이 숫자를 뒤집는 방법…","fields":{"slug":"/level2. 자연수뒤집어리스트만들기/"},"frontmatter":{"date":"Oct 31, 2017","update":"Jan 01, 0001","title":"Python _ Lv2. 자연수 뒤집어 리스트로 만들기","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 양의 정수 x가 하샤드 수이려면 x의 자릿수의 합으로 x가 나누어져야 합니다.\n예를들어 18의 자릿수 합은 1+8=9이고, 18은 9로 나누어 떨어지므로\n18은 하샤드 수입니다. Harshad함수는 양의 정수 n을 매개변수로 입력받습니다.…","fields":{"slug":"/level2. 하샤드수/"},"frontmatter":{"date":"Oct 31, 2017","update":"Jan 01, 0001","title":"Python _ Lv2. 하샤드 수","tags":["algorithm","python"]}}},{"node":{"excerpt":"어떤 수를 입력받아 그 수의 약수를 모두 더한 수 sumDivisor 함수를 완성해 보세요.\n예를 들어 12가 입력된다면 12의 약수는 1, 2, 3, 4, 6, 12가 되고,\n총 합은 28이 되므로 28을 반환해 주면 됩니다. 문제 보러가기 코드 …","fields":{"slug":"/level1. 약수의합/"},"frontmatter":{"date":"Oct 30, 2017","update":"Jan 01, 0001","title":"Python _ Lv1. 약수의 합","tags":["algorithm","python"]}}},{"node":{"excerpt":"행렬의 덧셈은 행과 열의 크기가 같은 두 행렬의 같은 행, 같은 열의 값을 서로 더한 결과가 됩니다.\n2개의 행렬을 입력받는 sumMatrix 함수를 완성하여\n행렬 덧셈의 결과를 반환해 주세요. 예를 들어 2x2 행렬인\nA = ((1, 2), (2,…","fields":{"slug":"/level1. 행렬의덧셈/"},"frontmatter":{"date":"Oct 30, 2017","update":"Jan 01, 0001","title":"Python _ Lv1. 행렬의 덧셈","tags":["algorithm","python"]}}},{"node":{"excerpt":"8번은 한번에 계단을 오르는 갯수가 한정되어 있을 때 입력받은 계단의 수를 오르는 경우의 수를 구하는 문제이다. 해당 문제 또한 ,  그리고  재귀방식을 사용하여 풀어보았다. 문제 8) 계단 오르기 해당 문제는 계단의 수()가 증가할 때 그 경우의 …","fields":{"slug":"/recursion_08/"},"frontmatter":{"date":"Sep 25, 2017","update":"Jan 01, 0001","title":"Python _ Recursion8. 계단 오르기","tags":["algorithm","python","recursion"]}}},{"node":{"excerpt":"7번은 이진수로 구성된 16자리 이하의 숫자를 입력받은 후, 입력받은 숫자에 등장하는 1의 총 갯수를 구하는 문제이다. 해당 문제 또한 , , 그리고 재귀방식을 사용하여 풀어보았다. 문제 7) 이진수의 1의 개수 출력 코드 및 풀이 (1) while…","fields":{"slug":"/recursion_07/"},"frontmatter":{"date":"Sep 24, 2017","update":"Jan 01, 0001","title":"Python _ Recursion7. 이진수의 1의 개수 출력","tags":["algorithm","python","recursion"]}}},{"node":{"excerpt":"6번은 주어진 범위 안에서 입력받은 숫자의 각 자릿수를 더하는 문제이다. 해당 문제는 스트링의 인덱싱과 슬라이싱 성질을 사용하여 풀이하였다. 또, , , 그리고  방식을 사용하여 풀어보았다. 문제 6) 숫자의 자릿수의 합 코드 및 풀이 (1) whi…","fields":{"slug":"/recursion_06/"},"frontmatter":{"date":"Sep 23, 2017","update":"Jan 01, 0001","title":"Python _ Recursion6. 숫자의 자릿수의 합","tags":["algorithm","python","recursion"]}}},{"node":{"excerpt":"문제 5번은 입력받은 숫자를 거꾸로 출력하는 문제이다. 파이썬에서는 리스트 인덱싱과 슬라이싱을 사용하여 반복문을 사용하지 않고 풀 수도 있다. 해당 포스트에서는 리스트 인덱싱과 반복문(, ), 그리고 재귀를 사용하여 풀어보았다. 문제 5) 숫자를 거…","fields":{"slug":"/recursion_05/"},"frontmatter":{"date":"Sep 20, 2017","update":"Jan 01, 0001","title":"Python _ Recursion5. 숫자를 거꾸로 출력","tags":["algorithm","python","recursion"]}}},{"node":{"excerpt":"문제 4번은 재귀 함수를 구현할 때 가장 빈번하게 등장하는 을 구현하는 문제다. 피보나치를 간단하게 설명하자면 다음과 같다. 0과 1로 시작하며(시작값은 달라질 수 있다)  다음 피보나치 수는 바로 앞의 두 피보나치 수의 합이 된다. 이러한 규칙을 …","fields":{"slug":"/recursion_04/"},"frontmatter":{"date":"Sep 18, 2017","update":"Jan 01, 0001","title":"Python _ Recursion4. 피보나치 수열 출력","tags":["algorithm","python","recursion"]}}},{"node":{"excerpt":"3번은 정해진 범위 ()에서 의 값을 모두 출력하는 문제이다. 해당 문제의 핵심은 재귀를 계산한 값을 리턴하기 전에 출력을 한다는 데에 있었다. 이 문제도 , , 그리고 방식으로 각각 풀어보았다. 문제 3) 2 ** n 출력 해당 문제는 매우 간단하…","fields":{"slug":"/recursion_03/"},"frontmatter":{"date":"Sep 17, 2017","update":"Jan 01, 0001","title":"Python _ Recursion3. 2 ** n 출력","tags":["algorithm","python","recursion"]}}},{"node":{"excerpt":"(Web Server Gateway Interface)는 웹서버와 파이썬을 사용한 웹 어플리케이션 개발환경 간의 인터페이스에 대한 규칙\n이다. 파이썬으로 선택할 수 있는 웹 프레임워크에서 사용할 수 있는 기존 웹서버는 , , , 또는 커스텀으로 만들…","fields":{"slug":"/web_WSGI/"},"frontmatter":{"date":"Sep 16, 2017","update":"Jan 01, 0001","title":"Web _ WSGI란 무엇인가?","tags":["Django","Web development","Network","python","WSGI"]}}},{"node":{"excerpt":"아직 알고리즘을 작성하는 것에 익숙하지 않은 개발자들은 먼저 자신이 만든 코드가 정상적으로 작동되는지를 신경쓴다. 이 단계를 넘어서면 기본적으로 고려해야할 것이 바로 성능인데, 성능을 측정하는 방법 중의 하나가 하나의 알고리즘 문제를 여러 방식으로 …","fields":{"slug":"/countTime/"},"frontmatter":{"date":"Sep 12, 2017","update":"Jan 01, 0001","title":"Python _ 파이썬에서 코드실행시간 측정하기","tags":["algorithm","python"]}}},{"node":{"excerpt":"는 하나의 함수 내에서 자신(해당 함수)을 다시 호출하여 작업을 수행하는 방식으로 문제를 푸는 방법\n이다. 재귀함수를 설계할 때 가장 중요한 점은 매 호출시마다 매개변수가 변한다\n는 점이다. 계속 다른 매개변수에 대해 같은 함수처리를 반복, 즉, 자…","fields":{"slug":"/recursion_01/"},"frontmatter":{"date":"Sep 11, 2017","update":"Jan 01, 0001","title":"Python _ Recursion1. 1부터 n까지 연속된 수의 합","tags":["algorithm","python","recursion"]}}},{"node":{"excerpt":"두번째 문제는 첫번째 문제인 재귀 - 1부터 n까지 연속된 수의 합을 응용한 문제이다. 문제 2) 주어진 범위 내 홀수의 합 출력 이 문제에서는 매개변수의 범위가 정해져있는 가운데 매개변수보다 작은 홀수의 합만 재귀로 구하면 된다. 코드 및 풀이 (…","fields":{"slug":"/recursion_02/"},"frontmatter":{"date":"Sep 11, 2017","update":"Jan 01, 0001","title":"Python _ Recursion2. 홀수의 합 출력","tags":["algorithm","python","recursion"]}}},{"node":{"excerpt":"9번은 이항계수의 계산값을 재귀방식으로 구하는 문제이다. 여기서 이항계수(Binominal Coefficient)는 다음을 만족한다. 이항계수는  나 로 쓰기도 한다. 이항계수는 다음과 같은 성질을 가지는데 해당 문제는 다음 성질을 가진다. 실제로 …","fields":{"slug":"/recursion_09/"},"frontmatter":{"date":"Sep 11, 2017","update":"Jan 01, 0001","title":"Python _ Recursion9. 이항계수 계산하기","tags":["algorithm","python","recursion"]}}},{"node":{"excerpt":"문제 설명 두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환해주는 gcdlcm 함수를 완성해 보세요. 배열의 맨 앞에 최대공약수, 그 다음 최소공배수를 넣어 반환하면 됩니다. 예를 들어 gcdlcm(3,12) 가 입력되면, 3, 12를 반환해…","fields":{"slug":"/level1. 최대공약수와최소공배수/"},"frontmatter":{"date":"Sep 11, 2017","update":"Jan 01, 0001","title":"Python _ Lv1. 최대공약수와 최소공배수","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 수학을 공부하던 민지는 재미있는 사실을 발견하였습니다. 그 사실은 바로 연속된 자연수의 합으로 어떤 숫자를 표현하는 방법이 여러 가지라는 것입니다. 예를 들어, 15를 표현하는 방법은\n, , , 로 총 4가지가 존재합니다. 숫자를 입력받아…","fields":{"slug":"/level4. 숫자의표현/"},"frontmatter":{"date":"Sep 06, 2017","update":"Jan 01, 0001","title":"Python _ Lv4. 숫자의 표현","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 자연수로 이루어진 길이가 같은 수열 A,B가 있습니다. 최솟값 만들기는 A, B에서 각각 한 개의 숫자를 뽑아 두 수를 곱한 값을 누적하여 더합니다. 이러한 과정을 수열의 길이만큼 반복하여 최종적으로 누적된 값이 최소가 되도록 만드는 것이…","fields":{"slug":"/level2. 최솟값 구하기/"},"frontmatter":{"date":"Sep 05, 2017","update":"Jan 01, 0001","title":"Python _ Lv2. 최솟값 구하기","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 Jaden_Case함수는 문자열 s을 매개변수로 입력받습니다. s에 모든 단어의 첫 알파벳이 대문자이고, 그 외의 알파벳은 소문자인 문자열을 리턴하도록 함수를 완성하세요. 예를 들어 s가 \"3people unFollowed me for t…","fields":{"slug":"/level2. JadenCase 문자열 만들기/"},"frontmatter":{"date":"Aug 30, 2017","update":"Jan 01, 0001","title":"Python _ Lv2. JadenCase 문자열 만들기","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 피보나치 수열의 각 항은 바로 앞의 항 두 개를 더한 것이 된다. 1과 2로 시작하는 경우 이 수열은 아래와 같다. 이 때 짝수이면서 4백만 이하인 모든 항을 더하면 얼마가 되는지 구하는 문제다. Project Euler 사이트의 2번 문…","fields":{"slug":"/Euler-Problem2/"},"frontmatter":{"date":"Aug 28, 2017","update":"Jan 01, 0001","title":"Project Euler > Python _ Problem 02","tags":["algorithm","Project Euler","python"]}}},{"node":{"excerpt":"문제 설명 10보다 작은 자연수 중에서 3 또는 5의 배수는 3, 5, 6, 9 이고, 이것을 모두 더하면 23이다. 이 때, 1000보다 작은 자연수 중에서 3 또는 5의 배수를 모두 더한 값을 구하는 문제다. Project Euler 사이트의 1…","fields":{"slug":"/Euler-problem1/"},"frontmatter":{"date":"Aug 28, 2017","update":"Jan 01, 0001","title":"Project Euler > Python _ Problem 01","tags":["algorithm","Project Euler","python"]}}},{"node":{"excerpt":"문제 설명 딕셔너리는 들어있는 값에 순서가 없지만, 키를 기준으로 정렬하고 싶습니다. 그래서 키와 값을 튜플로 구성하고, 이를 순서대로 리스트에 넣으려고 합니다.\n예를들어 {\"김철수\":78, \"이하나\":97, \"정진원\":88}이 있다면 각각의 키와 …","fields":{"slug":"/level1. 딕셔너리정렬하기/"},"frontmatter":{"date":"Jun 13, 2017","update":"Jan 01, 0001","title":"Python _ Lv1. 딕셔너리 정렬하기","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 strange_sort함수는 strings와 n이라는 매개변수를 받아들입니다.\nstrings는 문자열로 구성된 리스트인데, 각 문자열을 인덱스 n인 글자를 기준으로 정렬하면 됩니다. 예를들어 strings가 \"sun\", \"bed\", \"ca…","fields":{"slug":"/level1. 문자열내맘대로정렬하기/"},"frontmatter":{"date":"Jun 12, 2017","update":"Jan 01, 0001","title":"Python _ Lv1. 문자열 내맘대로 정렬하기","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 numPY함수는 대문자와 소문자가 섞여있는 문자열 s를 매개변수로 입력받습니다.\ns에 'p'의 개수와 'y'의 개수를 비교해 같으면 True, 다르면 False를 리턴하도록 함수를 완성하세요. 'p', 'y' 모두 하나도 없는 경우는 항상…","fields":{"slug":"/level1. 문자열내p와y의갯수/"},"frontmatter":{"date":"Jun 08, 2017","update":"Jan 01, 0001","title":"Python _ Lv1. 문자열 내 p와 y의 갯수","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 alpha_string46함수는 문자열 s를 매개변수로 입력받습니다.\ns의 길이가 4혹은 6이고, 숫자로만 구성되있는지 확인해주는 함수를 완성하세요.\n예를들어 s가 \"a234\"이면 False를 리턴하고 \"1234\"라면 True를 리턴하면 …","fields":{"slug":"/level1. 문자열다루기기본/"},"frontmatter":{"date":"Jun 08, 2017","update":"Jan 01, 0001","title":"Python _ Lv1. 문자열 다루기 기본","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 findKim 함수(메소드)는 String형 배열 seoul을 매개변수로 받습니다. seoul의 element중 \"Kim\"의 위치 x를 찾아, \"김서방은 x에 있다\"는 String을 반환하세요.\nseoul에 \"Kim\"은 오직 한 번만 나타…","fields":{"slug":"/level1. 서울에서김서방찾기/"},"frontmatter":{"date":"Jun 07, 2017","update":"Jan 01, 0001","title":"Python _ Lv1. 서울에서 김서방 찾기","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 printTriangle 메소드는 양의 정수 num을 매개변수로 입력받습니다.\n다음을 참고해 *(별)로 높이가 num인 삼각형을 문자열로 리턴하는 printTriangle 메소드를 완성하세요\nprintTriangle이 return하는 St…","fields":{"slug":"/level1. 삼각형출력하기/"},"frontmatter":{"date":"Jun 07, 2017","update":"Jan 01, 0001","title":"Python _ Lv1. 삼각형 출력하기","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 water_melon함수는 정수 n을 매개변수로 입력받습니다.\n길이가 n이고, 수박수박수...와 같은 패턴을 유지하는 문자열을 리턴하도록 함수를 완성하세요. 예를들어 n이 4이면 '수박수박'을 리턴하고 3이라면 '수박수'를 리턴하면 됩니다…","fields":{"slug":"/level1. 수박수박수박수/"},"frontmatter":{"date":"Jun 05, 2017","update":"Jan 01, 0001","title":"lPython _ Lv1. 수박수박수박수?","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 strToInt 메소드는 String형 str을 매개변수로 받습니다.\nstr을 숫자로 변환한 결과를 반환하도록 strToInt를 완성하세요.\n예를들어 str이 \"1234\"이면 1234를 반환하고, \"-1234\"이면 -1234를 반환하면 됩…","fields":{"slug":"/level1. 스트링을숫자로바꾸기/"},"frontmatter":{"date":"Jun 02, 2017","update":"Jan 01, 0001","title":"Python _ Lv1. 스트링을 숫자로 바꾸기","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 함수는 자연수를 전달 받아서 숫자의 각 자릿수의 합을 구해서 return합니다.\n예를들어 number = 123이면 1 + 2 + 3 = 6을 return하면 됩니다.\n 함수를 완성해보세요. 내코드 타인의 코드 재귀 구조를 활용하여 일의 …","fields":{"slug":"/level1. 자릿수더하기/"},"frontmatter":{"date":"Jun 02, 2017","update":"Jan 01, 0001","title":"Python _ Lv1. 자릿수 더하기","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 nextSquare함수는 정수 n을 매개변수로 입력받습니다. n이 임의의 정수 x의 제곱이라면 x+1을 리턴하고, n이 임의의 정수 x의 제곱이 아니라면 'no'을 리턴하는 함수를 완성하세요. 예를 들어 n이 121이라면 이는 정수 11의…","fields":{"slug":"/level1. 정수제곱근판별하기/"},"frontmatter":{"date":"Jun 01, 2017","update":"Jan 01, 0001","title":"Python _ Lv1. 정수 제곱근 판별하기","tags":["algorithm","python"]}}},{"node":{"excerpt":"문제 설명 rm_small함수는 list타입 변수 mylist을 매개변수로 입력받습니다.\nmylist 에서 가장 작은 수를 제거한 리스트를 리턴하고, mylist의 원소가 1개 이하인 경우는 []를 리턴하는 함수를 완성하세요.\n예를들어 mylist가…","fields":{"slug":"/level1. 제일작은수제거하기/"},"frontmatter":{"date":"Jun 01, 2017","update":"Jan 01, 0001","title":"Python _ Lv1. 제일 작은수 제거하기","tags":["algorithm","python"]}}}]},{"fieldValue":"recursion","totalCount":9,"edges":[{"node":{"excerpt":"8번은 한번에 계단을 오르는 갯수가 한정되어 있을 때 입력받은 계단의 수를 오르는 경우의 수를 구하는 문제이다. 해당 문제 또한 ,  그리고  재귀방식을 사용하여 풀어보았다. 문제 8) 계단 오르기 해당 문제는 계단의 수()가 증가할 때 그 경우의 …","fields":{"slug":"/recursion_08/"},"frontmatter":{"date":"Sep 25, 2017","update":"Jan 01, 0001","title":"Python _ Recursion8. 계단 오르기","tags":["algorithm","python","recursion"]}}},{"node":{"excerpt":"7번은 이진수로 구성된 16자리 이하의 숫자를 입력받은 후, 입력받은 숫자에 등장하는 1의 총 갯수를 구하는 문제이다. 해당 문제 또한 , , 그리고 재귀방식을 사용하여 풀어보았다. 문제 7) 이진수의 1의 개수 출력 코드 및 풀이 (1) while…","fields":{"slug":"/recursion_07/"},"frontmatter":{"date":"Sep 24, 2017","update":"Jan 01, 0001","title":"Python _ Recursion7. 이진수의 1의 개수 출력","tags":["algorithm","python","recursion"]}}},{"node":{"excerpt":"6번은 주어진 범위 안에서 입력받은 숫자의 각 자릿수를 더하는 문제이다. 해당 문제는 스트링의 인덱싱과 슬라이싱 성질을 사용하여 풀이하였다. 또, , , 그리고  방식을 사용하여 풀어보았다. 문제 6) 숫자의 자릿수의 합 코드 및 풀이 (1) whi…","fields":{"slug":"/recursion_06/"},"frontmatter":{"date":"Sep 23, 2017","update":"Jan 01, 0001","title":"Python _ Recursion6. 숫자의 자릿수의 합","tags":["algorithm","python","recursion"]}}},{"node":{"excerpt":"문제 5번은 입력받은 숫자를 거꾸로 출력하는 문제이다. 파이썬에서는 리스트 인덱싱과 슬라이싱을 사용하여 반복문을 사용하지 않고 풀 수도 있다. 해당 포스트에서는 리스트 인덱싱과 반복문(, ), 그리고 재귀를 사용하여 풀어보았다. 문제 5) 숫자를 거…","fields":{"slug":"/recursion_05/"},"frontmatter":{"date":"Sep 20, 2017","update":"Jan 01, 0001","title":"Python _ Recursion5. 숫자를 거꾸로 출력","tags":["algorithm","python","recursion"]}}},{"node":{"excerpt":"문제 4번은 재귀 함수를 구현할 때 가장 빈번하게 등장하는 을 구현하는 문제다. 피보나치를 간단하게 설명하자면 다음과 같다. 0과 1로 시작하며(시작값은 달라질 수 있다)  다음 피보나치 수는 바로 앞의 두 피보나치 수의 합이 된다. 이러한 규칙을 …","fields":{"slug":"/recursion_04/"},"frontmatter":{"date":"Sep 18, 2017","update":"Jan 01, 0001","title":"Python _ Recursion4. 피보나치 수열 출력","tags":["algorithm","python","recursion"]}}},{"node":{"excerpt":"3번은 정해진 범위 ()에서 의 값을 모두 출력하는 문제이다. 해당 문제의 핵심은 재귀를 계산한 값을 리턴하기 전에 출력을 한다는 데에 있었다. 이 문제도 , , 그리고 방식으로 각각 풀어보았다. 문제 3) 2 ** n 출력 해당 문제는 매우 간단하…","fields":{"slug":"/recursion_03/"},"frontmatter":{"date":"Sep 17, 2017","update":"Jan 01, 0001","title":"Python _ Recursion3. 2 ** n 출력","tags":["algorithm","python","recursion"]}}},{"node":{"excerpt":"는 하나의 함수 내에서 자신(해당 함수)을 다시 호출하여 작업을 수행하는 방식으로 문제를 푸는 방법\n이다. 재귀함수를 설계할 때 가장 중요한 점은 매 호출시마다 매개변수가 변한다\n는 점이다. 계속 다른 매개변수에 대해 같은 함수처리를 반복, 즉, 자…","fields":{"slug":"/recursion_01/"},"frontmatter":{"date":"Sep 11, 2017","update":"Jan 01, 0001","title":"Python _ Recursion1. 1부터 n까지 연속된 수의 합","tags":["algorithm","python","recursion"]}}},{"node":{"excerpt":"두번째 문제는 첫번째 문제인 재귀 - 1부터 n까지 연속된 수의 합을 응용한 문제이다. 문제 2) 주어진 범위 내 홀수의 합 출력 이 문제에서는 매개변수의 범위가 정해져있는 가운데 매개변수보다 작은 홀수의 합만 재귀로 구하면 된다. 코드 및 풀이 (…","fields":{"slug":"/recursion_02/"},"frontmatter":{"date":"Sep 11, 2017","update":"Jan 01, 0001","title":"Python _ Recursion2. 홀수의 합 출력","tags":["algorithm","python","recursion"]}}},{"node":{"excerpt":"9번은 이항계수의 계산값을 재귀방식으로 구하는 문제이다. 여기서 이항계수(Binominal Coefficient)는 다음을 만족한다. 이항계수는  나 로 쓰기도 한다. 이항계수는 다음과 같은 성질을 가지는데 해당 문제는 다음 성질을 가진다. 실제로 …","fields":{"slug":"/recursion_09/"},"frontmatter":{"date":"Sep 11, 2017","update":"Jan 01, 0001","title":"Python _ Recursion9. 이항계수 계산하기","tags":["algorithm","python","recursion"]}}}]}]}},"pageContext":{}},"staticQueryHashes":["2027115977","694178885"]}