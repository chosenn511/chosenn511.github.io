{"componentChunkName":"component---src-templates-post-tsx","path":"/web_3.1-기능API제작-작품조회/","result":{"data":{"markdownRemark":{"html":"<p>이번 포스트에서는 웹서비스의 기능에 해당하는 API들을 간략하게 소개해보려고 한다. 크게 3가지로 나뉘는데, 작품 목록 및 세부페이지 조회 API, 장르별 작품 목록 및 세부 페이지 API, 모티프 등록/수정/삭제 API 이다. API를 제작하면서 새롭게 배웠던 것들이나 개념을 정리해보고자 한다.</p>\n<br>\n<h2 id=\"장르별-작품-목록-및-세부-페이지-api\" style=\"position:relative;\"><a href=\"#%EC%9E%A5%EB%A5%B4%EB%B3%84-%EC%9E%91%ED%92%88-%EB%AA%A9%EB%A1%9D-%EB%B0%8F-%EC%84%B8%EB%B6%80-%ED%8E%98%EC%9D%B4%EC%A7%80-api\" aria-label=\"장르별 작품 목록 및 세부 페이지 api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장르별 작품 목록 및 세부 페이지 API</h2>\n<p>웹서비스에서 장르를 선택하면 해당 장르 내에 속한 작품 목록을 조회할 수 있도록 하려고 한다. 이 때 장르는 10가지로 제한하려고 하였다.</p>\n<h3 id=\"choice-이중-튜플-사용하기\" style=\"position:relative;\"><a href=\"#choice-%EC%9D%B4%EC%A4%91-%ED%8A%9C%ED%94%8C-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"choice 이중 튜플 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CHOICE 이중 튜플 사용하기</h3>\n<p>장고에서는 입력 값을 제한(선택)하게 하고싶은 경우, 커스텀 옵션을 정의하여 필드에 젹용할 수 있다. 아래와 같이 이중 튜플을 사용하여 데이터베이스에 저장되는 값과  화면에 보이는 값을 다르게 설정하여 필드에서 선택할 수 있도록 하였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 작품 분류할 장르 모델</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Genre</span><span class=\"token punctuation\">(</span>models<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    GENRE_TYPE_CHOICES <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token comment\"># ('DB에 저장되는 값', '화면에 보이는 값'),</span>\n        <span class=\"token punctuation\">(</span><span class=\"token string\">'collage'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'콜라주'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span><span class=\"token string\">'drawing'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'드로잉'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span><span class=\"token string\">'installation'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'설치미술'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span><span class=\"token string\">'new-media'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'뉴미디어'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span><span class=\"token string\">'graphic-design'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'그래픽디자인'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span><span class=\"token string\">'photography'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'사진'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span><span class=\"token string\">'video-art'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'비디오 아트'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span><span class=\"token string\">'print-making'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'프린팅'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span><span class=\"token string\">'sculpture'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'조각'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">(</span><span class=\"token string\">'others'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'기타'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 장르명</span>\n    name_genre <span class=\"token operator\">=</span> models<span class=\"token punctuation\">.</span>CharField<span class=\"token punctuation\">(</span>\n        max_length<span class=\"token operator\">=</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span>\n        choices<span class=\"token operator\">=</span>GENRE_TYPE_CHOICES\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p>다음과 같이 정의할 경우 드롭다운 메뉴가 생성된다. 드롭다운 메뉴에서는 한글로 보이지만, 데이터베이스에 저장될 때는 영어로 저장된다.</p>\n<br>\n<h3 id=\"카테고리명으로-장르별-작품목록-페이지--uri-생성하기\" style=\"position:relative;\"><a href=\"#%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC%EB%AA%85%EC%9C%BC%EB%A1%9C-%EC%9E%A5%EB%A5%B4%EB%B3%84-%EC%9E%91%ED%92%88%EB%AA%A9%EB%A1%9D-%ED%8E%98%EC%9D%B4%EC%A7%80--uri-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"카테고리명으로 장르별 작품목록 페이지  uri 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>카테고리명으로 장르별 작품목록 페이지  URI 생성하기</h3>\n<p>변하지 않는 값이라면 URI에서 값을 가져오는 데에 사용할 수 있다. 예를  들어 <code class=\"language-text\">id</code>값을 사용하는 경우 URL은 다음과 같을 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"txt\"><pre class=\"language-txt\"><code class=\"language-txt\">http://{{ domain }}/art/genre/1/\nhttp://{{ domain }}/art/genre/2/\n...\nhttp://{{ domain }}/art/genre/9/\nhttp://{{ domain }}/art/genre/10/</code></pre></div>\n<p>장르 모델에서 사용하는 장르의 갯수가 10개이고 변하지 않는 이름값을 가지므로 <code class=\"language-text\">id</code>보다는 <code class=\"language-text\">이름(string)</code>을 사용하여 URI를 만들어보았다.</p>\n<p>목표로 하는 장르별 작품 목록의 전체 URL은 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"txt\"><pre class=\"language-txt\"><code class=\"language-txt\">http://{{ domain }}/art/genre/collage/\nhttp://{{ domain }}/art/genre/drawing/\nhttp://{{ domain }}/art/genre/installation/\nhttp://{{ domain }}/art/genre/new-media/\n...</code></pre></div>\n<p>해당 장르에 속하는 작품 정보를 JSON 구조로 반환하는 뷰는 다음과 같다. 눈여겨볼 점은 사용자가 선택한  <code class=\"language-text\">genre_info</code>를 url에서 해당하는 이름으로 가져온다는 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">GenreArtListView</span><span class=\"token punctuation\">(</span>generics<span class=\"token punctuation\">.</span>ListAPIView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    장르별 작품 목록 페이지\n    작품을 클릭하면 작품상세페이지로 가게끔 처리(template)\n    \"\"\"</span>\n    serializer_class <span class=\"token operator\">=</span> ArtListSerializers\n    permission_classes <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>IsOwnerOrReadOnly<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"\n        장르명 별로 url을 보내면 해당 이름에 페이지를 보내준다.\n        \"\"\"</span>\n        <span class=\"token comment\"># name_genre를 url에 있는 genre_cate와 일치하는 것으로 쿼리한다.</span>\n        genre_info <span class=\"token operator\">=</span> Genre<span class=\"token punctuation\">.</span>objects<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>name_genre<span class=\"token operator\">=</span>kwargs<span class=\"token punctuation\">[</span><span class=\"token string\">'genre_cate'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        genre_artlist <span class=\"token operator\">=</span> genre_info<span class=\"token punctuation\">.</span>art\n        genreinfo_serializer <span class=\"token operator\">=</span> GenreListSerializers<span class=\"token punctuation\">(</span>genre_info<span class=\"token punctuation\">)</span>\n        genreart_serializer <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>serializer_class<span class=\"token punctuation\">(</span>genre_artlist<span class=\"token punctuation\">,</span> many<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n        content <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"genreInfo\"</span><span class=\"token punctuation\">:</span> genreinfo_serializer<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"genreArtList\"</span><span class=\"token punctuation\">:</span> genreart_serializer<span class=\"token punctuation\">.</span>data\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> Response<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">,</span> status<span class=\"token operator\">=</span>status<span class=\"token punctuation\">.</span>HTTP_200_OK<span class=\"token punctuation\">)</span></code></pre></div>\n<p>그리고 url에 다음과 같이 <code class=\"language-text\">genre_cate</code>와 일치하는 정규표현식을 작성해주면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># art/urls.py</span>\n\n<span class=\"token comment\"># 장르별 작품 목록</span>\n    url<span class=\"token punctuation\">(</span><span class=\"token string\">r'^genre/(?P&lt;genre_cate>.+)/$'</span><span class=\"token punctuation\">,</span>\n        apis<span class=\"token punctuation\">.</span>GenreArtListView<span class=\"token punctuation\">.</span>as_view<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        name<span class=\"token operator\">=</span><span class=\"token string\">'genre_detail'</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>이렇게 하면 장르명으로 작성된 URL을 보냈을 때 해당 장르 내의 작품정보목록을 JSON 구조로 반환한다.</p>\n<br>\n<h2 id=\"모티프-등록수정삭제-api\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%ED%8B%B0%ED%94%84-%EB%93%B1%EB%A1%9D%EC%88%98%EC%A0%95%EC%82%AD%EC%A0%9C-api\" aria-label=\"모티프 등록수정삭제 api permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모티프 등록/수정/삭제 API</h2>\n<p>본 서비스에서 모티프란 <code class=\"language-text\">작품에 대해 이야기하고 싶은 주제공간</code>이다. 사용자가 모티프를 생성하면 내부에 관련 주제로 다른 사용자와 댓글을 통해  의견을 나눌 수 있게 구상하였다.</p>\n<br>\n<h3 id=\"권한-설정하기\" style=\"position:relative;\"><a href=\"#%EA%B6%8C%ED%95%9C-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\"권한 설정하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>권한 설정하기</h3>\n<p>이 경우 사용자가 <strong>로그인한 경우</strong>에만 모티프를 생성, 수정, 삭제할 수 있어야 하며, 특히 수정 및 삭제의 경우에는 해당 모티프를 생성한 사용자만 가능하도록 권한을 커스터마이징 하였다.</p>\n<p>로그인 인증확인의 경우에는 레스트에서 지원하는 <code class=\"language-text\">IsAuthenticated</code> 퍼미션 클래스를 임포트하여 사용하였다. 반면 수정 및 삭제용으로 커스터마이징한 퍼미션 클래스는 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># utils/permissions/motif_perms.py</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">IsMotifOwnerOrReadOnly</span><span class=\"token punctuation\">(</span>permissions<span class=\"token punctuation\">.</span>BasePermission<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    관리자 또는 자기자신일 경우 perm = True\n    또는 obj의 소유자가 요청을 보낸 사용자일 경우 perm = True\n    \"\"\"</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">has_object_permission</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">,</span> view<span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> request<span class=\"token punctuation\">.</span>method <span class=\"token keyword\">in</span> permissions<span class=\"token punctuation\">.</span>SAFE_METHODS <span class=\"token keyword\">and</span> \\\n                permissions<span class=\"token punctuation\">.</span>IsAdminUser<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n        <span class=\"token keyword\">return</span> obj<span class=\"token punctuation\">.</span>motif_author <span class=\"token operator\">==</span> request<span class=\"token punctuation\">.</span>user</code></pre></div>\n<p>메서드를 보면 관리자와 <code class=\"language-text\">obj</code>의 <code class=\"language-text\">motif_author</code>가 요청을 보낸 사용자일 경우에만 권한을 <code class=\"language-text\">True</code>로 반환하도록 하였다. 위의 클래스를 뷰 클래스의 멤버변수로 지정해주거나, 사용하기를 원하는 요청메서드에만 따로 지정할 수도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># apis/motifs.py</span>\n\npermission_classes <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'IsAuthenticated'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'IsMotifOwnerOrReadOnly'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<br>\n<h3 id=\"put-메서드로-부분수정하기\" style=\"position:relative;\"><a href=\"#put-%EB%A9%94%EC%84%9C%EB%93%9C%EB%A1%9C-%EB%B6%80%EB%B6%84%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\"put 메서드로 부분수정하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PUT 메서드로 부분수정하기</h3>\n<p><code class=\"language-text\">PUT</code> 요청의 경우 REST 관례 상 replace를 시켜버리기 때문에 일부 데이터만 보내도 값 전체가 변경되어 버린다. 이러한 <code class=\"language-text\">PUT</code> 메서드로 부분수정이 가능하도록 구현해보았다.</p>\n<p><strong>put 메서드 로직</strong></p>\n<ul>\n<li>수정을 원하는 객체를 쿼리해서 변수에 선언한다.</li>\n<li>시리얼라이저에 쿼리한 객체를 넣고 사용자가 입력한 정보(<code class=\"language-text\">request.data</code>)로 변경한다.</li>\n<li>넣은 정보에 대해 입력값 검증(<code class=\"language-text\">validate()</code>)을 실시한다.</li>\n<li>통과한 경우 변경된 값으로 저장(<code class=\"language-text\">save()</code>)한다.</li>\n<li>변경된 객체를 정보조회용 시리얼라이저에 대입한다. (선택)</li>\n<li>해당 시리얼라이저의 <code class=\"language-text\">.data</code>를 출력한다.</li>\n</ul>\n<br>\n<p>모티프 주제를 수정할 경우 해당 모티프의 작성자 값과 연결된 작품 객체값은 변경되면 안된다. 이 경우에는 serializer 내에서 <code class=\"language-text\">update()</code> 메서드를 사용하여 변경되지 않는 값을 명시해준 후 저장하는 것으로 값이 변경되는 것을 방지할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># motif/serializers/motifs.py</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MotifUpdateSerializers</span><span class=\"token punctuation\">(</span>serializers<span class=\"token punctuation\">.</span>ModelSerializer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> instance<span class=\"token punctuation\">,</span> validated_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"\n        변경된 내용으로 저장\n        \"\"\"</span>\n        self<span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">.</span>name_motif <span class=\"token operator\">=</span> validated_data<span class=\"token punctuation\">[</span><span class=\"token string\">'name_motif'</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">.</span>name_art <span class=\"token operator\">=</span> validated_data<span class=\"token punctuation\">[</span><span class=\"token string\">'name_art'</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">.</span>motif_author <span class=\"token operator\">=</span> validated_data<span class=\"token punctuation\">[</span><span class=\"token string\">'motif_author'</span><span class=\"token punctuation\">]</span>\n        instance<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> instance</code></pre></div>\n<p><code class=\"language-text\">validate()</code>를 통과한 데이터를 가지고 <code class=\"language-text\">instance</code>의 값에 변경/변경되지 않은 값의 <code class=\"language-text\">value</code>를 정의해주는 것이다.  </p>\n<br>\n<hr>\n<h2 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며</h2>\n<p>모티프에 저장할 댓글을 제외하고 기본 API 제작을 완료하였다. 코멘트와 태그기능을 제작한 후에는 프론트 작업을 본격적으로 해볼 예정이다.</p>\n<br>","excerpt":"이번 포스트에서는 웹서비스의 기능에 해당하는 API들을 간략하게 소개해보려고 한다. 크게 3가지로 나뉘는데, 작품 목록 및 세부페이지 조회 API, 장르별 작품 목록 및 세부 페이지 API, 모티프 등록/수정/삭제 API 이다. API를 제작하면서 …","tableOfContents":"<ul>\n<li>\n<p><a href=\"/web_3.1-%EA%B8%B0%EB%8A%A5API%EC%A0%9C%EC%9E%91-%EC%9E%91%ED%92%88%EC%A1%B0%ED%9A%8C/#%EC%9E%A5%EB%A5%B4%EB%B3%84-%EC%9E%91%ED%92%88-%EB%AA%A9%EB%A1%9D-%EB%B0%8F-%EC%84%B8%EB%B6%80-%ED%8E%98%EC%9D%B4%EC%A7%80-api\">장르별 작품 목록 및 세부 페이지 API</a></p>\n<ul>\n<li><a href=\"/web_3.1-%EA%B8%B0%EB%8A%A5API%EC%A0%9C%EC%9E%91-%EC%9E%91%ED%92%88%EC%A1%B0%ED%9A%8C/#choice-%EC%9D%B4%EC%A4%91-%ED%8A%9C%ED%94%8C-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\">CHOICE 이중 튜플 사용하기</a></li>\n<li><a href=\"/web_3.1-%EA%B8%B0%EB%8A%A5API%EC%A0%9C%EC%9E%91-%EC%9E%91%ED%92%88%EC%A1%B0%ED%9A%8C/#%EC%B9%B4%ED%85%8C%EA%B3%A0%EB%A6%AC%EB%AA%85%EC%9C%BC%EB%A1%9C-%EC%9E%A5%EB%A5%B4%EB%B3%84-%EC%9E%91%ED%92%88%EB%AA%A9%EB%A1%9D-%ED%8E%98%EC%9D%B4%EC%A7%80--uri-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\">카테고리명으로 장르별 작품목록 페이지  URI 생성하기</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/web_3.1-%EA%B8%B0%EB%8A%A5API%EC%A0%9C%EC%9E%91-%EC%9E%91%ED%92%88%EC%A1%B0%ED%9A%8C/#%EB%AA%A8%ED%8B%B0%ED%94%84-%EB%93%B1%EB%A1%9D%EC%88%98%EC%A0%95%EC%82%AD%EC%A0%9C-api\">모티프 등록/수정/삭제 API</a></p>\n<ul>\n<li><a href=\"/web_3.1-%EA%B8%B0%EB%8A%A5API%EC%A0%9C%EC%9E%91-%EC%9E%91%ED%92%88%EC%A1%B0%ED%9A%8C/#%EA%B6%8C%ED%95%9C-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\">권한 설정하기</a></li>\n<li><a href=\"/web_3.1-%EA%B8%B0%EB%8A%A5API%EC%A0%9C%EC%9E%91-%EC%9E%91%ED%92%88%EC%A1%B0%ED%9A%8C/#put-%EB%A9%94%EC%84%9C%EB%93%9C%EB%A1%9C-%EB%B6%80%EB%B6%84%EC%88%98%EC%A0%95%ED%95%98%EA%B8%B0\">PUT 메서드로 부분수정하기</a></li>\n</ul>\n</li>\n<li><a href=\"/web_3.1-%EA%B8%B0%EB%8A%A5API%EC%A0%9C%EC%9E%91-%EC%9E%91%ED%92%88%EC%A1%B0%ED%9A%8C/#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며</a></li>\n</ul>","fields":{"slug":"/web_3.1-기능API제작-작품조회/"},"frontmatter":{"title":"Web _ 3.1 기능 API 구현하기","date":"Sep 29, 2017","tags":["Django","Project","Web development"],"keywords":["Development Note","Julia"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/web_3.1-기능API제작-작품조회/","series":[],"lastmod":"2017-09-29"}},"staticQueryHashes":["2027115977","694178885"]}