{"componentChunkName":"component---src-templates-post-tsx","path":"/git_02/","result":{"data":{"markdownRemark":{"html":"<p>협업에서 각자 작업을 하다가 협업자의 작업을 머지해야하는 상황이 생길 수 있다. 그런데 작업 중인 내용이 아직 커밋을 하기에는 어정쩡한 상태라면 어떻게 해야할까? 이럴 때 유용하게 사용되는 것이 바로 git의 <code class=\"language-text\">stash</code> 명령어다.</p>\n<br>\n<h2 id=\"1-git-stash\" style=\"position:relative;\"><a href=\"#1-git-stash\" aria-label=\"1 git stash permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. git stash</h2>\n<p>: 작업 중 다른 요청으로 잠시 브랜치를 변경해야 할 경우, 커밋하지 않고 이동했다가 나중에 다시 돌아와서 작업을 하고 싶을 때 사용하는 명령어.</p>\n<ul>\n<li>사용하면 워킹 디렉토리에서 수정한 파일들만 저장한다.</li>\n<li>즉, 파일을 커밋하고 수정중인 파일이거나 커밋 전의 파일들을 잠시 보관해둘 장소가 필요할 때 stash에 쌓아 두는 것.</li>\n</ul>\n<br>\n<h4 id=\"code-classlanguage-textstashcode란\" style=\"position:relative;\"><a href=\"#code-classlanguage-textstashcode%EB%9E%80\" aria-label=\"code classlanguage textstashcode란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">stash</code>란?</h4>\n<ul>\n<li>Modified 상태이면서 Tracked 상태인 파일과 Staging area에 있는 파일들을 보관해두는 장소를 일컫는다.</li>\n<li>Modified 상태의 파일은 커밋하지 않고 다른 브랜치로 이동하면 수정 내역이 사라진다.</li>\n</ul>\n<br>\n<h2 id=\"2-하던-일-stash하기\" style=\"position:relative;\"><a href=\"#2-%ED%95%98%EB%8D%98-%EC%9D%BC-stash%ED%95%98%EA%B8%B0\" aria-label=\"2 하던 일 stash하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 하던 일 stash하기</h2>\n<h3 id=\"1-예제-준비\" style=\"position:relative;\"><a href=\"#1-%EC%98%88%EC%A0%9C-%EC%A4%80%EB%B9%84\" aria-label=\"1 예제 준비 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(1) 예제 준비</h3>\n<ol>\n<li>[stash-practice] 파일을 생성하고 <code class=\"language-text\">git init</code> 해준다.</li>\n<li>이어 <code class=\"language-text\">git add .</code>, <code class=\"language-text\">git commit -m &quot;Initial commit&quot;</code>으로 커밋을 생성한다.</li>\n<li>해당 폴더 안에 stash1.txt 와 stash2.txt 파일을 각각 생성하고 내용입력 후</li>\n<li>파일 생성한 것에 대해 커밋을 해주고 두 파일 모두를 수정한다.</li>\n<li>수정 후 stash1.txt만 add하면 예제 준비 완료.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ git status\nChanges to be committed:\n  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)\n\n    modified:   index.html\n\nChanges not staged for commit:\n  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)\n  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)\n\n    modified:   lib/simplegit.rb</code></pre></div>\n<br>\n<h3 id=\"2-브랜치-변경\" style=\"position:relative;\"><a href=\"#2-%EB%B8%8C%EB%9E%9C%EC%B9%98-%EB%B3%80%EA%B2%BD\" aria-label=\"2 브랜치 변경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(2) 브랜치 변경</h3>\n<p>브랜치를 변경하기 전에 <code class=\"language-text\">git stash</code> 또는 <code class=\"language-text\">git stash save</code>를 치면 <strong>스택에 새로운 stash가 만들어지고</strong>, 수정중이었던 파일과 staging area에 있는 파일들이 이동한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">iterm2\nSaved working directory and index state WIP on master: 35a31d6 stash1.txt와 stash2.txt 파일 생성\nHEAD is now at 35a31d6 stash1.txt와 stash2.txt 파일 생성\n\n$ git status - 워킹 디렉토리가 깨끗해짐.\nOn branch master\nnothing to commit, working tree clean</code></pre></div>\n<p>로그를 확인해보면 지금까지 작업중인 수정파일들이 <code class=\"language-text\">stash</code>에서 참조되고 있다는 것을 확인할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ git log\n*   5e4291c (refs/stash) WIP on master: 35a31d6 stash1.txt와 stash2.txt 파일 생성\n|\\\n| * 818a10d index on master: 35a31d6 stash1.txt와 stash2.txt 파일 생성\n|/\n* 35a31d6 (HEAD -&gt; master) stash1.txt와 stash2.txt 파일 생성</code></pre></div>\n<br>\n<h3 id=\"3-stash-파일-확인---code-classlanguage-textgit-stash-listcode\" style=\"position:relative;\"><a href=\"#3-stash-%ED%8C%8C%EC%9D%BC-%ED%99%95%EC%9D%B8---code-classlanguage-textgit-stash-listcode\" aria-label=\"3 stash 파일 확인   code classlanguage textgit stash listcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(3) stash 파일 확인 - <code class=\"language-text\">git stash list</code></h3>\n<p>: stash된 파일(들)을 확인하는 명령어</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">stash@{0}: WIP on master: 35a31d6 stash1.txt와 stash2.txt 파일 생성</code></pre></div>\n<br>\n<h3 id=\"4-stash-다시-적용---code-classlanguage-textgit-stash-applycode\" style=\"position:relative;\"><a href=\"#4-stash-%EB%8B%A4%EC%8B%9C-%EC%A0%81%EC%9A%A9---code-classlanguage-textgit-stash-applycode\" aria-label=\"4 stash 다시 적용   code classlanguage textgit stash applycode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(4) stash 다시 적용 - <code class=\"language-text\">git stash apply</code></h3>\n<p>: stash로 넣어놨던 파일들을 다시 워킹디렉토리에 불러오는 명령어</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ git status\nOn branch master\nChanges not staged for commit:\n  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)\n  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)\n\n\tmodified:   stash1.txt\n\tmodified:   stash2.txt\n\nno changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)</code></pre></div>\n<p>해당 명령어 적용 후 <code class=\"language-text\">stash</code>를 참조하던 파일들이 다시 워킹디렉토리로 옮겨진 것을 확인할 수 있다.</p>\n<br>\n<h3 id=\"-code-classlanguage-textgit-stash-apply-stashncode\" style=\"position:relative;\"><a href=\"#-code-classlanguage-textgit-stash-apply-stashncode\" aria-label=\" code classlanguage textgit stash apply stashncode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>+ <code class=\"language-text\">git stash apply stash@{n}</code></h3>\n<p>: stash된 파일들의 목록에서 부여된 번호를 위 명령어의 n에 쓰면 그 번호의 stash만 워킹디렉토리로 불러오게 할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git stash apply stash@{0} -&gt; 역시 위와 같은 결과를 보여준다.</code></pre></div>\n<br>\n<h3 id=\"-code-classlanguage-textgit-stash-popcode\" style=\"position:relative;\"><a href=\"#-code-classlanguage-textgit-stash-popcode\" aria-label=\" code classlanguage textgit stash popcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>+ <code class=\"language-text\">git stash pop</code></h3>\n<p>: stash를 적용하고 나서 바로 스택에서 제거해준다.</p>\n<br>\n<h2 id=\"3-stash는-까다롭지-않다-단\" style=\"position:relative;\"><a href=\"#3-stash%EB%8A%94-%EA%B9%8C%EB%8B%A4%EB%A1%AD%EC%A7%80-%EC%95%8A%EB%8B%A4-%EB%8B%A8\" aria-label=\"3 stash는 까다롭지 않다 단 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. stash는 까다롭지 않다. 단...</h2>\n<p><code class=\"language-text\">git stash apply --index</code></p>\n<ul>\n<li>\n<p><strong><code class=\"language-text\">git stash</code>를 적용할 때 staged였던 파일을 다시 staged 상태로 불러오지 않는다.</strong></p>\n<ul>\n<li><code class=\"language-text\">git stash apply --index</code> 옵션을 줘서 staged 상태까지 적용한다. 그래야 원래 상태로 되돌아올 수 있다.</li>\n</ul>\n</li>\n<li>물론! 다른 브랜치로 이동해서 stash를 복원할 수도 있다.</li>\n<li>다시 <code class=\"language-text\">git stash apply</code>할 디렉토리가 깨끗할 필요도 없다.</li>\n<li>수정하고 커밋하지 않은 파일이 있어도 stash가 적용가능하다.</li>\n<li>충돌이 있다면 알려준다.</li>\n</ul>\n<br>\n<h3 id=\"stash-제거-1---code-classlanguage-textgit-stash-dropcode\" style=\"position:relative;\"><a href=\"#stash-%EC%A0%9C%EA%B1%B0-1---code-classlanguage-textgit-stash-dropcode\" aria-label=\"stash 제거 1   code classlanguage textgit stash dropcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>stash 제거 1 - <code class=\"language-text\">git stash drop</code></h3>\n<ul>\n<li>apply 는 단순히 stash를 적용해주는 명령어이므로 stash는 아직 스택에 남아있다.</li>\n<li><code class=\"language-text\">git stash drop</code>명령어로 해당 stash를 제거한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Dropped refs/stash@{0} (f1588c7b4eb171fe448da1fe0c0d9bb73156793a)</code></pre></div>\n<br>\n<h3 id=\"stash-제거-2---code-classlanguage-textgit-stash-popcode\" style=\"position:relative;\"><a href=\"#stash-%EC%A0%9C%EA%B1%B0-2---code-classlanguage-textgit-stash-popcode\" aria-label=\"stash 제거 2   code classlanguage textgit stash popcode permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>stash 제거 2 - <code class=\"language-text\">git stash pop</code></h3>\n<ul>\n<li>stash를 적용하고 나서 바로 스택에서 제거해준다.</li>\n<li>apply와 drop을 합친 것과 같다!</li>\n</ul>\n<br>\n<h2 id=\"4-stash를-만드는-새로운-방법\" style=\"position:relative;\"><a href=\"#4-stash%EB%A5%BC-%EB%A7%8C%EB%93%9C%EB%8A%94-%EC%83%88%EB%A1%9C%EC%9A%B4-%EB%B0%A9%EB%B2%95\" aria-label=\"4 stash를 만드는 새로운 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. stash를 만드는 새로운 방법</h2>\n<p>stash를 만드는 방법은 여러가지가 있다.</p>\n<h3 id=\"1-이미-staging-area에-들어있는-파일을-stash하지-않고-싶을-때\" style=\"position:relative;\"><a href=\"#1-%EC%9D%B4%EB%AF%B8-staging-area%EC%97%90-%EB%93%A4%EC%96%B4%EC%9E%88%EB%8A%94-%ED%8C%8C%EC%9D%BC%EC%9D%84-stash%ED%95%98%EC%A7%80-%EC%95%8A%EA%B3%A0-%EC%8B%B6%EC%9D%84-%EB%95%8C\" aria-label=\"1 이미 staging area에 들어있는 파일을 stash하지 않고 싶을 때 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(1) 이미 staging area에 들어있는 파일을 stash하지 않고 싶을 때</h3>\n<p><code class=\"language-text\">git stash save --keep-index</code></p>\n<p>: 수정한 파일들 중 몇몇 파일만 커밋하고 나머지는 나중에 처리하고 싶을 때 사용하는 명령어</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ git stash save --keep-index\nSaved working directory and index state WIP on master: 35a31d6 stash1.txt와 stash2.txt 파일 생성\nHEAD is now at 35a31d6 stash1.txt와 stash2.txt 파일 생성\n&lt;git status -s&gt;\nM  stash1.txt\n?? .gitignore</code></pre></div>\n<br>\n<h3 id=\"2-추적하지-않는-파일과-추적중인-파일을-같이-stash할-때\" style=\"position:relative;\"><a href=\"#2-%EC%B6%94%EC%A0%81%ED%95%98%EC%A7%80-%EC%95%8A%EB%8A%94-%ED%8C%8C%EC%9D%BC%EA%B3%BC-%EC%B6%94%EC%A0%81%EC%A4%91%EC%9D%B8-%ED%8C%8C%EC%9D%BC%EC%9D%84-%EA%B0%99%EC%9D%B4-stash%ED%95%A0-%EB%95%8C\" aria-label=\"2 추적하지 않는 파일과 추적중인 파일을 같이 stash할 때 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(2) 추적하지 않는 파일과 추적중인 파일을 같이 stash할 때</h3>\n<p><code class=\"language-text\">git stash --include-untracked</code> or <code class=\"language-text\">git stash -u</code></p>\n<ul>\n<li>기본적으로 stash는 추적 중인 파일(<code class=\"language-text\">tracked files</code>)만 저장한다.</li>\n<li>추적중이지 않은 파일은 stash명령어를 사용할 때 <code class=\"language-text\">--include-untracked</code> or <code class=\"language-text\">-u</code>를 붙여서 사용한다.</li>\n</ul>\n<br>\n<h3 id=\"3-저장할-것과-저장하지-않을-것을-고르고-싶을-때\" style=\"position:relative;\"><a href=\"#3-%EC%A0%80%EC%9E%A5%ED%95%A0-%EA%B2%83%EA%B3%BC-%EC%A0%80%EC%9E%A5%ED%95%98%EC%A7%80-%EC%95%8A%EC%9D%84-%EA%B2%83%EC%9D%84-%EA%B3%A0%EB%A5%B4%EA%B3%A0-%EC%8B%B6%EC%9D%84-%EB%95%8C\" aria-label=\"3 저장할 것과 저장하지 않을 것을 고르고 싶을 때 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(3) 저장할 것과 저장하지 않을 것을 고르고 싶을 때</h3>\n<p><code class=\"language-text\">git stash --patch</code></p>\n<ul>\n<li><code class=\"language-text\">--patch</code> 옵션을 붙이면 모든 사항을 저장하지 않고 <strong>변경 데이터 중 저장할 것을 지정</strong>할 수 있게 해준다.</li>\n<li>e : 내용을 edit할 수 있다.</li>\n</ul>\n<br>\n<h2 id=\"5-stash를-이용한-브랜치-만들기\" style=\"position:relative;\"><a href=\"#5-stash%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EB%B8%8C%EB%9E%9C%EC%B9%98-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"5 stash를 이용한 브랜치 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. stash를 이용한 브랜치 만들기</h2>\n<p>stash를 저장하고 그 브랜치에서 한동안 새로운 작업을 하다가 다시 stash를 불러오면 충돌이 일어날 수도 있다. 이럴 때 stash를 쉽게 다시 테스트하는 명령어 <code class=\"language-text\">git stash branch</code>를 사용한다.</p>\n<ul>\n<li>stash할 당시의 커밋을 checkout한 후 새로운 브랜치를 만들고 여기에 적용. 그 이후에는 stash를 삭제해버린다.</li>\n</ul>\n<br>","excerpt":"협업에서 각자 작업을 하다가 협업자의 작업을 머지해야하는 상황이 생길 수 있다. 그런데 작업 중인 내용이 아직 커밋을 하기에는 어정쩡한 상태라면 어떻게 해야할까? 이럴 때 유용하게 사용되는 것이 바로 git의  명령어다. 1. git stash : …","tableOfContents":"<ul>\n<li><a href=\"/git_02/#1-git-stash\">1. git stash</a></li>\n<li>\n<p><a href=\"/git_02/#2-%ED%95%98%EB%8D%98-%EC%9D%BC-stash%ED%95%98%EA%B8%B0\">2. 하던 일 stash하기</a></p>\n<ul>\n<li><a href=\"/git_02/#1-%EC%98%88%EC%A0%9C-%EC%A4%80%EB%B9%84\">(1) 예제 준비</a></li>\n<li><a href=\"/git_02/#2-%EB%B8%8C%EB%9E%9C%EC%B9%98-%EB%B3%80%EA%B2%BD\">(2) 브랜치 변경</a></li>\n<li><a href=\"/git_02/#3-stash-%ED%8C%8C%EC%9D%BC-%ED%99%95%EC%9D%B8---code-classlanguage-textgit-stash-listcode\">(3) stash 파일 확인 - <code class=\"language-text\">git stash list</code></a></li>\n<li><a href=\"/git_02/#4-stash-%EB%8B%A4%EC%8B%9C-%EC%A0%81%EC%9A%A9---code-classlanguage-textgit-stash-applycode\">(4) stash 다시 적용 - <code class=\"language-text\">git stash apply</code></a></li>\n<li><a href=\"/git_02/#-code-classlanguage-textgit-stash-apply-stashncode\">+ <code class=\"language-text\">git stash apply stash@{n}</code></a></li>\n<li><a href=\"/git_02/#-code-classlanguage-textgit-stash-popcode\">+ <code class=\"language-text\">git stash pop</code></a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/git_02/#3-stash%EB%8A%94-%EA%B9%8C%EB%8B%A4%EB%A1%AD%EC%A7%80-%EC%95%8A%EB%8B%A4-%EB%8B%A8\">3. stash는 까다롭지 않다. 단...</a></p>\n<ul>\n<li><a href=\"/git_02/#stash-%EC%A0%9C%EA%B1%B0-1---code-classlanguage-textgit-stash-dropcode\">stash 제거 1 - <code class=\"language-text\">git stash drop</code></a></li>\n<li><a href=\"/git_02/#stash-%EC%A0%9C%EA%B1%B0-2---code-classlanguage-textgit-stash-popcode\">stash 제거 2 - <code class=\"language-text\">git stash pop</code></a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/git_02/#4-stash%EB%A5%BC-%EB%A7%8C%EB%93%9C%EB%8A%94-%EC%83%88%EB%A1%9C%EC%9A%B4-%EB%B0%A9%EB%B2%95\">4. stash를 만드는 새로운 방법</a></p>\n<ul>\n<li><a href=\"/git_02/#1-%EC%9D%B4%EB%AF%B8-staging-area%EC%97%90-%EB%93%A4%EC%96%B4%EC%9E%88%EB%8A%94-%ED%8C%8C%EC%9D%BC%EC%9D%84-stash%ED%95%98%EC%A7%80-%EC%95%8A%EA%B3%A0-%EC%8B%B6%EC%9D%84-%EB%95%8C\">(1) 이미 staging area에 들어있는 파일을 stash하지 않고 싶을 때</a></li>\n<li><a href=\"/git_02/#2-%EC%B6%94%EC%A0%81%ED%95%98%EC%A7%80-%EC%95%8A%EB%8A%94-%ED%8C%8C%EC%9D%BC%EA%B3%BC-%EC%B6%94%EC%A0%81%EC%A4%91%EC%9D%B8-%ED%8C%8C%EC%9D%BC%EC%9D%84-%EA%B0%99%EC%9D%B4-stash%ED%95%A0-%EB%95%8C\">(2) 추적하지 않는 파일과 추적중인 파일을 같이 stash할 때</a></li>\n<li><a href=\"/git_02/#3-%EC%A0%80%EC%9E%A5%ED%95%A0-%EA%B2%83%EA%B3%BC-%EC%A0%80%EC%9E%A5%ED%95%98%EC%A7%80-%EC%95%8A%EC%9D%84-%EA%B2%83%EC%9D%84-%EA%B3%A0%EB%A5%B4%EA%B3%A0-%EC%8B%B6%EC%9D%84-%EB%95%8C\">(3) 저장할 것과 저장하지 않을 것을 고르고 싶을 때</a></li>\n</ul>\n</li>\n<li><a href=\"/git_02/#5-stash%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EB%B8%8C%EB%9E%9C%EC%B9%98-%EB%A7%8C%EB%93%A4%EA%B8%B0\">5. stash를 이용한 브랜치 만들기</a></li>\n</ul>","fields":{"slug":"/git_02/"},"frontmatter":{"title":"Git _ 협업을 위한 stash 명령어 사용하기","date":"Jun 15, 2016","tags":["Git"],"keywords":["Development Note","Julia"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/git_02/","series":[{"slug":"/git_01/","title":"Git _ 파일 삭제를 위한 clean 명령어 사용하기","num":1},{"slug":"/git_02/","title":"Git _ 협업을 위한 stash 명령어 사용하기","num":2},{"slug":"/git_03/","title":"Git _ 버전관리 상태 수정하기","num":3},{"slug":"/git_04/","title":"Git _ 제외시킬 파일 관리하기","num":4},{"slug":"/git_05/","title":"Git _ 원격저장소 연결하기","num":5},{"slug":"/git_06/","title":"Git _ 태그 관리하기","num":6},{"slug":"/git_07/","title":"Git _ 도구 검색","num":7},{"slug":"/git_08/","title":"Git _ 히스토리 단장하기","num":8},{"slug":"/git_09/","title":"Git _ Reset 명확히 알고 가기","num":9}],"lastmod":"2016-06-15"}},"staticQueryHashes":["2027115977","694178885"]}