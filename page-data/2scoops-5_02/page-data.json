{"componentChunkName":"component---src-templates-post-tsx","path":"/2scoops-5_02/","result":{"data":{"markdownRemark":{"html":"<p>여러 개의 세팅파일을 적용할 경우 각 세팅파일에 해당하는 <code class=\"language-text\">requirements</code> 파일도 따로 관리해주어야 한다. 이는 서버마다 그 환경에 필요한 컴포넌트 및 패키지만 설치하자는 뜻이다. 이번 포스트에서는 패키지의 버전 관리를 도와주는 <code class=\"language-text\">requiremnets</code> 파일에 대해 알아볼 것이다. 또, 설정에서 템플릿 및 미디어 파일에 대한 경로를 설정하는 방법에 대해서도 알아보자.</p>\n<br>\n<h2 id=\"여러-개의-requirements-파일-이용하기\" style=\"position:relative;\"><a href=\"#%EC%97%AC%EB%9F%AC-%EA%B0%9C%EC%9D%98-requirements-%ED%8C%8C%EC%9D%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"여러 개의 requirements 파일 이용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>여러 개의 requirements 파일 이용하기</h2>\n<p>저장소 루트 아래 requirements/ 폴더를 생성하여 세팅폴더 내 파일들과 동일한 이름의 텍스트 파일을 생성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">requirements<span class=\"token operator\">/</span>\n  base<span class=\"token punctuation\">.</span>txt\n  local<span class=\"token punctuation\">.</span>txt\n  staging<span class=\"token punctuation\">.</span>txt\n  production<span class=\"token punctuation\">.</span>txt</code></pre></div>\n<br>\n<p><code class=\"language-text\">base.txt</code>에는 모든 설정 환경에 걸쳐 공통적으로 설치할 의존성을 넣어준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"txt\"><pre class=\"language-txt\"><code class=\"language-txt\">Django==1.8.0\npsycopg2==2.6\ndjangorestframework==3.1.1</code></pre></div>\n<br>\n<p><code class=\"language-text\">base.txt</code>를 사용하면서 로컬환경에서만 사용하는 <code class=\"language-text\">local.txt</code>는 다음과 같이 작성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"txt\"><pre class=\"language-txt\"><code class=\"language-txt\">-r base.txt\ncoverage==3.7.1\ndjango-debug-toolbar==1.3.0</code></pre></div>\n<p><code class=\"language-text\">-r base.txt</code>는 <code class=\"language-text\">base.txt</code>의 의존성을 포함한다는 명령어이다.</p>\n<br>\n<h3 id=\"설치\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%B9%98\" aria-label=\"설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설치</h3>\n<p>각 환경에 따라 다음과 같이 파이썬 패키지 관리자 명령어 (<code class=\"language-text\">pip</code>)를 사용하여 설치할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">$ pip install <span class=\"token operator\">-</span>r requirements<span class=\"token operator\">/</span>local<span class=\"token punctuation\">.</span>txt\n$ pip install <span class=\"token operator\">-</span>r requirements<span class=\"token operator\">/</span>production<span class=\"token punctuation\">.</span>txt</code></pre></div>\n<br>\n<h2 id=\"settings와-파일-경로\" style=\"position:relative;\"><a href=\"#settings%EC%99%80-%ED%8C%8C%EC%9D%BC-%EA%B2%BD%EB%A1%9C\" aria-label=\"settings와 파일 경로 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>settings와 파일 경로</h2>\n<p>여러 개의 settings 파일이 있는 경우 프로젝트 내부의 템플릿과 미디어 파일을 찾을 수 있도록 경로를 설정할 때 주의할 점은 <strong>하드 코딩하지 말라</strong>는 것이다.</p>\n<p>1부에서 잠깐 언급하였지만, 장고의 기본 설정파일에는 상대 경로를 설정할 수 있도록 프로젝트의 <code class=\"language-text\">BASE_DIR</code> 설정을 제공하고 있다.</p>\n<p><code class=\"language-text\">BASE_DIR</code>은 <code class=\"language-text\">base.py</code>의 위치에 따라 결정되기 때문에 어떤 설정이라도 상대적 위치만 정해놓으면 프로젝트를 구동할 수 있게 해준다.</p>\n<p>1부에서 사용한 방식으로 <code class=\"language-text\">os</code> 모듈의 <code class=\"language-text\">join</code> 메서드를 사용해도 되고, 도서에서는 <code class=\"language-text\">Unipath</code>라는 파이썬의 경로 정의 패키지를 소개하고 있다.</p>\n<h3 id=\"1-ospath-라이브러리-사용\" style=\"position:relative;\"><a href=\"#1-ospath-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%82%AC%EC%9A%A9\" aria-label=\"1 ospath 라이브러리 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(1) os.path 라이브러리 사용</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># settings/base.py</span>\n\n<span class=\"token comment\"># 상대 임포트를 위해 지정해준 BASE_DIR 경로</span>\nBASE_DIR <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>abspath<span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 저장소루트 경로</span>\nROOT_DIR <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>BASE_DIR<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 비밀값들이 저장된 폴더 경로</span>\nSECRET_DIR <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>ROOT_DIR<span class=\"token punctuation\">,</span> <span class=\"token string\">'.secret'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 시크릿 JSON 파일의 위치</span>\nSECRET_FILE <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>SECRET_DIR<span class=\"token punctuation\">,</span> <span class=\"token string\">'secret.json'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 시크릿 파일 내부를 읽어와 그 값을 저장 (실사용 방식)</span>\nsecrets <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>SECRET_FILE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br>\n<h3 id=\"2-unipath-패키지-사용\" style=\"position:relative;\"><a href=\"#2-unipath-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%82%AC%EC%9A%A9\" aria-label=\"2 unipath 패키지 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(2) Unipath 패키지 사용</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># settings/base.py</span>\n\n<span class=\"token keyword\">from</span> unipath <span class=\"token keyword\">import</span> Path\n\nBASE_DIR <span class=\"token operator\">=</span> Path<span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ancestor<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\nMEDIA_ROOT <span class=\"token operator\">=</span> BASE_DIR<span class=\"token punctuation\">.</span>child<span class=\"token punctuation\">(</span><span class=\"token string\">\"media\"</span><span class=\"token punctuation\">)</span>\nSTATIC_ROOT <span class=\"token operator\">=</span> BASE_DIR<span class=\"token punctuation\">.</span>child<span class=\"token punctuation\">(</span><span class=\"token string\">\"static\"</span><span class=\"token punctuation\">)</span>\nSTATICFILES_DIRS <span class=\"token operator\">=</span> BASE_DIR<span class=\"token punctuation\">.</span>child<span class=\"token punctuation\">(</span><span class=\"token string\">\"assets\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br>\n<hr>\n<h2 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며</h2>\n<p>이상으로 여러 개의 세팅을 사용할 때 그에 따른 의존성을 <code class=\"language-text\">requirements</code>로 관리하는 방법에 대해 정리해보았다. 또, 부가적인 템플릿 및 미디어파일 또한 경로설정을 통해 상대적으로 지정해줄 수 있다는 것을 배웠다.</p>\n<p>무엇보다도, <strong>보안에 관계된 값을 제외한 모든 설정은 버전 컨트롤로 관리하는 것이 좋다.</strong> 패키지 관리도 마찬가지다. 특히 오픈소스가 강조되는 요즘 시대에서 패키지 버전관리는 버전 컨트롤에 필수적으로 포함시키는 것이 좋다.</p>\n<p>추가로, 커스텀 설정을 적용할 경우 어떤 부분이 달라졌는지(<del>마치 git diff처럼</del>) 알고싶다면 콘솔에서 해당 파일에 대해 <code class=\"language-text\">diffsettings</code> 명령어를 실행해볼 수 있다.</p>\n<br>","excerpt":"여러 개의 세팅파일을 적용할 경우 각 세팅파일에 해당하는  파일도 따로 관리해주어야 한다. 이는 서버마다 그 환경에 필요한 컴포넌트 및 패키지만 설치하자는 뜻이다. 이번 포스트에서는 패키지의 버전 관리를 도와주는  파일에 대해 알아볼 것이다. 또, …","tableOfContents":"<ul>\n<li>\n<p><a href=\"/2scoops-5_02/#%EC%97%AC%EB%9F%AC-%EA%B0%9C%EC%9D%98-requirements-%ED%8C%8C%EC%9D%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EA%B8%B0\">여러 개의 requirements 파일 이용하기</a></p>\n<ul>\n<li><a href=\"/2scoops-5_02/#%EC%84%A4%EC%B9%98\">설치</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2scoops-5_02/#settings%EC%99%80-%ED%8C%8C%EC%9D%BC-%EA%B2%BD%EB%A1%9C\">settings와 파일 경로</a></p>\n<ul>\n<li><a href=\"/2scoops-5_02/#1-ospath-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%82%AC%EC%9A%A9\">(1) os.path 라이브러리 사용</a></li>\n<li><a href=\"/2scoops-5_02/#2-unipath-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%82%AC%EC%9A%A9\">(2) Unipath 패키지 사용</a></li>\n</ul>\n</li>\n<li><a href=\"/2scoops-5_02/#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며</a></li>\n</ul>","fields":{"slug":"/2scoops-5_02/"},"frontmatter":{"title":"BookReview > Two Scoops of Django _ 5장. settings와 requirements 파일 <2부>","date":"Sep 29, 2017","tags":["book review","Django"],"keywords":["Development Note","Julia"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/2scoops-5_02/","series":[{"slug":"/2scoops-5_01/","title":"BookReview > Two Scoops of Django _ 5장. settings와 requirements 파일 <1부>","num":1},{"slug":"/2scoops-5_02/","title":"BookReview > Two Scoops of Django _ 5장. settings와 requirements 파일 <2부>","num":2}],"lastmod":"2017-09-29"}},"staticQueryHashes":["2027115977","694178885"]}