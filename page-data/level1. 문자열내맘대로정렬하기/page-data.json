{"componentChunkName":"component---src-templates-post-tsx","path":"/level1. 문자열내맘대로정렬하기/","result":{"data":{"markdownRemark":{"html":"<h3 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h3>\n<blockquote>\n<p>strange_sort함수는 strings와 n이라는 매개변수를 받아들입니다.\nstrings는 문자열로 구성된 리스트인데, 각 문자열을 인덱스 n인 글자를 기준으로 정렬하면 됩니다.</p>\n</blockquote>\n<blockquote>\n<p>예를들어 strings가 [\"sun\", \"bed\", \"car\"]이고 n이 1이면 각 단어의 인덱스 1인 문자 u, e ,a를 기준으로 정렬해야 하므로 결과는 [\"car\", \"bed\", \"sun\"]이 됩니다.\nstrange_sort함수를 완성해 보세요.</p>\n</blockquote>\n<h3 id=\"내-코드\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%EC%BD%94%EB%93%9C\" aria-label=\"내 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>내 코드</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">strange_sort</span><span class=\"token punctuation\">(</span>strings<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">'''strings의 문자열들을 n번째 글자를 기준으로 정렬해서 return하세요'''</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>strings<span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> strings<span class=\"token punctuation\">:</span>strings<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># 아래는 테스트로 출력해 보기 위한 코드입니다.</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span> strange_sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"sun\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bed\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"car\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<br>\n<h3 id=\"타인의-코드\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9D%B8%EC%9D%98-%EC%BD%94%EB%93%9C\" aria-label=\"타인의 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타인의 코드</h3>\n<p>x의 n번째 문자열을 키값으로, x문자열 자체를 value값으로 가지는 dictionary를 선언하고 x의 n번째 문자열만 가지는 list를 각각 선언한 뒤, list를 정렬한다.</p>\n<p>선언한 딕셔너리에서 x의 value값을 가져와서 리턴하면 순서대로 정렬된 리스트가 반환된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">strange_sort</span><span class=\"token punctuation\">(</span>strings<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">'''strings의 문자열들을 n번째 글자를 기준으로 정렬해서 return하세요'''</span>\n    dict1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>x <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> strings<span class=\"token punctuation\">}</span>\n    list1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> strings<span class=\"token punctuation\">]</span>\n    list1<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>dict1<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> list1<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 아래는 테스트로 출력해 보기 위한 코드입니다.</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span> strange_sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"sun\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bed\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"car\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<p>itemgetter 함수를 사용하여 key값을 n을 기준으로 value 찾음</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> _operator <span class=\"token keyword\">import</span> itemgetter\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">strange_sort</span><span class=\"token punctuation\">(</span>strings<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">'''strings의 문자열들을 n번째 글자를 기준으로 정렬해서 return하세요'''</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>strings<span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span>itemgetter<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># 아래는 테스트로 출력해 보기 위한 코드입니다.</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span> strange_sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"sun\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bed\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"car\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<br>\n<p>n번째 문자를 기준으로 정렬해야하므로 n번째 문자를 원래 단어에 붙여서 정렬한 뒤 1번째부터 슬라이스한 값만 반환하였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">strange_sort</span><span class=\"token punctuation\">(</span>strings<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> strings<span class=\"token punctuation\">]</span>\n    a<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 아래는 테스트로 출력해 보기 위한 코드입니다.</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span> strange_sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"sun\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bed\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"car\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>","excerpt":"문제 설명 strange_sort함수는 strings와 n이라는 매개변수를 받아들입니다.\nstrings는 문자열로 구성된 리스트인데, 각 문자열을 인덱스 n인 글자를 기준으로 정렬하면 됩니다. 예를들어 strings가 \"sun\", \"bed\", \"ca…","tableOfContents":"<ul>\n<li><a href=\"/level1.%20%EB%AC%B8%EC%9E%90%EC%97%B4%EB%82%B4%EB%A7%98%EB%8C%80%EB%A1%9C%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0/#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\">문제 설명</a></li>\n<li><a href=\"/level1.%20%EB%AC%B8%EC%9E%90%EC%97%B4%EB%82%B4%EB%A7%98%EB%8C%80%EB%A1%9C%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0/#%EB%82%B4-%EC%BD%94%EB%93%9C\">내 코드</a></li>\n<li><a href=\"/level1.%20%EB%AC%B8%EC%9E%90%EC%97%B4%EB%82%B4%EB%A7%98%EB%8C%80%EB%A1%9C%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0/#%ED%83%80%EC%9D%B8%EC%9D%98-%EC%BD%94%EB%93%9C\">타인의 코드</a></li>\n</ul>","fields":{"slug":"/level1. 문자열내맘대로정렬하기/"},"frontmatter":{"title":"Python _ Lv1. 문자열 내맘대로 정렬하기","date":"Jun 12, 2017","tags":["algorithm","python"],"keywords":["Development Note","Julia"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/level1. 문자열내맘대로정렬하기/","series":[],"lastmod":"2017-06-12"}},"staticQueryHashes":["2027115977","694178885"]}