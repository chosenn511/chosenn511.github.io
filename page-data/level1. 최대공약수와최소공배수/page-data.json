{"componentChunkName":"component---src-templates-post-tsx","path":"/level1. 최대공약수와최소공배수/","result":{"data":{"markdownRemark":{"html":"<h3 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h3>\n<blockquote>\n<p>두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환해주는 gcdlcm 함수를 완성해 보세요. 배열의 맨 앞에 최대공약수, 그 다음 최소공배수를 넣어 반환하면 됩니다. 예를 들어 gcdlcm(3,12) 가 입력되면, [3, 12]를 반환해주면 됩니다.</p>\n</blockquote>\n<p><a href=\"https://programmers.co.kr/learn/challenge_codes/11\" target=\"_blank\">문제 보러가기</a></p>\n<br>\n<h3 id=\"코드-및-풀이\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C-%EB%B0%8F-%ED%92%80%EC%9D%B4\" aria-label=\"코드 및 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드 및 풀이</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">gcdlcm</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    max_num <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span>\n    min_num <span class=\"token operator\">=</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> min_num <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        max_num<span class=\"token punctuation\">,</span> min_num <span class=\"token operator\">=</span> min_num<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>max_num <span class=\"token operator\">%</span> min_num<span class=\"token punctuation\">)</span>\n    gcd_result <span class=\"token operator\">=</span> max_num\n    lcm_result <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> max_num\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>gcd_result<span class=\"token punctuation\">,</span> lcm_result<span class=\"token punctuation\">]</span></code></pre></div>\n<p><code class=\"language-text\">최대공약수</code>(Greatest Common Divisor, GCD)는 주어진 수들의 공통적인 약수 중 가장 큰 값이다. 즉, 3과 12가 있을 때 두 수의 최대공약수는 3이다.</p>\n<p><code class=\"language-text\">유클리드 호제법</code>을 사용하여 풀었는데, 유클리드 호제법이란 2개의 자연수 또는 정식의 최대공약수를 구하는 알고리즘의 하나이다. <code class=\"language-text\">호제법</code>이란 <strong>두 수가 서로 상대방의 수를 나누어 결국 원하는 수를 얻는 알고리즘을 뜻한다.</strong>(<a href=\"https://ko.wikipedia.org/wiki/%EC%9C%A0%ED%81%B4%EB%A6%AC%EB%93%9C_%ED%98%B8%EC%A0%9C%EB%B2%95\" target=\"_blank\">더 알아보기</a>)</p>\n<p>위의 알고리즘을 이용하면 일단 나누어질 수가 나눌 수보다 커야하므로 두 수의 대소비교를 통하여 각각 <code class=\"language-text\">max_num</code>, <code class=\"language-text\">min_num</code>이라 정의하였다.</p>\n<p>그리고 나누어보면 다음과 같은 규칙이 보인다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">(max_num, min_num)   # 주어진 값\n(min_num, max_num % min_num)   # 몫을 다시 나머지로 나눈다   \n(max_num % min_num, min_num // (max_num % min_num))\n\n...\n\na, b = b, a % b   # 일반화</code></pre></div>\n<p>위의 규칙을 가지고 <strong>나머지가 0이 될 때까지</strong> 계산을 반복하여 나왔을 때 나누어지는 값(=이전 식에서의 나누는 값)이 최대공약수이다.</p>\n<p><code class=\"language-text\">최소공배수</code>(Least Common Multiple)는 주어진 두 수 모두의 배수를 만족하는 가장 작은 수이다. 최소공배수는 두 수의 곱을 최대공약수로 나눈 값이므로 최대공약수를 먼저 구한 뒤 초기값의 곱을 구해 나누어주면 된다.</p>\n<br>\n<p><strong>+추가</strong></p>\n<p>위 최대공약수를 구할 때 사용한 코드는 <code class=\"language-text\">메모이제이션</code> 개념을 활용한 것이다.</p>\n<br>\n<h3 id=\"메모이제이션-memoization\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EB%AA%A8%EC%9D%B4%EC%A0%9C%EC%9D%B4%EC%85%98-memoization\" aria-label=\"메모이제이션 memoization permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메모이제이션, Memoization</h3>\n<p>컴퓨터 프로그램이 <strong>동일한 계산을 반복할 때 이전에 계산한 값을 메모리에 저장함으로써 동일한 계산의 반복 수행을 제거하여 프로그램 실행 속도를 빠르게 하는 기술</strong>이다.</p>\n<p>단어를 봐도 <code class=\"language-text\">메모하다</code>의 의미를 가지고 있는 <code class=\"language-text\">memo</code>의 의미가 있으며, 메모이제이션의 의미는 <code class=\"language-text\">메모리에 넣다</code>라는 의미를 가지고 있다.</p>\n<p>메모이제이션 기술은 주로 검색, HTML소스 코드 생성, 암호화, 데이터압축 및 변환과 같은 반복적인 작업에 사용된다.</p>\n<br>","excerpt":"문제 설명 두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환해주는 gcdlcm 함수를 완성해 보세요. 배열의 맨 앞에 최대공약수, 그 다음 최소공배수를 넣어 반환하면 됩니다. 예를 들어 gcdlcm(3,12) 가 입력되면, 3, 12를 반환해…","tableOfContents":"<ul>\n<li><a href=\"/level1.%20%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98/#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\">문제 설명</a></li>\n<li><a href=\"/level1.%20%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98/#%EC%BD%94%EB%93%9C-%EB%B0%8F-%ED%92%80%EC%9D%B4\">코드 및 풀이</a></li>\n<li><a href=\"/level1.%20%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EC%99%80%EC%B5%9C%EC%86%8C%EA%B3%B5%EB%B0%B0%EC%88%98/#%EB%A9%94%EB%AA%A8%EC%9D%B4%EC%A0%9C%EC%9D%B4%EC%85%98-memoization\">메모이제이션, Memoization</a></li>\n</ul>","fields":{"slug":"/level1. 최대공약수와최소공배수/"},"frontmatter":{"title":"Python _ Lv1. 최대공약수와 최소공배수","date":"Sep 11, 2017","tags":["algorithm","python"],"keywords":["Development Note","Julia"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/level1. 최대공약수와최소공배수/","series":[],"lastmod":"2017-09-11"}},"staticQueryHashes":["2027115977","694178885"]}