{"componentChunkName":"component---src-templates-post-tsx","path":"/level2. 자연수뒤집어리스트만들기/","result":{"data":{"markdownRemark":{"html":"<h3 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h3>\n<blockquote>\n<p>digit_reverse함수는 양의 정수 n을 매개변수로 입력받습니다.\nn을 뒤집어 숫자 하나하나를 list로 표현해주세요\n예를 들어 n이 12345이면 [5,4,3,2,1]을 리턴하면 됩니다.</p>\n</blockquote>\n<p><a href=\"https://programmers.co.kr/learn/challenge_codes/117\" target=\"_blank\">문제 보러가기</a></p>\n<br>\n<h2 id=\"코드-및-풀이\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C-%EB%B0%8F-%ED%92%80%EC%9D%B4\" aria-label=\"코드 및 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드 및 풀이</h2>\n<p>숫자를 뒤집는 방법은 파이썬의 리스트 인덱싱과 슬라이싱을 활용하면 편리하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">digit_reverse</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    sn <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n    ln <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n    li <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>ln<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        li<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sn<span class=\"token punctuation\">[</span>ln <span class=\"token operator\">-</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> li\n\n<span class=\"token comment\"># 아래는 테스트로 출력해 보기 위한 코드입니다.</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"결과 : {}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>digit_reverse<span class=\"token punctuation\">(</span><span class=\"token number\">12345</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위의 코드에서 for문만 들여다보면 다음과 같은 방식으로 동작한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">sn <span class=\"token operator\">=</span> <span class=\"token string\">\"12345\"</span>\n<span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sn<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sn<span class=\"token punctuation\">[</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sn<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># sn[5 - 0 - 1] = sn[4] = 5</span>\n<span class=\"token comment\"># sn[5 - 1 - 1] = sn[3] = 4</span>\n<span class=\"token comment\"># sn[5 - 2 - 1] = sn[2] = 3</span>\n<span class=\"token comment\"># sn[5 - 3 - 1] = sn[1] = 2</span>\n<span class=\"token comment\"># sn[5 - 4 - 1] = sn[0] = 1</span>\n<span class=\"token comment\"># end=\"\" 는 출력물을 띄어쓰기 없이 붙여준다.</span></code></pre></div>\n<br>\n<p>두 번째로 직접 푼 코드는 <strong>재귀를 이용한 방식</strong>이다.</p>\n<p>처음 코드를 짤 때는 숫자를 그대로 받아서 문자형으로 처리했기 때문에 나와야 할 결과 형태(리스트형)를 충족시키지 못했다.</p>\n<p>하지만 아래 코드에서 보듯이 외부함수 스코프에서 입력받은 n을 미리 숫자형 값으로 구성한 리스트로 바꾼 후 재귀를 적용하니 후처리를 하지 않아도 되었다!</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">digit_reverse</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 입력받은 n 값을 반복문으로 나눠서 숫자형으로 리스트에 넣는다.</span>\n    ln <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">digit_recursive</span><span class=\"token punctuation\">(</span>ln<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 종료조건 - 값이 없을 때는 ln을 반환하여 재귀를 종료시킨다.</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ln<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> ln\n\n        <span class=\"token comment\"># 마지막 인덱스값을 앞으로 더하면서 재귀를 진행한다.</span>\n        r <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>ln<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> digit_recursive<span class=\"token punctuation\">(</span>ln<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 재귀값을 반환한다.</span>\n        <span class=\"token keyword\">return</span> r\n    <span class=\"token comment\"># 내부 재귀함수를 실행한 값을 반환한다.</span>\n    <span class=\"token keyword\">return</span> digit_recursive<span class=\"token punctuation\">(</span>ln<span class=\"token punctuation\">)</span>\n\n\ndigit_reverse<span class=\"token punctuation\">(</span><span class=\"token number\">12345</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [5, 4, 3, 2, 1]</span></code></pre></div>\n<br>\n<h2 id=\"다른-방식의-코드-및-풀이\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EB%A5%B8-%EB%B0%A9%EC%8B%9D%EC%9D%98-%EC%BD%94%EB%93%9C-%EB%B0%8F-%ED%92%80%EC%9D%B4\" aria-label=\"다른 방식의 코드 및 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다른 방식의 코드 및 풀이</h2>\n<p>다른 사람의 코드를 참고하면 다음과 같다. <code class=\"language-text\">map()</code>함수를 사용하면 다음과 같이 한 줄로도 구현 가능하다. <code class=\"language-text\">map()</code> 함수는 제너레이터를 생성하기 때문에 <code class=\"language-text\">next()</code>로 값을 출력해볼 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token string\">\"12345\"</span>\n<span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">reversed</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># '5'</span>\n<span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">reversed</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 5</span></code></pre></div>\n<p>위의 식을 <code class=\"language-text\">list()</code>로 감싸주면 n 자리의 순서가 반대 순서대로 리스트에 삽입 및 출력된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 타인의 코드 - map(), reversed() 사용</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">digit_reverse_2</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">reversed</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"결과 : {}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>digit_reverse_2<span class=\"token punctuation\">(</span><span class=\"token number\">12345</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 결과 : [5, 4, 3, 2, 1]</span></code></pre></div>\n<br>\n<p>3번째 방식은 리스트 인덱싱을 활용한 방법이다. 먼저 n의 값을 숫자 자료형으로 바꾸어 리스트에 저장한 후 인덱싱 (<code class=\"language-text\">[::-1]</code>)을 통해 반대 방향으로 출력하였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">digit_reverse_3</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"결과 : {}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>digit_reverse_2<span class=\"token punctuation\">(</span><span class=\"token number\">12345</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 결과 : [5, 4, 3, 2, 1]</span></code></pre></div>\n<br>\n<p>4번째 방식은 2번째 방식과 비슷하지만 이번에는 <code class=\"language-text\">reverse()</code>를  사용했다. <code class=\"language-text\">reverse()</code>는 리스트 요소 인덱스를 반대로 바꿀 때 편리하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">digit_reverse_4</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    answer<span class=\"token punctuation\">.</span>reverse<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> answer\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"결과 : {}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>digit_reverse_2<span class=\"token punctuation\">(</span><span class=\"token number\">12345</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 결과 : [5, 4, 3, 2, 1]</span></code></pre></div>\n<br>\n<p>5번째 방식은 n을 10으로 나눈 나머지를 리스트에 하나씩 추가하는 방법으로 풀이했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">digit_reverse_5</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    li <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">while</span> n <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        li <span class=\"token operator\">+=</span> <span class=\"token punctuation\">[</span>n <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span>\n        n <span class=\"token operator\">=</span> n <span class=\"token operator\">//</span> <span class=\"token number\">10</span>\n    <span class=\"token keyword\">return</span> li</code></pre></div>\n<p>위 while 반복문의 연산과정은 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># [5]</span>\n<span class=\"token comment\"># 1234</span>\n<span class=\"token comment\"># [5, 4]</span>\n<span class=\"token comment\"># 123</span>\n<span class=\"token comment\"># [5, 4, 3]</span>\n<span class=\"token comment\"># 12</span>\n<span class=\"token comment\"># [5, 4, 3, 2]</span>\n<span class=\"token comment\"># 1</span>\n<span class=\"token comment\"># [5, 4, 3, 2, 1]</span>\n<span class=\"token comment\"># 0</span></code></pre></div>\n<br>\n<p>마지막 방식은 <code class=\"language-text\">divmod()</code>라는 함수를 사용한 코드이다. <code class=\"language-text\">divmod(a, b)</code>는 2개의 숫자(a, b)를 입력받아 a를 b로 나눈 몫과 나머지를 튜플 형태로 리턴하는 함수이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&gt;&gt;&gt; divmod(7, 3)\n(2, 1)\n&gt;&gt;&gt; divmod(1.3, 0.2)\n(6.0, 0.099999999999999978)</code></pre></div>\n<p>n을 10으로 나누었을 때 몫과 나머지를 각각 n, a에 저장하고 a 값은 리스트에 저장한다. 5번째 방식을 내장함수로 쉽게 쓴 방법이라 할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">digit_reverse_6</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">while</span> n<span class=\"token punctuation\">:</span>\n        n<span class=\"token punctuation\">,</span> a <span class=\"token operator\">=</span> <span class=\"token builtin\">divmod</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n        answer<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<p>위 코드의 내부 동작방식은 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># [5]</span>\n<span class=\"token comment\"># [5, 4]</span>\n<span class=\"token comment\"># [5, 4, 3]</span>\n<span class=\"token comment\"># [5, 4, 3, 2]</span>\n<span class=\"token comment\"># [5, 4, 3, 2, 1]</span></code></pre></div>\n<br>\n<h2 id=\"풀이-별-실행시간-측정하기\" style=\"position:relative;\"><a href=\"#%ED%92%80%EC%9D%B4-%EB%B3%84-%EC%8B%A4%ED%96%89%EC%8B%9C%EA%B0%84-%EC%B8%A1%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\"풀이 별 실행시간 측정하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>풀이 별 실행시간 측정하기</h2>\n<p>각각의 함수를 100,000번 반복한 실행시간의 평균을 구했을 때 다음과 같이 시간이 걸린다. 이번에는 리스트 인덱싱과 <code class=\"language-text\">divmod()</code>를 사용한 코드가 가장 시간이 적게 걸렸다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>avg_time<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>digit_reverse_1<span class=\"token punctuation\">(</span><span class=\"token number\">1234567</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 0.7139969966374338</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>avg_time<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>digit_reverse_2<span class=\"token punctuation\">(</span><span class=\"token number\">1234567</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 0.8409988367930055</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>avg_time<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>digit_reverse_3<span class=\"token punctuation\">(</span><span class=\"token number\">1234567</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 0.6010013748891652</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>avg_time<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>digit_reverse_4<span class=\"token punctuation\">(</span><span class=\"token number\">1234567</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 0.7819980964995921</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>avg_time<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>digit_reverse_5<span class=\"token punctuation\">(</span><span class=\"token number\">1234567</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 0.7530034054070711</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>avg_time<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>digit_reverse_6<span class=\"token punctuation\">(</span><span class=\"token number\">1234567</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 0.6839982233941555</span></code></pre></div>\n<br>","excerpt":"문제 설명 digit_reverse함수는 양의 정수 n을 매개변수로 입력받습니다.\nn을 뒤집어 숫자 하나하나를 list로 표현해주세요\n예를 들어 n이 12345이면 5,4,3,2,1을 리턴하면 됩니다. 문제 보러가기 코드 및 풀이 숫자를 뒤집는 방법…","tableOfContents":"<ul>\n<li>\n<ul>\n<li><a href=\"/level2.%20%EC%9E%90%EC%97%B0%EC%88%98%EB%92%A4%EC%A7%91%EC%96%B4%EB%A6%AC%EC%8A%A4%ED%8A%B8%EB%A7%8C%EB%93%A4%EA%B8%B0/#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\">문제 설명</a></li>\n</ul>\n</li>\n<li><a href=\"/level2.%20%EC%9E%90%EC%97%B0%EC%88%98%EB%92%A4%EC%A7%91%EC%96%B4%EB%A6%AC%EC%8A%A4%ED%8A%B8%EB%A7%8C%EB%93%A4%EA%B8%B0/#%EC%BD%94%EB%93%9C-%EB%B0%8F-%ED%92%80%EC%9D%B4\">코드 및 풀이</a></li>\n<li><a href=\"/level2.%20%EC%9E%90%EC%97%B0%EC%88%98%EB%92%A4%EC%A7%91%EC%96%B4%EB%A6%AC%EC%8A%A4%ED%8A%B8%EB%A7%8C%EB%93%A4%EA%B8%B0/#%EB%8B%A4%EB%A5%B8-%EB%B0%A9%EC%8B%9D%EC%9D%98-%EC%BD%94%EB%93%9C-%EB%B0%8F-%ED%92%80%EC%9D%B4\">다른 방식의 코드 및 풀이</a></li>\n<li><a href=\"/level2.%20%EC%9E%90%EC%97%B0%EC%88%98%EB%92%A4%EC%A7%91%EC%96%B4%EB%A6%AC%EC%8A%A4%ED%8A%B8%EB%A7%8C%EB%93%A4%EA%B8%B0/#%ED%92%80%EC%9D%B4-%EB%B3%84-%EC%8B%A4%ED%96%89%EC%8B%9C%EA%B0%84-%EC%B8%A1%EC%A0%95%ED%95%98%EA%B8%B0\">풀이 별 실행시간 측정하기</a></li>\n</ul>","fields":{"slug":"/level2. 자연수뒤집어리스트만들기/"},"frontmatter":{"title":"Python _ Lv2. 자연수 뒤집어 리스트로 만들기","date":"Oct 31, 2017","tags":["algorithm","python"],"keywords":["Development Note","Julia"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/level2. 자연수뒤집어리스트만들기/","series":[],"lastmod":"2017-10-31"}},"staticQueryHashes":["2027115977","694178885"]}