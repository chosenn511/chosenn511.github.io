{"componentChunkName":"component---src-templates-post-tsx","path":"/web_1.2-장고배포환경구축하기/","result":{"data":{"markdownRemark":{"html":"<p>프로젝트를 진행할 때 가장 중요한 것은 <strong>깃에서 추적할 코드와 추적하지 않을 중요 정보 및 설정을 분리해놓는 것</strong>\n이다. 특히 깃헙 퍼블릭 레포지토리를 사용하고 있다면 소스코드를 푸시하기 전에 반드시 추적되선 안되는 프로젝트 <code class=\"language-text\">시크릿 키</code>, 허용하는 호스트 주소들, 데이터베이스 정보 등은 따로 관리해주어야 한다.</p>\n<p>숨기고 싶은 값들은 루트 경로에 <code class=\"language-text\">.config_secret</code> 폴더를 따로 생성하여 내부에서 환경별로 관리해준다. 또한 개발(로컬)환경과 운영환경에서 사용하는 설정값이 다를 수 있으므로 하나의 프로젝트 내에서 배포와 개발환경을 서로 나누어 사용하려고 한다. 배포환경 설정을 저장할 파일은 <code class=\"language-text\">deploy</code>, 개발환경 설정을 저장할 파일은 <code class=\"language-text\">debug</code>로 각각 분리하였다.</p>\n<br>\n<h2 id=\"설정-분리하기\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%A0%95-%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0\" aria-label=\"설정 분리하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설정 분리하기</h2>\n<h3 id=\"config_secret-폴더로-숨길-값들-관리하기\" style=\"position:relative;\"><a href=\"#config_secret-%ED%8F%B4%EB%8D%94%EB%A1%9C-%EC%88%A8%EA%B8%B8-%EA%B0%92%EB%93%A4-%EA%B4%80%EB%A6%AC%ED%95%98%EA%B8%B0\" aria-label=\"config_secret 폴더로 숨길 값들 관리하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>.config_secret 폴더로 숨길 값들 관리하기</h3>\n<p>프로젝트 폴더 내에 <code class=\"language-text\">.config_secret</code>을 만들어준다.(<code class=\"language-text\">django_app</code> 폴더와 같은 위치)</p>\n<p>해당 폴더는 숨김파일로 기능한다. 폴더 내에 JSON 파일을 만들어주고 앱의 <code class=\"language-text\">secret_key</code>, <code class=\"language-text\">debug</code>, <code class=\"language-text\">database</code>, <code class=\"language-text\">allowed_host</code>, 그리고 <code class=\"language-text\">static 파일경로</code> 등의 앱 설정사항을 넣어준다. 배포환경, 개발환경에서 공통으로 사용할 비밀값들을 저장하는데에 JSON 파일 형식을 사용한다.</p>\n<br>\n<h3 id=\"json-파일-작성하기\" style=\"position:relative;\"><a href=\"#json-%ED%8C%8C%EC%9D%BC-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"json 파일 작성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>.json 파일 작성하기</h3>\n<p>JSON 파일은 딕셔너리로 구성되어 있으며 문자열에 작은 따옴표(<code class=\"language-text\">&#39;&#39;</code>)를 허용하지 않는다.\n또한 딕셔너리 마지막 값 뒤에 콤마(<code class=\"language-text\">,</code>)를 쓰면 에러나므로 주의한다.</p>\n<p>공통으로 사용할 개인/중요정보는 <code class=\"language-text\">settings_common.json</code>에 저장한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">### .config_secret/settings_common.json</span>\n\n<span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"django\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"secret_key\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"[앱 시크릿키값]\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<p>개발 환경에서만 사용할 개인/중요정보는 <code class=\"language-text\">settings_debug.json</code>에 저장한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">### .config_secret/settings_debug.json</span>\n\n<span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"django\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"allowed_hosts\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"*\"</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<p>배포 환경에서만 사용할 개인/중요정보는 <code class=\"language-text\">settings_debug.json</code>에 저장한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">### .config_secret/settings_deploy.json</span>\n\n<span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"django\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"allowed_hosts\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"*\"</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<h3 id=\"settings-파일-분할하기\" style=\"position:relative;\"><a href=\"#settings-%ED%8C%8C%EC%9D%BC-%EB%B6%84%ED%95%A0%ED%95%98%EA%B8%B0\" aria-label=\"settings 파일 분할하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>settings 파일 분할하기</h3>\n<p><strong>(1) base.py</strong></p>\n<p>기존의 settings 파일은 동일 프로젝트 폴더 내에 파이썬 패키지 <code class=\"language-text\">settings</code>로 만들고 <code class=\"language-text\">base.py</code>로 저장한다. 기존 <code class=\"language-text\">settings.py</code>에 있는 내용을 모두 옮겨주고 기존파일은 삭제한다.</p>\n<p>경로가 바뀌었으므로 <code class=\"language-text\">os.path</code>을 사용하여 세팅 안의 경로 지정값들을 바꿔준다. (<code class=\"language-text\">os.path</code>는 파일과 경로를 지정해줄 때 유용한 함수들을 여러 개 제공하고 있다.)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> json\n\n<span class=\"token comment\"># 파이썬 패키지 안에 넣어주었으므로 기존 BASE_DIR 경로에서 dirname()으로 한번 더 감싸준다.</span>\nBASE_DIR <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>abspath<span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># BASE_DIR로 루트 경로를 변수에 할당한다.</span>\nROOT_DIR <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>BASE_DIR<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># .config_secret폴더 및 하위 파일 경로</span>\nCONFIG_SECRET_DIR <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>ROOT_DIR<span class=\"token punctuation\">,</span> <span class=\"token string\">'.config_secret'</span><span class=\"token punctuation\">)</span>\nCONFIG_SECRET_COMMON_FILE <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>CONFIG_SECRET_DIR<span class=\"token punctuation\">,</span> <span class=\"token string\">'settings_common.json'</span><span class=\"token punctuation\">)</span>\nCONFIG_SECRET_DEBUG_FILE <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>CONFIG_SECRET_DIR<span class=\"token punctuation\">,</span> <span class=\"token string\">'settings_debug.json'</span><span class=\"token punctuation\">)</span>\nCONFIG_SECRET_DEPLOY_FILE <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>CONFIG_SECRET_DIR<span class=\"token punctuation\">,</span> <span class=\"token string\">'settings_deploy.json'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># .config_secret 변수에 CONFIG_SECRET_COMMON_FILE경로의 파일을 읽은 값을 할당</span>\nf <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>CONFIG_SECRET_COMMON_FILE<span class=\"token punctuation\">)</span>\nconfig_secret_string <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># json 형식을 파이썬 딕셔너리 형식으로 변환해준다.</span>\nconfig_secret <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>config_secret_string<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 열었던 파일을 닫는다.</span>\nf<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 위의 과정을 아래와 같이 작성할 수도 있다.</span>\nconfig_secret_common <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>CONFIG_SECRET_COMMON_FILE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 변수가 사용되지 않으면 파일은 자동으로 닫힌다</span>\n\n<span class=\"token comment\"># 시크릿키를 바로 쓰는 것이 아니라 숨김파일에 따로 설정해 불러올 수 있다.</span>\nSECRET_KEY <span class=\"token operator\">=</span> config_secret_common<span class=\"token punctuation\">[</span><span class=\"token string\">'django'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'secret_key'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<br>\n<h3 id=\"콘솔에서-사용하기\" style=\"position:relative;\"><a href=\"#%EC%BD%98%EC%86%94%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"콘솔에서 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>콘솔에서 사용하기</h3>\n<p>기존 세팅파일을 새로 정의해주었으므로 서버를 실행할 때 어떤 환경의 설정을 사용할 것인지 명시해주어야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># 기본, 개발, 배포용 서버를 각각 따로 실행할 수 있다.</span>\n$ <span class=\"token punctuation\">.</span>manage<span class=\"token punctuation\">.</span>py runserver <span class=\"token operator\">--</span>settings=config<span class=\"token punctuation\">.</span>settings<span class=\"token punctuation\">.</span>base  <span class=\"token comment\"># 기본용</span>\n$ <span class=\"token punctuation\">.</span>manage<span class=\"token punctuation\">.</span>py runserver <span class=\"token operator\">--</span>settings=config<span class=\"token punctuation\">.</span>settings<span class=\"token punctuation\">.</span>debug  <span class=\"token comment\"># 개발용</span>\n$ <span class=\"token punctuation\">.</span>manage<span class=\"token punctuation\">.</span>py runserver <span class=\"token operator\">--</span>settings=config<span class=\"token punctuation\">.</span>settings<span class=\"token punctuation\">.</span>deploy  <span class=\"token comment\"># 배포용</span></code></pre></div>\n<p>일일히 작성하기 싫다면 터미널 별로 환경변수의 기본값을 설정하여 사용할 수도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># 예) 아래와 같이 선언하면 해당 터미널에서는 타 명령을 실행할 때 개발환경의 설정을 따른다.</span>\n$ export DJANGO_SETTINGS_MODULE=config<span class=\"token punctuation\">.</span>settings<span class=\"token punctuation\">.</span>debug</code></pre></div>\n<br>\n<p><strong>(2) debug.py와 deploy.py</strong></p>\n<p><code class=\"language-text\">settings</code>폴더 내에 <code class=\"language-text\">debug.py</code>, <code class=\"language-text\">deploy.py</code> 파일을 각각 생성한 후 다음의 값을 설정해준다.</p>\n<ul>\n<li><code class=\"language-text\">DEBUG = True</code>설정</li>\n<li><code class=\"language-text\">settings_debug.json</code>의 값을 불러와 파이썬 딕셔너리로 돌려준 값</li>\n<li><code class=\"language-text\">ALLOWED_HOSTS</code> 값을 설정</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\">### settings/debug.py</span>\n\n<span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span>base <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n\nconfig_secret_debug <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>CONFIG_SECRET_DEBUG_FILE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nDEBUG <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\nALLOWED_HOSTS <span class=\"token operator\">=</span> config_secret_debug<span class=\"token punctuation\">[</span><span class=\"token string\">'django'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'allowed_hosts'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>위의 설정으로 콘솔에서 <code class=\"language-text\">runserver</code>를 실행해보면...</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\"><span class=\"token comment\"># DEBUG 설정을 debug.py로 옮겨주면 기존 base 파일은 실행되지 않는다.</span>\n$ <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>manage<span class=\"token punctuation\">.</span>py runserver <span class=\"token operator\">--</span>settings=config<span class=\"token punctuation\">.</span>settings<span class=\"token punctuation\">.</span>base    \nCommandError: You must <span class=\"token function\">set</span> settings<span class=\"token punctuation\">.</span>ALLOWED_HOSTS <span class=\"token keyword\">if</span> DEBUG is False<span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\"># 따라서 debug로 실행해준다.</span>\n$ <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>manage<span class=\"token punctuation\">.</span>py runserver <span class=\"token operator\">--</span>settings=config<span class=\"token punctuation\">.</span>settings<span class=\"token punctuation\">.</span>debug</code></pre></div>\n<p><strong>만들어준 <code class=\"language-text\">.config_secret</code> 디렉토리는 <code class=\"language-text\">.gitignore</code>에 명시해주어 Github에서 추적하지 않도록 해준다</strong>. 배포는 <code class=\"language-text\">AWS키</code>를 사용할 예정이므로 처음 실습한다면 <a href=\"https://bitbucket.org\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">bitbucket</a>을 사용하는 것을 추천한다. <code class=\"language-text\">Github</code>는 비공개 레포지토리가 유료이지만 <code class=\"language-text\">bitbucket</code>은 무료로 비공개 레포지토리를 생성/사용할 수 있다.</p>\n<p>또한 배포할 프로젝트 폴더는 <code class=\"language-text\">settings</code> 파일을 제공하지 않기 때문에 <code class=\"language-text\">README.md</code>를 따로 작성하여 <code class=\"language-text\">requirements</code>에 대한 안내문을 작성해주는 것이 좋다.</p>\n<br>\n<h2 id=\"프로젝트-구조-이해하기\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B5%AC%EC%A1%B0-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0\" aria-label=\"프로젝트 구조 이해하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 구조 이해하기</h2>\n<p>설정을 분리한 파일구조를 보면 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">$ tree <span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">.</span>\n<span class=\"token comment\"># 깃에서 track하면 안되는 중요 정보들을 저장하는 json 파일 묶음.</span>\n├── <span class=\"token punctuation\">.</span>config_secret\n\t<span class=\"token comment\"># 프로젝트 secret_key</span>\n    ├── settings_common<span class=\"token punctuation\">.</span>json   \n    <span class=\"token comment\"># 개발환경의 allowed_hosts 설정</span>\n    ├── settings_debug<span class=\"token punctuation\">.</span>json     \n    <span class=\"token comment\"># 배포환경의 allowed_hosts 및 데이터베이스 설정</span>\n    └── settings_deploy<span class=\"token punctuation\">.</span>json   \n├── <span class=\"token punctuation\">.</span>requirements\n    <span class=\"token comment\"># 개발환경에서 필요한 패키지 모음</span>\n    ├── debug<span class=\"token punctuation\">.</span>txt\n    <span class=\"token comment\"># 배포환경에서 필요한 패키지 모음</span>\n    └── deploy<span class=\"token punctuation\">.</span>txt\n<span class=\"token comment\"># 프로젝트 루트폴더 (프로젝트를 구성하는 앱과 기본 설정 묶음.)</span>\n├── django_app\n  <span class=\"token comment\"># 프로젝트 기본 설정폴더 (startproject 시 기본으로 생성해줌)</span>\n    ├── config\n    │   ├── __init__<span class=\"token punctuation\">.</span>py\n    <span class=\"token comment\"># 기존 settings.py를 환경 별로 다르게 적용되도록 분리.</span>\n    │   ├── settings\n    │   │   ├── __init__<span class=\"token punctuation\">.</span>py\n    │   │   ├── base<span class=\"token punctuation\">.</span>py  <span class=\"token comment\"># 공통 설정파일</span>\n    │   │   ├── debug<span class=\"token punctuation\">.</span>py  <span class=\"token comment\"># 개발환경</span>\n    │   │   └── deploy<span class=\"token punctuation\">.</span>py  <span class=\"token comment\"># 배포환경</span>\n    <span class=\"token comment\"># 프로젝트 기본 url 설정파일. rest_framework 기본 url을 설정해준다.</span>\n    │   ├── urls<span class=\"token punctuation\">.</span>py\n    <span class=\"token comment\"># 어플리케이션 인터페이스 설정 분리</span>\n    │   └── wsgi\n    │       ├── __init__<span class=\"token punctuation\">.</span>py\n    │       ├── debug<span class=\"token punctuation\">.</span>py\n    │       └── deploy<span class=\"token punctuation\">.</span>py\n    ├── db<span class=\"token punctuation\">.</span>sqlite3\n    └── manage<span class=\"token punctuation\">.</span>py\n├── README<span class=\"token punctuation\">.</span>md\n└── db<span class=\"token punctuation\">.</span>sqlite3</code></pre></div>\n<br>\n<p>작업 중 <code class=\"language-text\">WSGI</code>에 대한 이해가 명확하지 않아 블로그 내 <a href=\"http://bbrubidev.github.io/web_WSGI.html\" target=\"_blank\">WSGI란 무엇인가?</a>에 따로 정리하였다.</p>\n<br>\n<h2 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며</h2>\n<p>이외에도 세팅은 점차 개발을 해나가면서 필요한 데이터베이스정보, 정적파일 및 미디어 파일 저장경로 등을 개발/배포 환경 별로 지정해 줄 수 있다.</p>\n<p>다음 포스팅은 <code class=\"language-text\">Wordy Gallery</code>의 앱 구조와 모델링에 대해 정리할 예정이다.</p>\n<br>","excerpt":"프로젝트를 진행할 때 가장 중요한 것은 깃에서 추적할 코드와 추적하지 않을 중요 정보 및 설정을 분리해놓는 것\n이다. 특히 깃헙 퍼블릭 레포지토리를 사용하고 있다면 소스코드를 푸시하기 전에 반드시 추적되선 안되는 프로젝트 , 허용하는 호스트 주소들,…","tableOfContents":"<ul>\n<li>\n<p><a href=\"/web_1.2-%EC%9E%A5%EA%B3%A0%EB%B0%B0%ED%8F%AC%ED%99%98%EA%B2%BD%EA%B5%AC%EC%B6%95%ED%95%98%EA%B8%B0/#%EC%84%A4%EC%A0%95-%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0\">설정 분리하기</a></p>\n<ul>\n<li><a href=\"/web_1.2-%EC%9E%A5%EA%B3%A0%EB%B0%B0%ED%8F%AC%ED%99%98%EA%B2%BD%EA%B5%AC%EC%B6%95%ED%95%98%EA%B8%B0/#config_secret-%ED%8F%B4%EB%8D%94%EB%A1%9C-%EC%88%A8%EA%B8%B8-%EA%B0%92%EB%93%A4-%EA%B4%80%EB%A6%AC%ED%95%98%EA%B8%B0\">.config_secret 폴더로 숨길 값들 관리하기</a></li>\n<li><a href=\"/web_1.2-%EC%9E%A5%EA%B3%A0%EB%B0%B0%ED%8F%AC%ED%99%98%EA%B2%BD%EA%B5%AC%EC%B6%95%ED%95%98%EA%B8%B0/#json-%ED%8C%8C%EC%9D%BC-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\">.json 파일 작성하기</a></li>\n<li><a href=\"/web_1.2-%EC%9E%A5%EA%B3%A0%EB%B0%B0%ED%8F%AC%ED%99%98%EA%B2%BD%EA%B5%AC%EC%B6%95%ED%95%98%EA%B8%B0/#settings-%ED%8C%8C%EC%9D%BC-%EB%B6%84%ED%95%A0%ED%95%98%EA%B8%B0\">settings 파일 분할하기</a></li>\n<li><a href=\"/web_1.2-%EC%9E%A5%EA%B3%A0%EB%B0%B0%ED%8F%AC%ED%99%98%EA%B2%BD%EA%B5%AC%EC%B6%95%ED%95%98%EA%B8%B0/#%EC%BD%98%EC%86%94%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\">콘솔에서 사용하기</a></li>\n</ul>\n</li>\n<li><a href=\"/web_1.2-%EC%9E%A5%EA%B3%A0%EB%B0%B0%ED%8F%AC%ED%99%98%EA%B2%BD%EA%B5%AC%EC%B6%95%ED%95%98%EA%B8%B0/#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B5%AC%EC%A1%B0-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0\">프로젝트 구조 이해하기</a></li>\n<li><a href=\"/web_1.2-%EC%9E%A5%EA%B3%A0%EB%B0%B0%ED%8F%AC%ED%99%98%EA%B2%BD%EA%B5%AC%EC%B6%95%ED%95%98%EA%B8%B0/#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며</a></li>\n</ul>","fields":{"slug":"/web_1.2-장고배포환경구축하기/"},"frontmatter":{"title":"Web _ 1.2 장고 배포환경 구축하기","date":"Sep 13, 2017","tags":["Django","Project","Web development"],"keywords":["Development Note","Julia"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/web_1.2-장고배포환경구축하기/","series":[],"lastmod":"2017-09-13"}},"staticQueryHashes":["2027115977","694178885"]}