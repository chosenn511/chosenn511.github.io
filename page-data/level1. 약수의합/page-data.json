{"componentChunkName":"component---src-templates-post-tsx","path":"/level1. 약수의합/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>어떤 수를 입력받아 그 수의 약수를 모두 더한 수 sumDivisor 함수를 완성해 보세요.\n예를 들어 12가 입력된다면 12의 약수는 [1, 2, 3, 4, 6, 12]가 되고,\n총 합은 28이 되므로 28을 반환해 주면 됩니다.</p>\n</blockquote>\n<p><a href=\"https://programmers.co.kr/learn/challenge_codes/2\" target=\"_blank\">문제 보러가기</a></p>\n<br>\n<h2 id=\"코드-및-풀이\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C-%EB%B0%8F-%ED%92%80%EC%9D%B4\" aria-label=\"코드 및 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드 및 풀이</h2>\n<p>최초의 풀이는 다음과 같다. answer의 값이 1이므로 2부터 시작하는 반복문을 돌면서 <code class=\"language-text\">num</code>을 나눈 나머지가 <code class=\"language-text\">0</code>인 <code class=\"language-text\">i</code>의 값을 <code class=\"language-text\">answer</code>에 더해주고 리턴한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">sumDivisor</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> num <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> num <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            answer <span class=\"token operator\">+=</span> i\n    <span class=\"token keyword\">return</span> answer\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sumDivisor<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 28</span></code></pre></div>\n<br>\n<p>다음과 같이 리스트 컴프리핸션을 통해 i 값을 모두 구한 뒤 <code class=\"language-text\">sum()</code>을 사용하여 더한 값을 리턴할 수도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">sumDivisor_2</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> num <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> num <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br>\n<p>3번째 방법은 약수의 성질을 이용한 것이다. 모든 수는 자기자신을 약수로 가지며 2로 나누어지는 것에 상관 없이 2로 나눈 값보다 작은 수들을 약수로 가지므로 다음과 같이 풀이할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">sumDivisor_3</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> num <span class=\"token operator\">+</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">//</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> num <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br>\n<p>4번째 방법은 3번째와 비슷하지만 범위를 1에서부터 인자의 루트값으로 지정하여 조건에 맞는 값만 더한 후 자기자신을 더해준 값을 리턴해준다. 이렇게 하면 연산속도가 더욱 빨라진다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">sumDivisor_4</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> num <span class=\"token operator\">+</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">**</span> <span class=\"token number\">.5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> num <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br>\n<h2 id=\"풀이-별-실행시간-측정하기\" style=\"position:relative;\"><a href=\"#%ED%92%80%EC%9D%B4-%EB%B3%84-%EC%8B%A4%ED%96%89%EC%8B%9C%EA%B0%84-%EC%B8%A1%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\"풀이 별 실행시간 측정하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>풀이 별 실행시간 측정하기</h2>\n<p>각각의 함수를 100,000번 반복한 실행시간의 평균을 구했을 때 다음과 같이 시간이 걸린다. 근소한 차이지만 4번째 방식으로 풀이했을 때가 가장 시간이 적게 걸리는 것을 알 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>avg<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>sumDivisor_1<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 0.05220026650931686</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>avg<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>sumDivisor_2<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 0.08070019248407334</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>avg<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>sumDivisor_3<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 0.04699977580457926</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>avg<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>sumDivisor_4<span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 0.04630019247997552</span></code></pre></div>\n<br>","excerpt":"어떤 수를 입력받아 그 수의 약수를 모두 더한 수 sumDivisor 함수를 완성해 보세요.\n예를 들어 12가 입력된다면 12의 약수는 1, 2, 3, 4, 6, 12가 되고,\n총 합은 28이 되므로 28을 반환해 주면 됩니다. 문제 보러가기 코드 …","tableOfContents":"<ul>\n<li><a href=\"/level1.%20%EC%95%BD%EC%88%98%EC%9D%98%ED%95%A9/#%EC%BD%94%EB%93%9C-%EB%B0%8F-%ED%92%80%EC%9D%B4\">코드 및 풀이</a></li>\n<li><a href=\"/level1.%20%EC%95%BD%EC%88%98%EC%9D%98%ED%95%A9/#%ED%92%80%EC%9D%B4-%EB%B3%84-%EC%8B%A4%ED%96%89%EC%8B%9C%EA%B0%84-%EC%B8%A1%EC%A0%95%ED%95%98%EA%B8%B0\">풀이 별 실행시간 측정하기</a></li>\n</ul>","fields":{"slug":"/level1. 약수의합/"},"frontmatter":{"title":"Python _ Lv1. 약수의 합","date":"Oct 30, 2017","tags":["algorithm","python"],"keywords":["Development Note","Julia"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/level1. 약수의합/","series":[],"lastmod":"2017-10-30"}},"staticQueryHashes":["2027115977","694178885"]}