{"componentChunkName":"component---src-templates-post-tsx","path":"/ggcloudDeploy-6_02/","result":{"data":{"markdownRemark":{"html":"<p>사이트를 배포하고 나서 반드시 해주어야 하는 작업이 있다. 바로 웹사이트 도메인에 <code class=\"language-text\">SSL</code> 인증서를 발급받는 일이다. 특히 크롬/사파리 브라우저는 앞으로 인증서가 없는 웹사이트에 접속 시 경고창을 띄울 것이라고 공지한 만큼 <strong>SSL인증서 발급은 웹사이트 배포시 필수</strong>\n적인 작업이다.</p>\n<br>\n<h2 id=\"ssltls-인증서란\" style=\"position:relative;\"><a href=\"#ssltls-%EC%9D%B8%EC%A6%9D%EC%84%9C%EB%9E%80\" aria-label=\"ssltls 인증서란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SSL/TLS 인증서란?</h2>\n<p><code class=\"language-text\">SSL</code> 인증서는 신뢰할 수 있는 인증기관에서 사이트의 보안을 보증해준다. 사용자가 웹사이트에 접속하면 여러 형태의 인증 기능(회원가입, 로그인, 로그아웃, 결제 등)을 사용하게 되는데 이 때 여러 중요정보를 웹사이트의 서버로 전송할 수 밖에 없다.</p>\n<p>이러한 개인정보는 <code class=\"language-text\">패킷</code> 형태로 전송하는데, 인증서가 없는 사이트는 중요정보가 담긴 패킷을 제 3자가 언제라도 낚아채 가져갈 위험이 있다. 예전에는 인증 기능이 포함된 페이지 경로에만 부분적으로 <code class=\"language-text\">SSL</code>을 적용해도 괜찮았지만 요즘에는 웹사이트 전체에 <code class=\"language-text\">SSL</code>을 적용하도록 장려하고 있다.</p>\n<p>보통의 <code class=\"language-text\">SSL</code>은 유료로 구매하는 인증서지만, <strong>개인이 직접 생성한 키페어로 인증서를 발급</strong>\n해주는 <a href=\"#\" target=\"_blank\">Let's Encrypt</a> 오픈소스 서비스를 사용하려고 한다. 해당 서비스는 3개월의 인증서 유효기간을 제공하고 있다. 만약 직접 <code class=\"language-text\">Let&#39;s Encrypt</code>에서 인증서를 발급받아 사용하는 경우에는 유효기간을 넘지 않도록 조심해야한다. 인증서의 유효기간이 다가오면 사이트에 접속할 때 경고창이 뜨는 등 웹 접근성에 반하는 서비스를 할 우려가 있기 때문이다.</p>\n<br />\n<h2 id=\"kube-lego-라이브러리-사용하기\" style=\"position:relative;\"><a href=\"#kube-lego-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"kube lego 라이브러리 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>kube-lego 라이브러리 사용하기</h2>\n<p><code class=\"language-text\">kube-lego</code>는 Kubernetes 엔진으로 배포한 웹앱에 간단한 설정(?...튜토리얼에 의하면)으로 도메인을 할당할 수 있다. 또한, <code class=\"language-text\">Let&#39;s Encrypt</code>로 직접 발급받은 인증서를 유효기간 걱정없이 갱신해준다.</p>\n<p>지난 포스트 시리즈까지는 구글 클라우드 플랫폼(Google Cloud Platform) 내 쿠버네트 엔진(GKE, Google Kubernetes Engine)을 사용하여 도커이미지로 만든 장고 앱을 배포하는 방법에 대해 소개했다.\n이번 포스트에서는 Kubernete 엔진에 적용가능한 <code class=\"language-text\">kube-lego</code>를 사용하여 도메인을 할당하고 인증서를 발급하여 사이트 접속시 <code class=\"language-text\">https</code>로 리다이렉트하는 방법을 소개하겠다.</p>\n<br />\n<h2 id=\"준비물\" style=\"position:relative;\"><a href=\"#%EC%A4%80%EB%B9%84%EB%AC%BC\" aria-label=\"준비물 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>준비물</h2>\n<ul>\n<li>\n<p>인증서 발급용 <code class=\"language-text\">.key</code>, <code class=\"language-text\">.crt</code> 파일</p>\n<ul>\n<li><code class=\"language-text\">openssl</code>로 생성하여 안전한 곳에 저장해둔다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$  openssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout /path/to/tls.key -out /path/to/tls.crt -subj &quot;/CN=DNS 이름&quot;</code></pre></div>\n<p><strong>주의</strong></p>\n<ul>\n<li>위의 파일은 반드시! 반드시...!! 안전한 곳에 저장해둔다.</li>\n<li>키를 생성할 때 <code class=\"language-text\">.srt</code>와 <code class=\"language-text\">.key</code>파일의 이름은 반드시 <code class=\"language-text\">tls</code>로 통일해준다. 그렇지 않으면 못찾더라 ㅠㅠ...</li>\n</ul>\n</li>\n<li>빌링이 허용된 계정으로 쿠버네트 엔진에 배포 중인 장고 앱 (<a href=\"#\" target=\"_blank\">쿠버네트엔진 배포에 대한 이전 포스팅</a> 참고)</li>\n<li>앱에 할당할 수 있는, 직접 소유하고 있는 도메인</li>\n</ul>\n<p><code class=\"language-text\">kube-lego</code>는 기본적으로 <code class=\"language-text\">Ingress</code> 설정과 연동하여 사용하는 라이브러리다. <code class=\"language-text\">Ingress</code>를 사용한 배포방식을 이해하지 못했다면 <a href=\"#\" target=\"_blank\">이전 글</a>을 참고하자.</p>\n<p>위의 준비물이 준비됐다면 다음으로 넘어가자. </p>\n<br />\n<h2 id=\"kube-lego-작동원리-이해하기\" style=\"position:relative;\"><a href=\"#kube-lego-%EC%9E%91%EB%8F%99%EC%9B%90%EB%A6%AC-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0\" aria-label=\"kube lego 작동원리 이해하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>kube-lego 작동원리 이해하기</h2>\n<p><code class=\"language-text\">kube-lego</code>는 일종의 지름길이다. SSL 인증서는 신뢰할 수 있는 인증기관에서 유료로 발급받아 유효기간이 다가오기 전에 미리 매번 갱신해 주어야하는 번거로움을 디폴트로 내장하고 있다. 하지만 앞에서도 설명했듯이 인증서 발급은 필수적인 작업이므로 개발자들은 직접 시크릿파일을 만들어 수동으로 SSL 인증서를 적용시켜 왔는데, <strong><code class=\"language-text\">kube-lego</code>는 이러한 일련의 과정을 설정파일 몇 개로 단순화시켜 만들어놓은 라이브러리</strong>다.</p>\n<p>배포를 하면서 깨닫게 된 사실인데, <code class=\"language-text\">namespace</code>는 매우 중요하다. 이왕이면 <strong>지금까지 모든 설정파일(<code class=\"language-text\">Ingress</code>설정파일부터~)의 <code class=\"language-text\">namespace</code>를 통일해주는 것이 좋은데, 쿠버네트 엔진같이 클러스터 내에 여러 포드를 생성하는 경우 명시해주지 않으면 파일이 엉뚱한 곳에 설정되는 경우도 있기 때문</strong>이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># kube-lego.yaml</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Namespace\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> kube<span class=\"token punctuation\">-</span>lego\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> customize this<span class=\"token tag\">!</span> <span class=\"token comment\"># ConfigMap, Deployment와 통일해준다.</span></code></pre></div>\n<br>\n<p>kube-lego는 스스로 <code class=\"language-text\">Let&#39;s Encrypt</code>에 계정을 생성해 인증서를 발급받아온다. 다음은 그에 해당하는 설정파일이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> kube<span class=\"token punctuation\">-</span>lego\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> customize this<span class=\"token tag\">!</span>\n<span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># modify this to specify your address</span>\n  <span class=\"token key atrule\">lego.email</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># \"Let's Encrypt 계정으로 사용할 이메일주소\"</span>\n  <span class=\"token comment\"># configure letsencrypt's production api</span>\n  <span class=\"token key atrule\">lego.url</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"https://acme-v01.api.letsencrypt.org/directory\"</span>\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> ConfigMap</code></pre></div>\n<br />\n<p>다음은 <code class=\"language-text\">kube-lego</code> 설정파일이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> extensions/v1beta1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Deployment\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> kube<span class=\"token punctuation\">-</span>lego\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> customize this<span class=\"token tag\">!</span>\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">replicas</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">labels</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> kube<span class=\"token punctuation\">-</span>lego\n    <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> kube<span class=\"token punctuation\">-</span>lego\n        <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> jetstack/kube<span class=\"token punctuation\">-</span>lego<span class=\"token punctuation\">:</span>0.1.5\n        <span class=\"token key atrule\">imagePullPolicy</span><span class=\"token punctuation\">:</span> Always\n        <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">containerPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> LEGO_EMAIL\n          <span class=\"token key atrule\">valueFrom</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">configMapKeyRef</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> kube<span class=\"token punctuation\">-</span>lego\n              <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> lego.email\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> LEGO_URL\n          <span class=\"token key atrule\">valueFrom</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">configMapKeyRef</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> kube<span class=\"token punctuation\">-</span>lego\n              <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> lego.url\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> LEGO_NAMESPACE\n          <span class=\"token key atrule\">valueFrom</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">fieldRef</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">fieldPath</span><span class=\"token punctuation\">:</span> metadata.namespace\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> LEGO_POD_IP\n          <span class=\"token key atrule\">valueFrom</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">fieldRef</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">fieldPath</span><span class=\"token punctuation\">:</span> status.podIP\n        <span class=\"token key atrule\">readinessProbe</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">httpGet</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /healthz\n            <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span>\n          <span class=\"token key atrule\">initialDelaySeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n          <span class=\"token key atrule\">timeoutSeconds</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span></code></pre></div>\n<br>\n<p><code class=\"language-text\">kube-lego</code> 설정이 끝나면 다음 명령어를 통해 지금까지의 모든 설정파일들을 적용시킨다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">$ kubectl apply <span class=\"token operator\">-</span>f <span class=\"token string\">\"yaml 파일명\"</span></code></pre></div>\n<br>\n<p>실제 pod가 동작하는 것을 보고싶다면 namespace 로 통일된 설정파일로 생성한 POD의 log를 찍어볼 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">$ kubectl get pods <span class=\"token operator\">-</span>n <span class=\"token string\">\"설정한 namespace명\"</span></code></pre></div>\n<br>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">$ kubectl logs <span class=\"token operator\">-</span>f <span class=\"token string\">\"kube-lego-0000\"</span> <span class=\"token operator\">-</span>n <span class=\"token string\">\"설정한 namespace명\"</span>\n\ntime=<span class=\"token string\">\"2018-02-10T17:44:12Z\"</span> level=info msg=<span class=\"token string\">\"requesting certificate for [설정 도메인]\"</span> context=<span class=\"token string\">\"ingress_tls\"</span> name=myingress namespace=default\ntime=<span class=\"token string\">\"2018-02-10T17:44:20Z\"</span> level=info msg=<span class=\"token string\">\"authorization successful\"</span> context=acme domain=<span class=\"token punctuation\">[</span>설정 도메인<span class=\"token punctuation\">]</span>\ntime=<span class=\"token string\">\"2018-02-10T17:44:21Z\"</span> level=info msg=<span class=\"token string\">\"successfully got certificate: domains=[설정 도메인] url=[let's encrypt acme 주소]\"</span> context=acme\ntime=<span class=\"token string\">\"2018-02-10T17:44:21Z\"</span> level=info msg=<span class=\"token string\">\"Secret successfully stored\"</span> context=secret name=<span class=\"token punctuation\">[</span>설정해준 시크릿 이름<span class=\"token punctuation\">]</span> namespace=default\ntime=<span class=\"token string\">\"2018-02-11T01:34:36Z\"</span> level=info msg=<span class=\"token string\">\"Periodically check certificates at 2018-02-11 01:34:36.919178554 +0000 UTC\"</span> context=kubelego  \ntime=<span class=\"token string\">\"2018-02-11T01:34:36Z\"</span> level=info msg=<span class=\"token string\">\"process certificate requests for ingresses\"</span> context=kubelego\ntime=<span class=\"token string\">\"2018-02-11T01:34:36Z\"</span> level=info msg=<span class=\"token string\">\"cert expires in 89.6 days, no renewal needed\"</span> context=<span class=\"token string\">\"\"</span> expire_time=2018<span class=\"token operator\">-</span>05<span class=\"token operator\">-</span>11 16:44:20 <span class=\"token operator\">+</span>0000 UTC name=<span class=\"token punctuation\">[</span>인그레스 이름<span class=\"token punctuation\">]</span> namespace=default\ntime=<span class=\"token string\">\"2018-02-11T01:34:36Z\"</span> level=info msg=<span class=\"token string\">\"no cert request needed\"</span> context=<span class=\"token string\">\"[인그레스 tls 이름]\"</span> name=<span class=\"token punctuation\">[</span>인그레스 이름<span class=\"token punctuation\">]</span> namespace=default\ntime=<span class=\"token string\">\"2018-02-11T09:34:36Z\"</span> level=info msg=<span class=\"token string\">\"Periodically check certificates at 2018-02-11 09:34:36.919211522 +0000 UTC\"</span> context=kubelego</code></pre></div>\n<p>위의 로그는 생성해놓은 시크릿 키파일로 <code class=\"language-text\">kube-lego</code>가 <code class=\"language-text\">Let&#39;s Encrypt</code>에 인증을 요청해서 인증서를 발급받아오는 과정을 보여준다. 이전 포스트에서 <code class=\"language-text\">Ingress</code>로 배포를 했다면 인증서 발급은 이렇게 간단하게 끝난다.</p>\n<p>콘솔을 확인해보면 <code class=\"language-text\">kube-lego</code>용 설정파일에서 지정한 이름으로 url이 생성되는데, 다음 패턴을 따른다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ingress에 등록한 도메인주소/well-known/acme-challenge</code></pre></div>\n<p>위의 도메인으로 접속해보면 이전 포스트에서 설치해준 <code class=\"language-text\">http-default-backend</code>에 의해 404 페이지가 뜨는 것을 확인할 수 있다.</p>\n<br>\n<h3 id=\"code-classlanguage-text주의code\" style=\"position:relative;\"><a href=\"#code-classlanguage-text%EC%A3%BC%EC%9D%98code\" aria-label=\"code classlanguage text주의code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">주의</code></h3>\n<p>인증서 발급에 시간이 걸리기 때문에 위의 로그가 찍혔더라도 브라우저로 도메인을 확인해보면 여전히 <code class=\"language-text\">Not Secure</code>가 뜰 가능성이 있다. 내 경우에는 10분 정도 기다리다가 창을 새로고침해보니 적용이 되었었다.</p>\n<br>\n<hr>\n<h2 id=\"마치며\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-label=\"마치며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마치며</h2>\n<p>구글 클라우드 플랫폼에서 쿠버네트 엔진을 쓰고, 외부 호스팅 서비스(예를 들면 Cloudflare)를 쓰지 않을 경우 <code class=\"language-text\">kube-lego</code>를 사용하자. 막상 적용할 때는 정말 어려웠지만 포스팅하면서 정리해보니 <code class=\"language-text\">kube-lego</code>가 굉장히 간편한 툴이라는 것을 깨달았다...</p>\n<br>","excerpt":"사이트를 배포하고 나서 반드시 해주어야 하는 작업이 있다. 바로 웹사이트 도메인에  인증서를 발급받는 일이다. 특히 크롬/사파리 브라우저는 앞으로 인증서가 없는 웹사이트에 접속 시 경고창을 띄울 것이라고 공지한 만큼 SSL인증서 발급은 웹사이트 배포…","tableOfContents":"<ul>\n<li><a href=\"/ggcloudDeploy-6_02/#ssltls-%EC%9D%B8%EC%A6%9D%EC%84%9C%EB%9E%80\">SSL/TLS 인증서란?</a></li>\n<li><a href=\"/ggcloudDeploy-6_02/#kube-lego-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\">kube-lego 라이브러리 사용하기</a></li>\n<li><a href=\"/ggcloudDeploy-6_02/#%EC%A4%80%EB%B9%84%EB%AC%BC\">준비물</a></li>\n<li>\n<p><a href=\"/ggcloudDeploy-6_02/#kube-lego-%EC%9E%91%EB%8F%99%EC%9B%90%EB%A6%AC-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0\">kube-lego 작동원리 이해하기</a></p>\n<ul>\n<li><a href=\"/ggcloudDeploy-6_02/#code-classlanguage-text%EC%A3%BC%EC%9D%98code\"><code class=\"language-text\">주의</code></a></li>\n</ul>\n</li>\n<li><a href=\"/ggcloudDeploy-6_02/#%EB%A7%88%EC%B9%98%EB%A9%B0\">마치며</a></li>\n</ul>","fields":{"slug":"/ggcloudDeploy-6_02/"},"frontmatter":{"title":"Google News Lab > 6. SSL 인증서 발급 <2편> kube-lego 이해하기","date":"Feb 13, 2018","tags":["Google News Lab","Kubernetes","Django","SSL","Let's Encrypt"],"keywords":["Development Note","Julia"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/ggcloudDeploy-6_02/","series":[{"slug":"/ggcloudDeploy-6_01/","title":"Google News Lab > 6. SSL 인증서 발급 <1편> 배포방식에 대한 고찰","num":1},{"slug":"/ggcloudDeploy-6_02/","title":"Google News Lab > 6. SSL 인증서 발급 <2편> kube-lego 이해하기","num":2}],"lastmod":"2018-02-13"}},"staticQueryHashes":["2027115977","694178885"]}