{"componentChunkName":"component---src-templates-post-tsx","path":"/git_03/","result":{"data":{"markdownRemark":{"html":"<p>버전관리컨트롤 시스템인 Git에서 파일을 실수로 추가하지 않았거나 추가하면 안될 파일의 상태를 바꾸고 싶을 때 어떻게 해주어야하는지 정리해보았다.</p>\n<br>\n<h2 id=\"커밋-합치기\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%B0%8B-%ED%95%A9%EC%B9%98%EA%B8%B0\" aria-label=\"커밋 합치기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커밋 합치기</h2>\n<p><code class=\"language-text\">git</code>에서 프로젝트 초기에 설정해주는 <code class=\"language-text\">.gitignore</code> 등의 파일을 빼먹고 커밋했다면 다음 명령어를 사용하여 원하는 커밋에 파일을 추가해줄 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">$ git commit <span class=\"token operator\">--</span>amend</code></pre></div>\n<p>에디터 창이 열리면 처음에 입력했던 커밋 메세지가 그대로 뜬다. 추가하거나 그대로 저장한다. <code class=\"language-text\">.gitignore</code>를 추가한 커밋사항이 추가저장된 것을 확인할 수 있다.</p>\n<br>\n<h3 id=\"삭제\" style=\"position:relative;\"><a href=\"#%EC%82%AD%EC%A0%9C\" aria-label=\"삭제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>삭제</h3>\n<p>이 경우에는 바로 전에 커밋된 파일을 삭제할 수는 있지만 해당 커밋 이후 다른 커밋을 하고 해당 커밋으로 돌아온 경우 파일이 되살아난다.</p>\n<br>\n<h2 id=\"staging-area에서-파일-제외하기\" style=\"position:relative;\"><a href=\"#staging-area%EC%97%90%EC%84%9C-%ED%8C%8C%EC%9D%BC-%EC%A0%9C%EC%99%B8%ED%95%98%EA%B8%B0\" aria-label=\"staging area에서 파일 제외하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>staging area에서 파일 제외하기</h2>\n<p><code class=\"language-text\">git add *</code>나 <code class=\"language-text\">git add -A</code>는 <code class=\"language-text\">untracked</code> 상태의 파일들을 한꺼번에<code class=\"language-text\">staging area</code>로 옮겨준다. 해당 명령어를 실행한 후 몇몇 파일은 <code class=\"language-text\">untracked</code> 상태로 되돌리고 싶은 경우에는 다음과 같이 명령어를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">$ git <span class=\"token function\">rm</span> <span class=\"token operator\">-</span>r <span class=\"token string\">\"example.md\"</span> <span class=\"token operator\">--</span>cached</code></pre></div>\n<br>\n<h2 id=\"커밋에서-파일-하나만-제외하기\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%B0%8B%EC%97%90%EC%84%9C-%ED%8C%8C%EC%9D%BC-%ED%95%98%EB%82%98%EB%A7%8C-%EC%A0%9C%EC%99%B8%ED%95%98%EA%B8%B0\" aria-label=\"커밋에서 파일 하나만 제외하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커밋에서 파일 하나만 제외하기</h2>\n<p><code class=\"language-text\">add</code> 명령어로 staging area에 파일을 추가하거나 커밋한 경우 다음 명령어를 사용하면 원하는 위치의 파일이나 파일명과 일치하는 파일을 <code class=\"language-text\">untracked</code> 상태로 되돌릴 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre class=\"language-powershell\"><code class=\"language-powershell\">$ git reset HEAD~1\n$ git reset HEAD &lt;파일명>\nUnstaged changes after reset:\nM\texample<span class=\"token punctuation\">.</span>md</code></pre></div>\n<br>\n<h2 id=\"modified-상태의-파일-되돌리기\" style=\"position:relative;\"><a href=\"#modified-%EC%83%81%ED%83%9C%EC%9D%98-%ED%8C%8C%EC%9D%BC-%EB%90%98%EB%8F%8C%EB%A6%AC%EA%B8%B0\" aria-label=\"modified 상태의 파일 되돌리기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>modified 상태의 파일 되돌리기</h2>\n<p>이미 커밋하고 수정한 파일(<code class=\"language-text\">modified</code> 상태)에서 수정이전의 상태로 가고싶은 경우에 <code class=\"language-text\">checkout</code> 명령어를 사용한다.</p>\n<p><code class=\"language-text\">git checkout --&lt;파일명&gt;</code></p>\n<p>하지만 해당 명령어는 그동안의 수정내용을 모두 지우고 복구되지도 않으니 주의해야한다.</p>\n<br>","excerpt":"버전관리컨트롤 시스템인 Git에서 파일을 실수로 추가하지 않았거나 추가하면 안될 파일의 상태를 바꾸고 싶을 때 어떻게 해주어야하는지 정리해보았다. 커밋 합치기 에서 프로젝트 초기에 설정해주는  등의 파일을 빼먹고 커밋했다면 다음 명령어를 사용하여 원…","tableOfContents":"<ul>\n<li>\n<p><a href=\"/git_03/#%EC%BB%A4%EB%B0%8B-%ED%95%A9%EC%B9%98%EA%B8%B0\">커밋 합치기</a></p>\n<ul>\n<li><a href=\"/git_03/#%EC%82%AD%EC%A0%9C\">삭제</a></li>\n</ul>\n</li>\n<li><a href=\"/git_03/#staging-area%EC%97%90%EC%84%9C-%ED%8C%8C%EC%9D%BC-%EC%A0%9C%EC%99%B8%ED%95%98%EA%B8%B0\">staging area에서 파일 제외하기</a></li>\n<li><a href=\"/git_03/#%EC%BB%A4%EB%B0%8B%EC%97%90%EC%84%9C-%ED%8C%8C%EC%9D%BC-%ED%95%98%EB%82%98%EB%A7%8C-%EC%A0%9C%EC%99%B8%ED%95%98%EA%B8%B0\">커밋에서 파일 하나만 제외하기</a></li>\n<li><a href=\"/git_03/#modified-%EC%83%81%ED%83%9C%EC%9D%98-%ED%8C%8C%EC%9D%BC-%EB%90%98%EB%8F%8C%EB%A6%AC%EA%B8%B0\">modified 상태의 파일 되돌리기</a></li>\n</ul>","fields":{"slug":"/git_03/"},"frontmatter":{"title":"Git _ 버전관리 상태 수정하기","date":"Oct 02, 2016","tags":["Git"],"keywords":["Development Note","Julia"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/git_03/","series":[{"slug":"/git_01/","title":"Git _ 파일 삭제를 위한 clean 명령어 사용하기","num":1},{"slug":"/git_02/","title":"Git _ 협업을 위한 stash 명령어 사용하기","num":2},{"slug":"/git_03/","title":"Git _ 버전관리 상태 수정하기","num":3},{"slug":"/git_04/","title":"Git _ 제외시킬 파일 관리하기","num":4},{"slug":"/git_05/","title":"Git _ 원격저장소 연결하기","num":5},{"slug":"/git_06/","title":"Git _ 태그 관리하기","num":6},{"slug":"/git_07/","title":"Git _ 도구 검색","num":7},{"slug":"/git_08/","title":"Git _ 히스토리 단장하기","num":8},{"slug":"/git_09/","title":"Git _ Reset 명확히 알고 가기","num":9}],"lastmod":"2016-10-02"}},"staticQueryHashes":["2027115977","694178885"]}